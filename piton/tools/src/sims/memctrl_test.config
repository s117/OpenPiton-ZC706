// Copyright (c) 2017 Princeton University
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of Princeton University nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY PRINCETON UNIVERSITY "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL PRINCETON UNIVERSITY BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// Tesbench configuration file for the memctrl_test environment

<memctrl_test>
    -model=memctrl_test
    -novera_build
    -novera_run
    -flist=$DV_ROOT/design/fpga_tests/memio_unit_tests/memctrl_test/rtl/Flist.memctrl_test
    -flist=$DV_ROOT/design/fpga_tests/memio_unit_tests/common/rtl/Flist.common
    -flist=$DV_ROOT/design/chipset/mc/rtl/Flist.mc
    -flist=$DV_ROOT/design/common/rtl/Flist.common
    -flist=$DV_ROOT/design/chip/tile/sparc/ifu/rtl/Flist.ifu_esl_lfsr
    -flist=$DV_ROOT/verif/env/memctrl_test/memctrl_test.flist
    -vcs_build_args=-v $DV_ROOT/design/chipset/rtl/storage_addr_trans.v
    // Generated IP sim netlists
    -vcs_build_args=-v $DV_ROOT/design/chipset/mc/xilinx/genesys2/ip_cores/mig_7series_0/mig_7series_0_sim_netlist.v
    -vcs_build_args=-v $DV_ROOT/design/chipset/xilinx/genesys2/ip_cores/afifo_mem_splitter/afifo_mem_splitter_sim_netlist.v
    -vcs_build_args=-v $DV_ROOT/design/chipset/xilinx/genesys2/ip_cores/afifo_splitter_mem/afifo_splitter_mem_sim_netlist.v
    // End Generated IP sim netlists
    -env_base=$DV_ROOT/verif/env/memctrl_test
    // Board specific stuff
    -vcs_build_args=+define+GENESYS2_BOARD
    -pre_process_cmd="$DV_ROOT/verif/env/memctrl_test/setup_ddr3_model.sh GENESYS2"
    // End board specific stuff
    -vcs_build_args=+incdir+$DV_ROOT/verif/env/test_infrstrct/
    -vcs_build_args=+incdir+$DV_ROOT/design/chipset/include/
    -vcs_build_args=+incdir+$DV_ROOT/design/include/
    -vcs_build_args=+incdir+$DV_ROOT/verif/env/memctrl_test/
    // Xilinx VIVADO simulation
    -vcs_build_args=-y $XILINX_VIVADO/data/verilog/src/unisims
    -vcs_build_args=-y $XILINX_VIVADO/data/verilog/src/unimacro
    -vcs_build_args=-y $XILINX_VIVADO/data/verilog/src/retarget
    // Secure IP for MIG
    -vcs_build_args=-f $XILINX_VIVADO/data/secureip/in_fifo/in_fifo_cell.list.f
    -vcs_build_args=-f $XILINX_VIVADO/data/secureip/out_fifo/out_fifo_cell.list.f
    -vcs_build_args=-f $XILINX_VIVADO/data/secureip/iserdese2/iserdese2_cell.list.f
    -vcs_build_args=-f $XILINX_VIVADO/data/secureip/oserdese2/oserdese2_cell.list.f
    -vcs_build_args=-f $XILINX_VIVADO/data/secureip/phaser_in/phaser_in_cell.list.f
    -vcs_build_args=-f $XILINX_VIVADO/data/secureip/phaser_out/phaser_out_cell.list.f
    -vcs_build_args=-f $XILINX_VIVADO/data/secureip/phy_control/phy_control_cell.list.f
    // End Secure IP for MIG
    -vcs_build_args=+incdir+$XILINX_VIVADO/data/verilog/src
    -vcs_build_args=+libext+.v
    -vcs_build_args=$XILINX_VIVADO/data/verilog/src/glbl.v
    -vcs_build_args=+verilog2001ext+.vp
    -vcs_build_args=-lca
    -vcs_build_args=-Mupdate
    -vcs_build_args=+v2k
    // End Xilinx VIVADO simulation
    -vcs_build_args=+notimingcheck
    -vcs_build_args=+nospecify
    -vcs_build_args=+nbaopt
    -vcs_build_args=-Xstrict=1 -notice
    -vcs_build_args=-e SimvMain $DV_ROOT/verif/env/iss/pli/main.cc
    -sim_run_args=+test_cases_path=$DV_ROOT/verif/env/memctrl_test/test_cases/
</memctrl_test>
