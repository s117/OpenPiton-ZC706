// Copyright (c) 2017 Princeton University
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of Princeton University nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
// 
// THIS SOFTWARE IS PROVIDED BY PRINCETON UNIVERSITY "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL PRINCETON UNIVERSITY BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

/*
 * Execution Drafting LFSR test case state0 sink bits file.
 * Provides the bits for the monitor to check against.
 *
 * Format of bits:
 *      * 0 - 15: lfsr_state_f
 *      * 16: lfsr_out_f
 */
0_0000_0000_0000_0000        // Cycle after reset, signals applied to load seed
0_0000_0000_0000_0000        // Signals applied on this cycle, but monitor will not see it on the output yet
0_0000_0000_0000_0000        // Check seed if 0 was loaded
0_0000_0000_0000_0000        // Since state is 0 and we just step for 10 cycles, nothing should change
0_0000_0000_0000_0000
0_0000_0000_0000_0000
0_0000_0000_0000_0000
0_0000_0000_0000_0000
0_0000_0000_0000_0000
0_0000_0000_0000_0000
0_0000_0000_0000_0000
0_0000_0000_0000_0000
0_0000_0000_0000_0000
