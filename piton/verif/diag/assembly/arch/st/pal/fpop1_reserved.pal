:/***********************************************************************
: *
: *  Description:
: *  	fpop1 reserved -> illegal instruction traps
: *
: **********************************************************************/
:#define H_T0_Fp_exception_other_0x22
:#define My_T0_Fp_exception_other_0x22 inc %l7; done; nop

:#define ENABLE_T0_Fp_disabled_0x20
:#include "boot.s"
:
:.text
:.global main  
:
$how_many_illegal = 0;

:	
:main:
:        wr %g0, 4, %fprs
:        setx initfp, %l0, %l1
:        ldd [%l1], %f0
:        mov %g0, %l7       ! counter
:	
:reserved:
$opcode_save=0;
$opcode=0;
$opcode_hex=0;
$illegal=0;

$op = 0x2;
$op3 = 0x34;
$opcode_save = ($op<<30) | ($op3<<19);

for ($opf=0; $opf<0x200; $opf++){
    $opf_l = $opf & 0xf;
    $opf_h = ($opf>>4) & 0x1f;
#:! h=$opf_h l=$opf_l
    if (($opf_h==0) && ($opf_l==0 || $opf_l==4 || $opf_l==8 || 
			$opf_l==0xc || $opf_l==0xd || $opf_l==0xe || $opf_l==0xf)){
	$illegal=1;
    } elsif ($opf_h==1){
	$illegal=1;
    } elsif ($opf_h==2 && ($opf_l!=9 && $opf_l!=0xa && $opf_l!=0xb)){
	$illegal=1;
    } elsif ($opf_h==3){
	$illegal=1;
    } elsif ($opf_h==4 && ($opf_l==0 || $opf_l==4 || $opf_l==8 || $opf_l==0xc)){
	$illegal=1;
    } elsif ($opf_h==5){
	$illegal=1;
    } elsif ($opf_h==6 && ($opf_l!=9 && $opf_l!=0xe)){
	$illegal=1;
    } elsif ($opf_h==7){
	$illegal=1;
    } elsif ($opf_h==8 && ($opf_l!=1 && $opf_l!=2 && $opf_l!=3 && $opf_l!=4 &&
			   $opf_l!=8 && $opf_l!=0xc)){
	$illegal=1;
    } elsif ($opf_h==9 || $opf_h==0xa || $opf_h==0xb){
	$illegal=1;
    } elsif ($opf_h==0xc && ($opf_l==0 || $opf_l==1 || $opf_l==2 || $opf_l==3 ||
			     $opf_l==5 || $opf_l==0xa || $opf_l==0xf)){
	$illegal=1;
    } elsif ($opf_h==0xd && ($opf_l!=1 && $opf_l!=2 && $opf_l!=3)){
	$illegal=1;
    } elsif ($opf_h>=0xe && $opf_h<=0x1f){
	$illegal=1;
    }
    else {
	$illegal=0;
    }
    
    if ($illegal==1){
	$opcode  = $opcode_save | ($opf<<5);
	$opcode_hex = sprintf("%x", $opcode);
	$how_many_illegal++;
:! opf[8:4]=$opf_h	opf[3:0]=$opf_l   
:	.word 0x$opcode_hex
}

}

:
:checking:       
:	 setx $how_many_illegal, %l0, %l3
:        cmp %l7, %l3
:        bne fail
:        nop
:
:
:	
:pass:
:	ta		T_GOOD_TRAP
:
:fail:
:	ta		T_BAD_TRAP
:
:
:	
:/*******************************************************
: * Data section 
: *******************************************************/
:	
:.data
:initfp:
:	.xword 0x123456789abcdef0
:	.xword 0xaabbccddeeff0011
