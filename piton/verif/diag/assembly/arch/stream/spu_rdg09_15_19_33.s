// Modified by Princeton University on June 9th, 2015
/*
* ========== Copyright Header Begin ==========================================
* 
* OpenSPARC T1 Processor File: spu_rdg09_15_19_33.s
* Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
* 
* The above named program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License version 2 as published by the Free Software Foundation.
* 
* The above named program is distributed in the hope that it will be 
* useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
* 
* You should have received a copy of the GNU General Public
* License along with this work; if not, write to the Free Software
* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
* 
* ========== Copyright Header End ============================================
*/
/*
  	   * Random diag for testing LSU 
*/
#define MAIN_PAGE_NUCLEUS_ALSO
#define MAIN_TEXT_DATA_ALSO
#define THREAD_COUNT 4 
#define MAIN_PAGE_HV_ALSO
#include "spu_diag.h"
#include "enable_traps.h"
#include "boot.s"
.text
.global main


.global run_th_0

.global run_th_1

.global run_th_2

.global run_th_3

main:

	 th_fork(run_th)
        		ba diag_fail    /* should not come here */
        		nop 

run_th_0:
         wr %g0, 64, %asi

         ta T_CHANGE_HPRIV
         nop


        setpa   (spu_data_src, %l0, %l1, %l5)
        stxa    %l5, [%g0+REG_MPA_ADDR] %asi
        ! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
        setpa   (spu_data_dest, %l0, %l1, %l6)
        stxa    %g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

        add     %g0, 64, %i3  ! %i3 contains number of xwords to load/store
        mov     0, %g1
        sllx    %g1,    11,     %g1     ! add the thread ID to the SPU_MA_CTL reg
        or      %g1,    %i3,    %i3
        sub     %i3, 1,  %i0    ! #of xwords to load to MAMEM minus 1


        stxa    %i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
        ldxa    [%g0+MASync_ADDR] %asi, %l7

        ta T_CHANGE_NONHPRIV
	nop

	 wr %g0, 129, %asi

	 ta T_CHANGE_PRIV 
	 nop 
	 set 2100359945, %i0
	 set 1231065961, %i1
	 set 3416807506, %i2
	 set 2708445565, %i3
	 set 14111486, %i4
	 set 390932088, %i5
	 set 900121245, %i6
	 set 557030946, %i7
	 set 1829041424, %o0
	 set 85461381, %o1
	 set 1222315208, %o2
	 set 2890208915, %o3
	 set 1439597041, %o4
	 set 3906396952, %o5
	 set 354862893, %o6
	 set 2956603988, %o7
	 set 3075026634, %l0
	 set 3776826405, %l1
	 set 1673132954, %l2
	 set 3333821888, %l3
	 set 1355849931, %l4
	 set 836355895, %l5
	 set 52471420, %l6
	 set 388744802, %l7
	 set 449381604, %g0
	 set 2852058857, %g1
	 set 1649155642, %g2
	 set 3572697218, %g3
	 set 1359241164, %g4
	 set 1379878811, %g5
	 set 2596343006, %g6
	 set 1045758467, %g7

wr %g0, 0x4, %fprs 
	 setx self_modcode, %l0, %l3
	 ldd [%l3], %f0
	 add 0x8, %l3, %l3
	 ldd [%l3], %f2
	 add 0x8, %l3, %l3
	 ldd [%l3], %f4
	 add 0x8, %l3, %l3
	 ldd [%l3], %f6
	 add 0x8, %l3, %l3
	 ldd [%l3], %f8
	 add 0x8, %l3, %l3
	 ldd [%l3], %f10
	 add 0x8, %l3, %l3
	 ldd [%l3], %f12
	 add 0x8, %l3, %l3
	 ldd [%l3], %f14
	 add 0x8, %l3, %l3
	 ldd [%l3], %f16
	 add 0x8, %l3, %l3
	 ldd [%l3], %f18
	 add 0x8, %l3, %l3
	 ldd [%l3], %f20
	 add 0x8, %l3, %l3
	 ldd [%l3], %f22
	 add 0x8, %l3, %l3
	 ldd [%l3], %f24
	 add 0x8, %l3, %l3
	 ldd [%l3], %f26
	 add 0x8, %l3, %l3
	 ldd [%l3], %f28
	 add 0x8, %l3, %l3
	 ldd [%l3], %f30
	 add 0x8, %l3, %l3
	 ldd [%l3], %f32
	 add 0x8, %l3, %l3
	 ldd [%l3], %f34
	 add 0x8, %l3, %l3
	 ldd [%l3], %f36
	 add 0x8, %l3, %l3
	 ldd [%l3], %f38
	 add 0x8, %l3, %l3
	 ldd [%l3], %f40
	 add 0x8, %l3, %l3
	 ldd [%l3], %f42
	 add 0x8, %l3, %l3
	 ldd [%l3], %f44
	 add 0x8, %l3, %l3
	 ldd [%l3], %f46
	 add 0x8, %l3, %l3
	 ldd [%l3], %f48
	 add 0x8, %l3, %l3
	 ldd [%l3], %f50
	 add 0x8, %l3, %l3
	 ldd [%l3], %f52
	 add 0x8, %l3, %l3
	 ldd [%l3], %f54
	 add 0x8, %l3, %l3
	 ldd [%l3], %f56
	 add 0x8, %l3, %l3
	 ldd [%l3], %f58
	 add 0x8, %l3, %l3
	 ldd [%l3], %f60
	 add 0x8, %l3, %l3
	 ldd [%l3], %f62
	 add 0x8, %l3, %l3
	 setx data2, %l0, %l3
	 setx self_modcode, %l0, %l1

.global ecc_err_0 
ecc_err_0:
!$EV error(0, expr(@VA(.MAIN.ecc_err_0),16,16),1, DC_DATA, 49) 
	 .word 0xf3f4e000


.global ecc_err_1 
ecc_err_1:
!$EV error(0, expr(@VA(.MAIN.ecc_err_1),16,16),1, IC_DATA, IR,2,x) 
	 .word 0xf5e4e000

	 .word 0xf2fcdd40


.global ecc_err_2 
ecc_err_2:
!$EV error(0, expr(@VA(.MAIN.ecc_err_2),16,16),1, DC_TAG, 45) 
	 .word 0xee54e002

	 .word 0xeeacc540

	 .word 0xf8ece024

	 .word 0xf26cc000

	 .word 0xec3ce010

	 .word 0xfafcdd40


.global ecc_err_3 
ecc_err_3:
!$EV error(0, expr(@VA(.MAIN.ecc_err_3),16,16),1, DC_TAG, 9) 
	 .word 0xf9f4e000

	 .word 0xf6a4dd60

	 .word 0xede4d020

	 .word 0xf1f4e000


.global ecc_err_4 
ecc_err_4:
!$EV error(0, expr(@VA(.MAIN.ecc_err_4),16,16),1, IC_TAG, IR,12, x) 
	 .word 0xf05ce008


.global ecc_err_5 
ecc_err_5:
!$EV error(0, expr(@VA(.MAIN.ecc_err_5),16,16),1, IC_TAG, IR,13, x) 
	 .word 0xf20ce002

	 .word 0xec6ce035


.global ecc_err_6 
ecc_err_6:
!$EV error(0, expr(@VA(.MAIN.ecc_err_6),16,16),1, DC_DATA, 26) 
	 .word 0xf4ecdd60


.global ecc_err_7 
ecc_err_7:
!$EV error(0, expr(@VA(.MAIN.ecc_err_7),16,16),1, DC_DATA, 2) 
	 .word 0xeff4e000

	 .word 0xfa8cd020

	 .word 0xec74c000


.global ecc_err_8 
ecc_err_8:
!$EV error(0, expr(@VA(.MAIN.ecc_err_8),16,16),1, DC_DATA, 3) 
	 .word 0xf66cc000


.global ecc_err_9 
ecc_err_9:
!$EV error(0, expr(@VA(.MAIN.ecc_err_9),16,16),1, DC_DATA, 6) 
	 .word 0xeaecc560


.global ecc_err_10 
ecc_err_10:
!$EV error(0, expr(@VA(.MAIN.ecc_err_10),16,16),1, DC_TAG, 13) 
	 .word 0xf0ecd120


.global ecc_err_11 
ecc_err_11:
!$EV error(0, expr(@VA(.MAIN.ecc_err_11),16,16),1, DC_DATA, 5) 
	 .word 0xee6ce01e


.global ecc_err_12 
ecc_err_12:
!$EV error(0, expr(@VA(.MAIN.ecc_err_12),16,16),1, DC_TAG, 62) 
	 .word 0xf6ece029


.global ecc_err_13 
ecc_err_13:
!$EV error(0, expr(@VA(.MAIN.ecc_err_13),16,16),1, IC_TAG, IR,20, x) 
	 .word 0xf2ece036


.global ecc_err_14 
ecc_err_14:
!$EV error(0, expr(@VA(.MAIN.ecc_err_14),16,16),1, DC_DATA, 9) 
	 .word 0xeaece03a


.global ecc_err_15 
ecc_err_15:
!$EV error(0, expr(@VA(.MAIN.ecc_err_15),16,16),1, IC_DATA, IR,14,x) 
	 .word 0xea04e004

	 .word 0xeeecdc40


.global ecc_err_16 
ecc_err_16:
!$EV error(0, expr(@VA(.MAIN.ecc_err_16),16,16),1, IC_DATA, IR,23,x) 
	 .word 0xececc440

	 .word 0xf1f4d020


.global ecc_err_17 
ecc_err_17:
!$EV error(0, expr(@VA(.MAIN.ecc_err_17),16,16),1, IC_TAG, IR,4, x) 
	 .word 0xf6c4c540

	 .word 0xf67cc000

	 .word 0xf824c000

	 .word 0xf0a4e000

	 .word 0xf1f4c480

	 .word 0xf47ce004

	 .word 0xeab4c580


.global ecc_err_18 
ecc_err_18:
!$EV error(0, expr(@VA(.MAIN.ecc_err_18),16,16),1, DC_TAG, 38) 
	 .word 0xf46ce028


.global ecc_err_19 
ecc_err_19:
!$EV error(0, expr(@VA(.MAIN.ecc_err_19),16,16),1, DC_DATA, 44) 
	 .word 0xebe4e000


.global ecc_err_20 
ecc_err_20:
!$EV error(0, expr(@VA(.MAIN.ecc_err_20),16,16),1, DC_DATA, 37) 
	 .word 0xeff4e000

	 .word 0xf684e000

	 .word 0xf8ece021


.global ecc_err_21 
ecc_err_21:
!$EV error(0, expr(@VA(.MAIN.ecc_err_21),16,16),1, DC_TAG, 37) 
	 .word 0xf2ece03a

	 .word 0xf684dd60


.global ecc_err_22 
ecc_err_22:
!$EV error(0, expr(@VA(.MAIN.ecc_err_22),16,16),1, DC_DATA, 1) 
	 .word 0xfa7ce004

	 .word 0xec74c000


.global ecc_err_23 
ecc_err_23:
!$EV error(0, expr(@VA(.MAIN.ecc_err_23),16,16),1, DC_DATA, 57) 
	 .word 0xf6d4dc40


.global ecc_err_24 
ecc_err_24:
!$EV error(0, expr(@VA(.MAIN.ecc_err_24),16,16),1, IC_TAG, IR,31, x) 
	 .word 0xf06cc000


.global ecc_err_25 
ecc_err_25:
!$EV error(0, expr(@VA(.MAIN.ecc_err_25),16,16),1, DC_TAG, 35) 
	 .word 0xf604e004


.global ecc_err_26 
ecc_err_26:
!$EV error(0, expr(@VA(.MAIN.ecc_err_26),16,16),1, DC_DATA, 11) 
	 .word 0xf67cc000


.global ecc_err_27 
ecc_err_27:
!$EV error(0, expr(@VA(.MAIN.ecc_err_27),16,16),1, IC_TAG, IR,6, x) 
	 .word 0xf9e4e000


.global ecc_err_28 
ecc_err_28:
!$EV error(0, expr(@VA(.MAIN.ecc_err_28),16,16),1, DC_DATA, 58) 
	 .word 0xf6d4c480

	 .word 0xf06cc000

	 .word 0xea14c000


.global ecc_err_29 
ecc_err_29:
!$EV error(0, expr(@VA(.MAIN.ecc_err_29),16,16),1, DC_DATA, 54) 
	 .word 0xf24ce034

	 .word 0xf64cc000

	 .word 0xf3e4e000

	 .word 0xf07ce000

	 .word 0xee7ce004

	 .word 0xecb4e002

	 .word 0xf4fce000

	 .word 0xf8c4e004


.global ecc_err_30 
ecc_err_30:
!$EV error(0, expr(@VA(.MAIN.ecc_err_30),16,16),1, DC_TAG, 27) 
	 .word 0xec9cc580


.global ecc_err_31 
ecc_err_31:
!$EV error(0, expr(@VA(.MAIN.ecc_err_31),16,16),1, IC_TAG, IR,2, x) 
	 .word 0xf1f4dc60

	 .word 0xf0fcd120


.global ecc_err_32 
ecc_err_32:
!$EV error(0, expr(@VA(.MAIN.ecc_err_32),16,16),1, IC_TAG, IR,23, x) 
	 .word 0xf9f4c580


.global ecc_err_33 
ecc_err_33:
!$EV error(0, expr(@VA(.MAIN.ecc_err_33),16,16),1, DC_DATA, 44) 
	 .word 0xedf4c580


.global ecc_err_34 
ecc_err_34:
!$EV error(0, expr(@VA(.MAIN.ecc_err_34),16,16),1, IC_DATA, IR,20,x) 
	 .word 0xec6ce00d

	 .word 0xf85ce008

	 .word 0xefe4d100


.global ecc_err_35 
ecc_err_35:
!$EV error(0, expr(@VA(.MAIN.ecc_err_35),16,16),1, IC_TAG, IR,11, x) 
	 .word 0xee6ce027


.global ecc_err_36 
ecc_err_36:
!$EV error(0, expr(@VA(.MAIN.ecc_err_36),16,16),1, IC_TAG, IR,19, x) 
	 .word 0xf20cc000


.global ecc_err_37 
ecc_err_37:
!$EV error(0, expr(@VA(.MAIN.ecc_err_37),16,16),1, IC_DATA, IR,6,x) 
	 .word 0xf7f4e000


.global ecc_err_38 
ecc_err_38:
!$EV error(0, expr(@VA(.MAIN.ecc_err_38),16,16),1, IC_DATA, IR,16,x) 
	 .word 0xf3f4e000

	 .word 0xebe4e000

	 .word 0xf8b4e002


.global ecc_err_39 
ecc_err_39:
!$EV error(0, expr(@VA(.MAIN.ecc_err_39),16,16),1, DC_DATA, 35) 
	 .word 0xf06cc000

	 .word 0xf014e000

	 .word 0xec3ce010


.global ecc_err_40 
ecc_err_40:
!$EV error(0, expr(@VA(.MAIN.ecc_err_40),16,16),1, IC_DATA, IR,25,x) 
	 .word 0xea54e002

	 .word 0xecc4c540


.global ecc_err_41 
ecc_err_41:
!$EV error(0, expr(@VA(.MAIN.ecc_err_41),16,16),1, DC_DATA, 10) 
	 .word 0xec04c000


.global ecc_err_42 
ecc_err_42:
!$EV error(0, expr(@VA(.MAIN.ecc_err_42),16,16),1, IC_TAG, IR,4, x) 
	 .word 0xebe4c580

	 .word 0xeeece002


.global ecc_err_43 
ecc_err_43:
!$EV error(0, expr(@VA(.MAIN.ecc_err_43),16,16),1, DC_TAG, 8) 
	 .word 0xf7f4c480


.global ecc_err_44 
ecc_err_44:
!$EV error(0, expr(@VA(.MAIN.ecc_err_44),16,16),1, DC_TAG, 32) 
	 .word 0xf07cc000


.global ecc_err_45 
ecc_err_45:
!$EV error(0, expr(@VA(.MAIN.ecc_err_45),16,16),1, IC_TAG, IR,22, x) 
	 .word 0xf66cc000


.global ecc_err_46 
ecc_err_46:
!$EV error(0, expr(@VA(.MAIN.ecc_err_46),16,16),1, DC_DATA, 62) 
	 .word 0xf86cc000

	 .word 0xf1e4d020


.global ecc_err_47 
ecc_err_47:
!$EV error(0, expr(@VA(.MAIN.ecc_err_47),16,16),1, DC_TAG, 34) 
	 .word 0xeaece003


.global ecc_err_48 
ecc_err_48:
!$EV error(0, expr(@VA(.MAIN.ecc_err_48),16,16),1, IC_DATA, IR,20,x) 
	 .word 0xea6ce031


.global ecc_err_49 
ecc_err_49:
!$EV error(0, expr(@VA(.MAIN.ecc_err_49),16,16),1, DC_DATA, 31) 
	 .word 0xee6ce016

	 .word 0xf4dce008

	 .word 0xf86ce008


.global ecc_err_50 
ecc_err_50:
!$EV error(0, expr(@VA(.MAIN.ecc_err_50),16,16),1, IC_DATA, IR,26,x) 
	 .word 0xfa7cc000

	 .word 0xf8acc560


.global ecc_err_51 
ecc_err_51:
!$EV error(0, expr(@VA(.MAIN.ecc_err_51),16,16),1, DC_DATA, 55) 
	 .word 0xedf4e000

	 .word 0xfa44e000


.global ecc_err_52 
ecc_err_52:
!$EV error(0, expr(@VA(.MAIN.ecc_err_52),16,16),1, DC_TAG, 14) 
	 .word 0xefe4c480


.global ecc_err_53 
ecc_err_53:
!$EV error(0, expr(@VA(.MAIN.ecc_err_53),16,16),1, DC_TAG, 56) 
	 .word 0xec44c000

	 .word 0xfa5ce000


.global ecc_err_54 
ecc_err_54:
!$EV error(0, expr(@VA(.MAIN.ecc_err_54),16,16),1, IC_DATA, IR,5,x) 
	 .word 0xf07ce000


.global ecc_err_55 
ecc_err_55:
!$EV error(0, expr(@VA(.MAIN.ecc_err_55),16,16),1, DC_TAG, 39) 
	 .word 0xf66cc000

	 .word 0xfa7cc000

	 .word 0xec4ce039


.global ecc_err_56 
ecc_err_56:
!$EV error(0, expr(@VA(.MAIN.ecc_err_56),16,16),1, DC_TAG, 49) 
	 .word 0xeff4d120

	 .word 0xf46cc000


.global ecc_err_57 
ecc_err_57:
!$EV error(0, expr(@VA(.MAIN.ecc_err_57),16,16),1, IC_TAG, IR,7, x) 
	 .word 0xebf4c460


.global ecc_err_58 
ecc_err_58:
!$EV error(0, expr(@VA(.MAIN.ecc_err_58),16,16),1, DC_DATA, 34) 
	 .word 0xec6ce018


.global ecc_err_59 
ecc_err_59:
!$EV error(0, expr(@VA(.MAIN.ecc_err_59),16,16),1, IC_TAG, IR,10, x) 
	 .word 0xefe4e000

	 .word 0xea6ce008


.global ecc_err_60 
ecc_err_60:
!$EV error(0, expr(@VA(.MAIN.ecc_err_60),16,16),1, DC_TAG, 22) 
	 .word 0xf25ce008

	 .word 0xecf4e008


.global ecc_err_61 
ecc_err_61:
!$EV error(0, expr(@VA(.MAIN.ecc_err_61),16,16),1, DC_DATA, 19) 
	 .word 0xf87ce000


.global ecc_err_62 
ecc_err_62:
!$EV error(0, expr(@VA(.MAIN.ecc_err_62),16,16),1, DC_DATA, 12) 
	 .word 0xf07cc000

	 .word 0xf6a4e000

	 .word 0xeaecc440


.global ecc_err_63 
ecc_err_63:
!$EV error(0, expr(@VA(.MAIN.ecc_err_63),16,16),1, DC_TAG, 32) 
	 .word 0xf0d4d120


.global ecc_err_64 
ecc_err_64:
!$EV error(0, expr(@VA(.MAIN.ecc_err_64),16,16),1, IC_TAG, IR,21, x) 
	 .word 0xf4ecdc60


.global ecc_err_65 
ecc_err_65:
!$EV error(0, expr(@VA(.MAIN.ecc_err_65),16,16),1, IC_DATA, IR,19,x) 
	 .word 0xea6cc000

	 .word 0xeca4dd60


.global ecc_err_66 
ecc_err_66:
!$EV error(0, expr(@VA(.MAIN.ecc_err_66),16,16),1, DC_TAG, 59) 
	 .word 0xefe4e000


.global ecc_err_67 
ecc_err_67:
!$EV error(0, expr(@VA(.MAIN.ecc_err_67),16,16),1, DC_DATA, 11) 
	 .word 0xee84e004


.global ecc_err_68 
ecc_err_68:
!$EV error(0, expr(@VA(.MAIN.ecc_err_68),16,16),1, DC_TAG, 6) 
	 .word 0xeff4d000

	 .word 0xf1e4e000


.global ecc_err_69 
ecc_err_69:
!$EV error(0, expr(@VA(.MAIN.ecc_err_69),16,16),1, DC_DATA, 40) 
	 .word 0xf46cc000


.global ecc_err_70 
ecc_err_70:
!$EV error(0, expr(@VA(.MAIN.ecc_err_70),16,16),1, DC_TAG, 26) 
	 .word 0xf1f4c560


.global ecc_err_71 
ecc_err_71:
!$EV error(0, expr(@VA(.MAIN.ecc_err_71),16,16),1, DC_DATA, 25) 
	 .word 0xede4c580


.global ecc_err_72 
ecc_err_72:
!$EV error(0, expr(@VA(.MAIN.ecc_err_72),16,16),1, DC_TAG, 55) 
	 .word 0xea6ce009


.global ecc_err_73 
ecc_err_73:
!$EV error(0, expr(@VA(.MAIN.ecc_err_73),16,16),1, IC_DATA, IR,20,x) 
	 .word 0xec54c000

	 .word 0xf2fce000


.global ecc_err_74 
ecc_err_74:
!$EV error(0, expr(@VA(.MAIN.ecc_err_74),16,16),1, DC_TAG, 9) 
	 .word 0xf8ecdc60


.global ecc_err_75 
ecc_err_75:
!$EV error(0, expr(@VA(.MAIN.ecc_err_75),16,16),1, IC_DATA, IR,18,x) 
	 .word 0xedf4e000


.global ecc_err_76 
ecc_err_76:
!$EV error(0, expr(@VA(.MAIN.ecc_err_76),16,16),1, IC_TAG, IR,14, x) 
	 .word 0xea54c000

	 .word 0xecccdc40

	 .word 0xf60cc000

	 .word 0xf854e000

	 .word 0xecfcd100


.global ecc_err_77 
ecc_err_77:
!$EV error(0, expr(@VA(.MAIN.ecc_err_77),16,16),1, IC_TAG, IR,22, x) 
	 .word 0xf3e4e000

	 .word 0xede4c460

	 .word 0xfafcdd60

	 .word 0xebf4c480


.global ecc_err_78 
ecc_err_78:
!$EV error(0, expr(@VA(.MAIN.ecc_err_78),16,16),1, DC_TAG, 39) 
	 .word 0xf2ecc580

	 .word 0xebf4dc60

	 .word 0xf46ce00f

	 .word 0xec7cc000

	 .word 0xfa7cc000

	 .word 0xf86cc000


.global ecc_err_79 
ecc_err_79:
!$EV error(0, expr(@VA(.MAIN.ecc_err_79),16,16),1, IC_DATA, IR,31,x) 
	 .word 0xf87cc000

	 .word 0xf86ce017


.global ecc_err_80 
ecc_err_80:
!$EV error(0, expr(@VA(.MAIN.ecc_err_80),16,16),1, IC_TAG, IR,3, x) 
	 .word 0xea6ce038

	 .word 0xee84e000

	 .word 0xecfcdc60


.global ecc_err_81 
ecc_err_81:
!$EV error(0, expr(@VA(.MAIN.ecc_err_81),16,16),1, IC_DATA, IR,28,x) 
	 .word 0xedf4d020

	 .word 0xf1e4e000


.global ecc_err_82 
ecc_err_82:
!$EV error(0, expr(@VA(.MAIN.ecc_err_82),16,16),1, DC_DATA, 19) 
	 .word 0xec7ce004


.global ecc_err_83 
ecc_err_83:
!$EV error(0, expr(@VA(.MAIN.ecc_err_83),16,16),1, DC_DATA, 37) 
	 .word 0xf67cc000

	 .word 0xfaf4c560


.global ecc_err_84 
ecc_err_84:
!$EV error(0, expr(@VA(.MAIN.ecc_err_84),16,16),1, DC_TAG, 1) 
	 .word 0xecece03a

	 .word 0xeafcc560

	 .word 0xf5e4e000

	 .word 0xea24e000

	 .word 0xf2f4d100


.global ecc_err_85 
ecc_err_85:
!$EV error(0, expr(@VA(.MAIN.ecc_err_85),16,16),1, IC_DATA, IR,20,x) 
	 .word 0xefe4d000


.global ecc_err_86 
ecc_err_86:
!$EV error(0, expr(@VA(.MAIN.ecc_err_86),16,16),1, DC_DATA, 15) 
	 .word 0xefe4dc40

	 .word 0xebf4dc40


.global ecc_err_87 
ecc_err_87:
!$EV error(0, expr(@VA(.MAIN.ecc_err_87),16,16),1, DC_DATA, 33) 
	 .word 0xf2ccc580

	 .word 0xefe4c540

	 .word 0xea94d000

	 .word 0xf1f4e000

	 .word 0xebf4c480


.global ecc_err_88 
ecc_err_88:
!$EV error(0, expr(@VA(.MAIN.ecc_err_88),16,16),1, DC_DATA, 11) 
	 .word 0xee6ce007


.global ecc_err_89 
ecc_err_89:
!$EV error(0, expr(@VA(.MAIN.ecc_err_89),16,16),1, DC_TAG, 29) 
	 .word 0xfa7ce004


.global ecc_err_90 
ecc_err_90:
!$EV error(0, expr(@VA(.MAIN.ecc_err_90),16,16),1, IC_TAG, IR,13, x) 
	 .word 0xf644e004

	 .word 0xf2acdd40

	 .word 0xecbce000


.global ecc_err_91 
ecc_err_91:
!$EV error(0, expr(@VA(.MAIN.ecc_err_91),16,16),1, DC_TAG, 30) 
	 .word 0xf3e4e000


.global ecc_err_92 
ecc_err_92:
!$EV error(0, expr(@VA(.MAIN.ecc_err_92),16,16),1, IC_TAG, IR,15, x) 
	 .word 0xee04c000


.global ecc_err_93 
ecc_err_93:
!$EV error(0, expr(@VA(.MAIN.ecc_err_93),16,16),1, DC_TAG, 41) 
	 .word 0xee6ce038


.global ecc_err_94 
ecc_err_94:
!$EV error(0, expr(@VA(.MAIN.ecc_err_94),16,16),1, DC_DATA, 12) 
	 .word 0xec84e000

	 .word 0xf8ece035

	 .word 0xf224e000

	 .word 0xf8b4e000


.global ecc_err_95 
ecc_err_95:
!$EV error(0, expr(@VA(.MAIN.ecc_err_95),16,16),1, DC_DATA, 16) 
	 .word 0xf7e4d000

	 .word 0xea24e000

	 .word 0xefe4e000


.global ecc_err_96 
ecc_err_96:
!$EV error(0, expr(@VA(.MAIN.ecc_err_96),16,16),1, DC_TAG, 13) 
	 .word 0xf66cc000


.global ecc_err_97 
ecc_err_97:
!$EV error(0, expr(@VA(.MAIN.ecc_err_97),16,16),1, DC_DATA, 32) 
	 .word 0xf1f4c560

	 .word 0xf2fcd020


.global ecc_err_98 
ecc_err_98:
!$EV error(0, expr(@VA(.MAIN.ecc_err_98),16,16),1, IC_DATA, IR,10,x) 
	 .word 0xf24ce00f

	 .word 0xee5ce000

	 .word 0xedf4e000

	 .word 0xf5e4e000


.global ecc_err_99 
ecc_err_99:
!$EV error(0, expr(@VA(.MAIN.ecc_err_99),16,16),1, DC_TAG, 47) 
	 .word 0xf9e4d120


.global ecc_err_100 
ecc_err_100:
!$EV error(0, expr(@VA(.MAIN.ecc_err_100),16,16),1, DC_TAG, 63) 
	 .word 0xf5e4d120

	 .word 0xebe4c480

	 .word 0xeeb4d000

	 .word 0xf07ce000


.global ecc_err_101 
ecc_err_101:
!$EV error(0, expr(@VA(.MAIN.ecc_err_101),16,16),1, DC_DATA, 42) 
	 .word 0xedf4e000


.global ecc_err_102 
ecc_err_102:
!$EV error(0, expr(@VA(.MAIN.ecc_err_102),16,16),1, IC_TAG, IR,5, x) 
	 .word 0xfa84e000

	 .word 0xede4e000

	 .word 0xecf4e008

	 .word 0xf1f4dc60


.global ecc_err_103 
ecc_err_103:
!$EV error(0, expr(@VA(.MAIN.ecc_err_103),16,16),1, DC_TAG, 2) 
	 .word 0xfa7cc000

	 .word 0xf86cc000


.global ecc_err_104 
ecc_err_104:
!$EV error(0, expr(@VA(.MAIN.ecc_err_104),16,16),1, DC_TAG, 36) 
	 .word 0xf64ce010


.global ecc_err_105 
ecc_err_105:
!$EV error(0, expr(@VA(.MAIN.ecc_err_105),16,16),1, IC_TAG, IR,26, x) 
	 .word 0xf48ce006


.global ecc_err_106 
ecc_err_106:
!$EV error(0, expr(@VA(.MAIN.ecc_err_106),16,16),1, IC_TAG, IR,15, x) 
	 .word 0xfa0cc000


.global ecc_err_107 
ecc_err_107:
!$EV error(0, expr(@VA(.MAIN.ecc_err_107),16,16),1, DC_TAG, 60) 
	 .word 0xf46ce013


.global ecc_err_108 
ecc_err_108:
!$EV error(0, expr(@VA(.MAIN.ecc_err_108),16,16),1, IC_DATA, IR,11,x) 
	 .word 0xec7ce000


.global ecc_err_109 
ecc_err_109:
!$EV error(0, expr(@VA(.MAIN.ecc_err_109),16,16),1, IC_TAG, IR,10, x) 
	 .word 0xf4ecdd60

	 .word 0xea34e002


.global ecc_err_110 
ecc_err_110:
!$EV error(0, expr(@VA(.MAIN.ecc_err_110),16,16),1, DC_TAG, 37) 
	 .word 0xea7ce000


.global ecc_err_111 
ecc_err_111:
!$EV error(0, expr(@VA(.MAIN.ecc_err_111),16,16),1, DC_TAG, 44) 
	 .word 0xee7cc000


.global ecc_err_112 
ecc_err_112:
!$EV error(0, expr(@VA(.MAIN.ecc_err_112),16,16),1, DC_TAG, 13) 
	 .word 0xf7e4dc60

	 .word 0xeaece007


.global ecc_err_113 
ecc_err_113:
!$EV error(0, expr(@VA(.MAIN.ecc_err_113),16,16),1, IC_TAG, IR,29, x) 
	 .word 0xeff4c540


.global ecc_err_114 
ecc_err_114:
!$EV error(0, expr(@VA(.MAIN.ecc_err_114),16,16),1, DC_TAG, 26) 
	 .word 0xefe4e000


.global ecc_err_115 
ecc_err_115:
!$EV error(0, expr(@VA(.MAIN.ecc_err_115),16,16),1, DC_TAG, 20) 
	 .word 0xec6ce000


.global ecc_err_116 
ecc_err_116:
!$EV error(0, expr(@VA(.MAIN.ecc_err_116),16,16),1, IC_TAG, IR,9, x) 
	 .word 0xf66ce03d


.global ecc_err_117 
ecc_err_117:
!$EV error(0, expr(@VA(.MAIN.ecc_err_117),16,16),1, DC_DATA, 26) 
	 .word 0xf06cc000


.global ecc_err_118 
ecc_err_118:
!$EV error(0, expr(@VA(.MAIN.ecc_err_118),16,16),1, DC_DATA, 26) 
	 .word 0xf5e4e000

	 .word 0xecfce000

	 .word 0xf2ece03d

	 .word 0xf3f4e000

	 .word 0xf6ece013

	 .word 0xf5f4e000

	 .word 0xfa2cc000


.global ecc_err_119 
ecc_err_119:
!$EV error(0, expr(@VA(.MAIN.ecc_err_119),16,16),1, IC_TAG, IR,11, x) 
	 .word 0xf86ce016

	 .word 0xea7cc000

	 .word 0xfafcd000


.global ecc_err_120 
ecc_err_120:
!$EV error(0, expr(@VA(.MAIN.ecc_err_120),16,16),1, DC_DATA, 35) 
	 .word 0xf86cc000

	 .word 0xf5f4e000


.global ecc_err_121 
ecc_err_121:
!$EV error(0, expr(@VA(.MAIN.ecc_err_121),16,16),1, DC_TAG, 22) 
	 .word 0xf8dce000


.global ecc_err_122 
ecc_err_122:
!$EV error(0, expr(@VA(.MAIN.ecc_err_122),16,16),1, IC_TAG, IR,0, x) 
	 .word 0xee7ce004

	 .word 0xf6ece009


.global ecc_err_123 
ecc_err_123:
!$EV error(0, expr(@VA(.MAIN.ecc_err_123),16,16),1, IC_TAG, IR,1, x) 
	 .word 0xefe4e000

	 .word 0xf5e4e000

	 .word 0xee7ce004

	 .word 0xf0fcd000

	 .word 0xfa84e004


.global ecc_err_124 
ecc_err_124:
!$EV error(0, expr(@VA(.MAIN.ecc_err_124),16,16),1, DC_DATA, 44) 
	 .word 0xf27cc000

	 .word 0xecbcc580

	 .word 0xede4c440

	 .word 0xf044e004


.global ecc_err_125 
ecc_err_125:
!$EV error(0, expr(@VA(.MAIN.ecc_err_125),16,16),1, IC_DATA, IR,13,x) 
	 .word 0xee94d100

	 .word 0xf0a4d100


.global ecc_err_126 
ecc_err_126:
!$EV error(0, expr(@VA(.MAIN.ecc_err_126),16,16),1, DC_TAG, 13) 
	 .word 0xeeece02b

	 .word 0xfafce004

	 .word 0xfaccd020


.global ecc_err_127 
ecc_err_127:
!$EV error(0, expr(@VA(.MAIN.ecc_err_127),16,16),1, IC_TAG, IR,17, x) 
	 .word 0xf46cc000


.global ecc_err_128 
ecc_err_128:
!$EV error(0, expr(@VA(.MAIN.ecc_err_128),16,16),1, IC_DATA, IR,15,x) 
	 .word 0xf86cc000


.global ecc_err_129 
ecc_err_129:
!$EV error(0, expr(@VA(.MAIN.ecc_err_129),16,16),1, IC_DATA, IR,19,x) 
	 .word 0xec7ce000

	 .word 0xf26cc000


.global ecc_err_130 
ecc_err_130:
!$EV error(0, expr(@VA(.MAIN.ecc_err_130),16,16),1, DC_DATA, 47) 
	 .word 0xf27cc000

	 .word 0xf634e000

	 .word 0xfa84d120


.global ecc_err_131 
ecc_err_131:
!$EV error(0, expr(@VA(.MAIN.ecc_err_131),16,16),1, DC_DATA, 44) 
	 .word 0xf46ce03f

	 .word 0xf284d100

	 .word 0xecbcd000


.global ecc_err_132 
ecc_err_132:
!$EV error(0, expr(@VA(.MAIN.ecc_err_132),16,16),1, DC_TAG, 20) 
	 .word 0xf5e4e000

	 .word 0xf82cc000


.global ecc_err_133 
ecc_err_133:
!$EV error(0, expr(@VA(.MAIN.ecc_err_133),16,16),1, DC_TAG, 34) 
	 .word 0xf9f4d120


.global ecc_err_134 
ecc_err_134:
!$EV error(0, expr(@VA(.MAIN.ecc_err_134),16,16),1, DC_TAG, 43) 
	 .word 0xf844e000

	 .word 0xeedce008


.global ecc_err_135 
ecc_err_135:
!$EV error(0, expr(@VA(.MAIN.ecc_err_135),16,16),1, DC_DATA, 23) 
	 .word 0xf06cc000

	 .word 0xebf4e000

	 .word 0xee2ce004

	 .word 0xf8fcd100


.global ecc_err_136 
ecc_err_136:
!$EV error(0, expr(@VA(.MAIN.ecc_err_136),16,16),1, IC_TAG, IR,11, x) 
	 .word 0xececdc40

	 .word 0xf1e4e000

	 .word 0xf87cc000

	 .word 0xf0ece03b

	 .word 0xec1cc000

	 .word 0xf66cc000

	 .word 0xf66cc000

	 .word 0xebe4e000

	 .word 0xf0d4e002


.global ecc_err_137 
ecc_err_137:
!$EV error(0, expr(@VA(.MAIN.ecc_err_137),16,16),1, DC_DATA, 5) 
	 .word 0xf28ce039

	 .word 0xecbce000


.global ecc_err_138 
ecc_err_138:
!$EV error(0, expr(@VA(.MAIN.ecc_err_138),16,16),1, DC_TAG, 51) 
	 .word 0xf45cc000


.global ecc_err_139 
ecc_err_139:
!$EV error(0, expr(@VA(.MAIN.ecc_err_139),16,16),1, DC_DATA, 30) 
	 .word 0xfa8ce037

	 .word 0xeeece008

	 .word 0xea04e000

	 .word 0xfa44c000

	 .word 0xebe4e000

	 .word 0xf8d4d120


.global ecc_err_140 
ecc_err_140:
!$EV error(0, expr(@VA(.MAIN.ecc_err_140),16,16),1, DC_TAG, 59) 
	 .word 0xf40ce01e

	 .word 0xf8a4e004

	 .word 0xea6cc000


.global ecc_err_141 
ecc_err_141:
!$EV error(0, expr(@VA(.MAIN.ecc_err_141),16,16),1, DC_DATA, 13) 
	 .word 0xebe4dc40


.global ecc_err_142 
ecc_err_142:
!$EV error(0, expr(@VA(.MAIN.ecc_err_142),16,16),1, DC_TAG, 40) 
	 .word 0xeedce008


.global ecc_err_143 
ecc_err_143:
!$EV error(0, expr(@VA(.MAIN.ecc_err_143),16,16),1, DC_DATA, 37) 
	 .word 0xfa7ce004


.global ecc_err_144 
ecc_err_144:
!$EV error(0, expr(@VA(.MAIN.ecc_err_144),16,16),1, DC_DATA, 36) 
	 .word 0xf07cc000

	 .word 0xf404e000

	 .word 0xf47ce000

	 .word 0xf2fce000


.global ecc_err_145 
ecc_err_145:
!$EV error(0, expr(@VA(.MAIN.ecc_err_145),16,16),1, IC_DATA, IR,26,x) 
	 .word 0xebf4e000

	 .word 0xf6cce014


.global ecc_err_146 
ecc_err_146:
!$EV error(0, expr(@VA(.MAIN.ecc_err_146),16,16),1, IC_DATA, IR,7,x) 
	 .word 0xf67ce000


.global ecc_err_147 
ecc_err_147:
!$EV error(0, expr(@VA(.MAIN.ecc_err_147),16,16),1, IC_TAG, IR,5, x) 
	 .word 0xeeece00d

	 .word 0xeff4dc40


.global ecc_err_148 
ecc_err_148:
!$EV error(0, expr(@VA(.MAIN.ecc_err_148),16,16),1, DC_DATA, 52) 
	 .word 0xf214e002

	 .word 0xf46ce02a

	 .word 0xee4ce018


.global ecc_err_149 
ecc_err_149:
!$EV error(0, expr(@VA(.MAIN.ecc_err_149),16,16),1, DC_DATA, 7) 
	 .word 0xf4ece034


.global ecc_err_150 
ecc_err_150:
!$EV error(0, expr(@VA(.MAIN.ecc_err_150),16,16),1, DC_DATA, 10) 
	 .word 0xfa14c000

	 .word 0xf06ce02a


.global ecc_err_151 
ecc_err_151:
!$EV error(0, expr(@VA(.MAIN.ecc_err_151),16,16),1, IC_TAG, IR,15, x) 
	 .word 0xf0ece02f

	 .word 0xeff4dd60

	 .word 0xf0ecdd60


.global ecc_err_152 
ecc_err_152:
!$EV error(0, expr(@VA(.MAIN.ecc_err_152),16,16),1, IC_DATA, IR,11,x) 
	 .word 0xec9cd020

	 .word 0xf414e000

	 .word 0xec6cc000


.global ecc_err_153 
ecc_err_153:
!$EV error(0, expr(@VA(.MAIN.ecc_err_153),16,16),1, DC_DATA, 49) 
	 .word 0xfa7cc000


.global ecc_err_154 
ecc_err_154:
!$EV error(0, expr(@VA(.MAIN.ecc_err_154),16,16),1, DC_TAG, 36) 
	 .word 0xf86cc000

	 .word 0xeab4dc60

	 .word 0xebf4e000


.global ecc_err_155 
ecc_err_155:
!$EV error(0, expr(@VA(.MAIN.ecc_err_155),16,16),1, IC_TAG, IR,7, x) 
	 .word 0xeeece018

	 .word 0xebf4e000

	 .word 0xf094e000


.global ecc_err_156 
ecc_err_156:
!$EV error(0, expr(@VA(.MAIN.ecc_err_156),16,16),1, IC_DATA, IR,27,x) 
	 .word 0xf07ce000

	 .word 0xf8fcc560


.global ecc_err_157 
ecc_err_157:
!$EV error(0, expr(@VA(.MAIN.ecc_err_157),16,16),1, DC_DATA, 34) 
	 .word 0xf9e4d100

	 .word 0xf06ce018

	 .word 0xf46cc000


.global ecc_err_158 
ecc_err_158:
!$EV error(0, expr(@VA(.MAIN.ecc_err_158),16,16),1, DC_TAG, 27) 
	 .word 0xf7f4e000


.global ecc_err_159 
ecc_err_159:
!$EV error(0, expr(@VA(.MAIN.ecc_err_159),16,16),1, DC_DATA, 3) 
	 .word 0xec1cc000

	 .word 0xfa7cc000


.global ecc_err_160 
ecc_err_160:
!$EV error(0, expr(@VA(.MAIN.ecc_err_160),16,16),1, DC_TAG, 24) 
	 .word 0xf4ecc540

	 .word 0xeac4dc40

	 .word 0xf07ce004

	 .word 0xedf4dd40

	 .word 0xf27cc000


.global ecc_err_161 
ecc_err_161:
!$EV error(0, expr(@VA(.MAIN.ecc_err_161),16,16),1, IC_DATA, IR,28,x) 
	 .word 0xf86cc000

	 .word 0xeefce004


.global ecc_err_162 
ecc_err_162:
!$EV error(0, expr(@VA(.MAIN.ecc_err_162),16,16),1, IC_TAG, IR,31, x) 
	 .word 0xec7ce000

	 .word 0xf024e004

	 .word 0xeec4d000

	 .word 0xee6cc000

	 .word 0xeeecdd60

	 .word 0xf46ce001


.global ecc_err_163 
ecc_err_163:
!$EV error(0, expr(@VA(.MAIN.ecc_err_163),16,16),1, DC_TAG, 2) 
	 .word 0xedf4e000

	 .word 0xebe4d120

	 .word 0xeaece005

	 .word 0xf804c000

	 .word 0xf45cc000

	 .word 0xf0ecc580


.global ecc_err_164 
ecc_err_164:
!$EV error(0, expr(@VA(.MAIN.ecc_err_164),16,16),1, IC_TAG, IR,24, x) 
	 .word 0xea5ce008


.global ecc_err_165 
ecc_err_165:
!$EV error(0, expr(@VA(.MAIN.ecc_err_165),16,16),1, DC_TAG, 18) 
	 .word 0xf4ece01b


.global ecc_err_166 
ecc_err_166:
!$EV error(0, expr(@VA(.MAIN.ecc_err_166),16,16),1, DC_DATA, 55) 
	 .word 0xf9e4dc60

	 .word 0xea04c000

	 .word 0xf0f4e008

	 .word 0xeedce008

	 .word 0xececc460


.global ecc_err_167 
ecc_err_167:
!$EV error(0, expr(@VA(.MAIN.ecc_err_167),16,16),1, DC_TAG, 42) 
	 .word 0xf00cc000

	 .word 0xebf4c580

	 .word 0xf7f4d120


.global ecc_err_168 
ecc_err_168:
!$EV error(0, expr(@VA(.MAIN.ecc_err_168),16,16),1, DC_TAG, 9) 
	 .word 0xf694c480

	 .word 0xeefce004


.global ecc_err_169 
ecc_err_169:
!$EV error(0, expr(@VA(.MAIN.ecc_err_169),16,16),1, DC_TAG, 6) 
	 .word 0xea7cc000


.global ecc_err_170 
ecc_err_170:
!$EV error(0, expr(@VA(.MAIN.ecc_err_170),16,16),1, DC_DATA, 21) 
	 .word 0xf894e000

	 .word 0xf22cc000

	 .word 0xf284c480

	 .word 0xf9f4c560

	 .word 0xfa34c000


.global ecc_err_171 
ecc_err_171:
!$EV error(0, expr(@VA(.MAIN.ecc_err_171),16,16),1, DC_TAG, 46) 
	 .word 0xee6cc000


.global ecc_err_172 
ecc_err_172:
!$EV error(0, expr(@VA(.MAIN.ecc_err_172),16,16),1, DC_TAG, 54) 
	 .word 0xede4c440

	 .word 0xf26ce014


.global ecc_err_173 
ecc_err_173:
!$EV error(0, expr(@VA(.MAIN.ecc_err_173),16,16),1, DC_TAG, 45) 
	 .word 0xf6ecd100

	 .word 0xf04cc000


.global ecc_err_174 
ecc_err_174:
!$EV error(0, expr(@VA(.MAIN.ecc_err_174),16,16),1, IC_DATA, IR,6,x) 
	 .word 0xee4ce021


.global ecc_err_175 
ecc_err_175:
!$EV error(0, expr(@VA(.MAIN.ecc_err_175),16,16),1, DC_TAG, 24) 
	 .word 0xebf4c480


.global ecc_err_176 
ecc_err_176:
!$EV error(0, expr(@VA(.MAIN.ecc_err_176),16,16),1, DC_TAG, 56) 
	 .word 0xf3e4c560


.global ecc_err_177 
ecc_err_177:
!$EV error(0, expr(@VA(.MAIN.ecc_err_177),16,16),1, IC_TAG, IR,22, x) 
	 .word 0xececdc60


.global ecc_err_178 
ecc_err_178:
!$EV error(0, expr(@VA(.MAIN.ecc_err_178),16,16),1, IC_TAG, IR,17, x) 
	 .word 0xede4d120


.global ecc_err_179 
ecc_err_179:
!$EV error(0, expr(@VA(.MAIN.ecc_err_179),16,16),1, DC_TAG, 2) 
	 .word 0xf244e000


.global ecc_err_180 
ecc_err_180:
!$EV error(0, expr(@VA(.MAIN.ecc_err_180),16,16),1, DC_TAG, 61) 
	 .word 0xf7e4e000


.global ecc_err_181 
ecc_err_181:
!$EV error(0, expr(@VA(.MAIN.ecc_err_181),16,16),1, DC_DATA, 13) 
	 .word 0xec6ce03f

	 .word 0xf86cc000


.global ecc_err_182 
ecc_err_182:
!$EV error(0, expr(@VA(.MAIN.ecc_err_182),16,16),1, DC_TAG, 7) 
	 .word 0xeeecdc40


.global ecc_err_183 
ecc_err_183:
!$EV error(0, expr(@VA(.MAIN.ecc_err_183),16,16),1, DC_TAG, 26) 
	 .word 0xec9ce010


.global ecc_err_184 
ecc_err_184:
!$EV error(0, expr(@VA(.MAIN.ecc_err_184),16,16),1, IC_TAG, IR,23, x) 
	 .word 0xf2ccc540

	 .word 0xf5f4c560


.global ecc_err_185 
ecc_err_185:
!$EV error(0, expr(@VA(.MAIN.ecc_err_185),16,16),1, IC_TAG, IR,24, x) 
	 .word 0xf46cc000


.global ecc_err_186 
ecc_err_186:
!$EV error(0, expr(@VA(.MAIN.ecc_err_186),16,16),1, DC_DATA, 61) 
	 .word 0xf40ce023

	 .word 0xf294e000


.global ecc_err_187 
ecc_err_187:
!$EV error(0, expr(@VA(.MAIN.ecc_err_187),16,16),1, IC_TAG, IR,0, x) 
	 .word 0xf6c4e004


.global ecc_err_188 
ecc_err_188:
!$EV error(0, expr(@VA(.MAIN.ecc_err_188),16,16),1, IC_TAG, IR,1, x) 
	 .word 0xf8dcd000

	 .word 0xecbcdd60


.global ecc_err_189 
ecc_err_189:
!$EV error(0, expr(@VA(.MAIN.ecc_err_189),16,16),1, DC_TAG, 24) 
	 .word 0xfa5cc000


.global ecc_err_190 
ecc_err_190:
!$EV error(0, expr(@VA(.MAIN.ecc_err_190),16,16),1, IC_DATA, IR,4,x) 
	 .word 0xf67ce004


.global ecc_err_191 
ecc_err_191:
!$EV error(0, expr(@VA(.MAIN.ecc_err_191),16,16),1, IC_TAG, IR,25, x) 
	 .word 0xf2ecd100


.global ecc_err_192 
ecc_err_192:
!$EV error(0, expr(@VA(.MAIN.ecc_err_192),16,16),1, IC_DATA, IR,21,x) 
	 .word 0xea94c480


.global ecc_err_193 
ecc_err_193:
!$EV error(0, expr(@VA(.MAIN.ecc_err_193),16,16),1, DC_TAG, 1) 
	 .word 0xedf4e000

	 .word 0xf5f4c440


.global ecc_err_194 
ecc_err_194:
!$EV error(0, expr(@VA(.MAIN.ecc_err_194),16,16),1, DC_DATA, 52) 
	 .word 0xf67cc000

	 .word 0xecfce004

	 .word 0xf424e004

	 .word 0xeff4e000

	 .word 0xf4ece036


.global ecc_err_195 
ecc_err_195:
!$EV error(0, expr(@VA(.MAIN.ecc_err_195),16,16),1, IC_DATA, IR,6,x) 
	 .word 0xede4e000


.global ecc_err_196 
ecc_err_196:
!$EV error(0, expr(@VA(.MAIN.ecc_err_196),16,16),1, DC_TAG, 32) 
	 .word 0xf48cd100

	 .word 0xec3ce010

	 .word 0xf0ece02d


.global ecc_err_197 
ecc_err_197:
!$EV error(0, expr(@VA(.MAIN.ecc_err_197),16,16),1, IC_TAG, IR,7, x) 
	 .word 0xf2ecd120


.global ecc_err_198 
ecc_err_198:
!$EV error(0, expr(@VA(.MAIN.ecc_err_198),16,16),1, DC_TAG, 26) 
	 .word 0xfa7ce000

	 .word 0xefe4c460

	 .word 0xebe4c540

	 .word 0xf1f4dc40


.global ecc_err_199 
ecc_err_199:
!$EV error(0, expr(@VA(.MAIN.ecc_err_199),16,16),1, IC_TAG, IR,22, x) 
	 .word 0xf644e000


.global ecc_err_200 
ecc_err_200:
!$EV error(0, expr(@VA(.MAIN.ecc_err_200),16,16),1, IC_TAG, IR,4, x) 
	 .word 0xfa7cc000

	 .word 0xf6ecd100


.global ecc_err_201 
ecc_err_201:
!$EV error(0, expr(@VA(.MAIN.ecc_err_201),16,16),1, DC_TAG, 4) 
	 .word 0xecece005


.global ecc_err_202 
ecc_err_202:
!$EV error(0, expr(@VA(.MAIN.ecc_err_202),16,16),1, DC_TAG, 55) 
	 .word 0xec1cc000

	 .word 0xeaa4dd60


.global ecc_err_203 
ecc_err_203:
!$EV error(0, expr(@VA(.MAIN.ecc_err_203),16,16),1, DC_TAG, 53) 
	 .word 0xf7e4e000

	 .word 0xeca4dc40

	 .word 0xf6ecd100


.global ecc_err_204 
ecc_err_204:
!$EV error(0, expr(@VA(.MAIN.ecc_err_204),16,16),1, DC_DATA, 28) 
	 .word 0xf7e4e000


.global ecc_err_205 
ecc_err_205:
!$EV error(0, expr(@VA(.MAIN.ecc_err_205),16,16),1, IC_DATA, IR,21,x) 
	 .word 0xecd4c480


.global ecc_err_206 
ecc_err_206:
!$EV error(0, expr(@VA(.MAIN.ecc_err_206),16,16),1, DC_TAG, 13) 
	 .word 0xee6ce02c

	 .word 0xf4ecdc40

	 .word 0xee2ce036


.global ecc_err_207 
ecc_err_207:
!$EV error(0, expr(@VA(.MAIN.ecc_err_207),16,16),1, IC_DATA, IR,4,x) 
	 .word 0xf46cc000

	 .word 0xecbcdc40

	 .word 0xf3e4e000

	 .word 0xf474c000

	 .word 0xeeece020

	 .word 0xf874e000


.global ecc_err_208 
ecc_err_208:
!$EV error(0, expr(@VA(.MAIN.ecc_err_208),16,16),1, IC_TAG, IR,17, x) 
	 .word 0xf44ce035


.global ecc_err_209 
ecc_err_209:
!$EV error(0, expr(@VA(.MAIN.ecc_err_209),16,16),1, DC_DATA, 11) 
	 .word 0xf80ce029

	 .word 0xfa04c000


.global ecc_err_210 
ecc_err_210:
!$EV error(0, expr(@VA(.MAIN.ecc_err_210),16,16),1, IC_TAG, IR,29, x) 
	 .word 0xea6cc000

	 .word 0xeff4e000


.global ecc_err_211 
ecc_err_211:
!$EV error(0, expr(@VA(.MAIN.ecc_err_211),16,16),1, DC_TAG, 57) 
	 .word 0xf47cc000

	 .word 0xf5f4dc40


.global ecc_err_212 
ecc_err_212:
!$EV error(0, expr(@VA(.MAIN.ecc_err_212),16,16),1, IC_TAG, IR,3, x) 
	 .word 0xf86cc000

	 .word 0xf08ce02b


.global ecc_err_213 
ecc_err_213:
!$EV error(0, expr(@VA(.MAIN.ecc_err_213),16,16),1, IC_TAG, IR,23, x) 
	 .word 0xf614e000


.global ecc_err_214 
ecc_err_214:
!$EV error(0, expr(@VA(.MAIN.ecc_err_214),16,16),1, IC_TAG, IR,25, x) 
	 .word 0xf65cc000

	 .word 0xf07cc000

	 .word 0xf234c000

	 .word 0xebe4e000


.global ecc_err_215 
ecc_err_215:
!$EV error(0, expr(@VA(.MAIN.ecc_err_215),16,16),1, IC_DATA, IR,13,x) 
	 .word 0xede4c460

	 .word 0xf2ece02b

	 .word 0xf874e008

	 .word 0xf4ecd100


.global ecc_err_216 
ecc_err_216:
!$EV error(0, expr(@VA(.MAIN.ecc_err_216),16,16),1, IC_DATA, IR,2,x) 
	 .word 0xf054c000


.global ecc_err_217 
ecc_err_217:
!$EV error(0, expr(@VA(.MAIN.ecc_err_217),16,16),1, DC_TAG, 11) 
	 .word 0xf7f4e000

	 .word 0xecccc560


.global ecc_err_218 
ecc_err_218:
!$EV error(0, expr(@VA(.MAIN.ecc_err_218),16,16),1, DC_TAG, 10) 
	 .word 0xf86ce02a


.global ecc_err_219 
ecc_err_219:
!$EV error(0, expr(@VA(.MAIN.ecc_err_219),16,16),1, IC_TAG, IR,10, x) 
	 .word 0xf5f4e000


.global ecc_err_220 
ecc_err_220:
!$EV error(0, expr(@VA(.MAIN.ecc_err_220),16,16),1, IC_DATA, IR,24,x) 
	 .word 0xea84dd60

	 .word 0xf26cc000

	 .word 0xf4f4c460

	 .word 0xee7cc000

	 .word 0xf44ce004


.global ecc_err_221 
ecc_err_221:
!$EV error(0, expr(@VA(.MAIN.ecc_err_221),16,16),1, DC_TAG, 8) 
	 .word 0xf0ece013

	 .word 0xecece015


.global ecc_err_222 
ecc_err_222:
!$EV error(0, expr(@VA(.MAIN.ecc_err_222),16,16),1, IC_TAG, IR,11, x) 
	 .word 0xf8c4c440

	 .word 0xf3e4dd60

	 .word 0xf614e000

	 .word 0xea6ce036


.global ecc_err_223 
ecc_err_223:
!$EV error(0, expr(@VA(.MAIN.ecc_err_223),16,16),1, IC_TAG, IR,12, x) 
	 .word 0xec6cc000


.global ecc_err_224 
ecc_err_224:
!$EV error(0, expr(@VA(.MAIN.ecc_err_224),16,16),1, IC_DATA, IR,23,x) 
	 .word 0xeeece01f


.global ecc_err_225 
ecc_err_225:
!$EV error(0, expr(@VA(.MAIN.ecc_err_225),16,16),1, IC_TAG, IR,15, x) 
	 .word 0xf8ecc580


.global ecc_err_226 
ecc_err_226:
!$EV error(0, expr(@VA(.MAIN.ecc_err_226),16,16),1, IC_TAG, IR,6, x) 
	 .word 0xf6ece031

	 .word 0xf9f4e000

	 .word 0xf27ce000

	 .word 0xf054c000

	 .word 0xf9f4d020


.global ecc_err_227 
ecc_err_227:
!$EV error(0, expr(@VA(.MAIN.ecc_err_227),16,16),1, IC_DATA, IR,0,x) 
	 .word 0xebe4dc60


.global ecc_err_228 
ecc_err_228:
!$EV error(0, expr(@VA(.MAIN.ecc_err_228),16,16),1, DC_DATA, 14) 
	 .word 0xf494dd60

	 .word 0xea7ce004


.global ecc_err_229 
ecc_err_229:
!$EV error(0, expr(@VA(.MAIN.ecc_err_229),16,16),1, DC_TAG, 43) 
	 .word 0xf8ecc480

	 .word 0xf0cce030


.global ecc_err_230 
ecc_err_230:
!$EV error(0, expr(@VA(.MAIN.ecc_err_230),16,16),1, IC_DATA, IR,2,x) 
	 .word 0xf3f4d020


.global ecc_err_231 
ecc_err_231:
!$EV error(0, expr(@VA(.MAIN.ecc_err_231),16,16),1, DC_TAG, 50) 
	 .word 0xf68cc440

	 .word 0xecece003

	 .word 0xecbcc540


.global ecc_err_232 
ecc_err_232:
!$EV error(0, expr(@VA(.MAIN.ecc_err_232),16,16),1, IC_TAG, IR,24, x) 
	 .word 0xf1f4dd40


.global ecc_err_233 
ecc_err_233:
!$EV error(0, expr(@VA(.MAIN.ecc_err_233),16,16),1, IC_TAG, IR,11, x) 
	 .word 0xec6cc000

	 .word 0xf644e004


.global ecc_err_234 
ecc_err_234:
!$EV error(0, expr(@VA(.MAIN.ecc_err_234),16,16),1, DC_DATA, 60) 
	 .word 0xec7ce004

	 .word 0xeeecc540


.global ecc_err_235 
ecc_err_235:
!$EV error(0, expr(@VA(.MAIN.ecc_err_235),16,16),1, DC_DATA, 21) 
	 .word 0xf2ecd000


.global ecc_err_236 
ecc_err_236:
!$EV error(0, expr(@VA(.MAIN.ecc_err_236),16,16),1, DC_TAG, 31) 
	 .word 0xede4e000

	 .word 0xf87ce004

	 .word 0xf62cc000

	 .word 0xf9e4e000

	 .word 0xeeb4d000

	 .word 0xec34c000


.global ecc_err_237 
ecc_err_237:
!$EV error(0, expr(@VA(.MAIN.ecc_err_237),16,16),1, DC_DATA, 45) 
	 .word 0xf9e4e000


.global ecc_err_238 
ecc_err_238:
!$EV error(0, expr(@VA(.MAIN.ecc_err_238),16,16),1, DC_DATA, 35) 
	 .word 0xefe4e000

	 .word 0xf8fcd120


.global ecc_err_239 
ecc_err_239:
!$EV error(0, expr(@VA(.MAIN.ecc_err_239),16,16),1, DC_DATA, 44) 
	 .word 0xee7cc000

	 .word 0xea34c000

	 .word 0xf5e4d120


.global ecc_err_240 
ecc_err_240:
!$EV error(0, expr(@VA(.MAIN.ecc_err_240),16,16),1, DC_TAG, 45) 
	 .word 0xf5f4e000


.global ecc_err_241 
ecc_err_241:
!$EV error(0, expr(@VA(.MAIN.ecc_err_241),16,16),1, DC_TAG, 9) 
	 .word 0xf9e4d100

	 .word 0xea6cc000

	 .word 0xfa14e002

	 .word 0xf4ecd000


.global ecc_err_242 
ecc_err_242:
!$EV error(0, expr(@VA(.MAIN.ecc_err_242),16,16),1, IC_TAG, IR,19, x) 
	 .word 0xf3e4c580

	 .word 0xf0fcdd60


.global ecc_err_243 
ecc_err_243:
!$EV error(0, expr(@VA(.MAIN.ecc_err_243),16,16),1, DC_DATA, 8) 
	 .word 0xf0dcc460


.global ecc_err_244 
ecc_err_244:
!$EV error(0, expr(@VA(.MAIN.ecc_err_244),16,16),1, DC_TAG, 14) 
	 .word 0xf06cc000


.global ecc_err_245 
ecc_err_245:
!$EV error(0, expr(@VA(.MAIN.ecc_err_245),16,16),1, IC_TAG, IR,3, x) 
	 .word 0xf26cc000


.global ecc_err_246 
ecc_err_246:
!$EV error(0, expr(@VA(.MAIN.ecc_err_246),16,16),1, DC_DATA, 27) 
	 .word 0xf3e4e000

	 .word 0xf0fce004


.global ecc_err_247 
ecc_err_247:
!$EV error(0, expr(@VA(.MAIN.ecc_err_247),16,16),1, IC_TAG, IR,15, x) 
	 .word 0xf2dcc540


.global ecc_err_248 
ecc_err_248:
!$EV error(0, expr(@VA(.MAIN.ecc_err_248),16,16),1, DC_DATA, 59) 
	 .word 0xec8cdc40

	 .word 0xecc4e000


.global ecc_err_249 
ecc_err_249:
!$EV error(0, expr(@VA(.MAIN.ecc_err_249),16,16),1, DC_DATA, 46) 
	 .word 0xec1ce010


.global ecc_err_250 
ecc_err_250:
!$EV error(0, expr(@VA(.MAIN.ecc_err_250),16,16),1, IC_DATA, IR,30,x) 
	 .word 0xf214e002

	 .word 0xf5e4d120

	 .word 0xf254c000


.global ecc_err_251 
ecc_err_251:
!$EV error(0, expr(@VA(.MAIN.ecc_err_251),16,16),1, IC_DATA, IR,1,x) 
	 .word 0xec1cc000


.global ecc_err_252 
ecc_err_252:
!$EV error(0, expr(@VA(.MAIN.ecc_err_252),16,16),1, IC_TAG, IR,3, x) 
	 .word 0xfa94d100


.global ecc_err_253 
ecc_err_253:
!$EV error(0, expr(@VA(.MAIN.ecc_err_253),16,16),1, DC_TAG, 23) 
	 .word 0xf0ecd000


.global ecc_err_254 
ecc_err_254:
!$EV error(0, expr(@VA(.MAIN.ecc_err_254),16,16),1, DC_DATA, 51) 
	 .word 0xf5f4e000


.global ecc_err_255 
ecc_err_255:
!$EV error(0, expr(@VA(.MAIN.ecc_err_255),16,16),1, DC_DATA, 12) 
	 .word 0xf3e4d020


.global ecc_err_256 
ecc_err_256:
!$EV error(0, expr(@VA(.MAIN.ecc_err_256),16,16),1, DC_DATA, 4) 
	 .word 0xf9f4c580


.global ecc_err_257 
ecc_err_257:
!$EV error(0, expr(@VA(.MAIN.ecc_err_257),16,16),1, IC_TAG, IR,19, x) 
	 .word 0xf27ce000


.global ecc_err_258 
ecc_err_258:
!$EV error(0, expr(@VA(.MAIN.ecc_err_258),16,16),1, DC_TAG, 14) 
	 .word 0xec1cc000


.global ecc_err_259 
ecc_err_259:
!$EV error(0, expr(@VA(.MAIN.ecc_err_259),16,16),1, DC_DATA, 60) 
	 .word 0xf0ece032


.global ecc_err_260 
ecc_err_260:
!$EV error(0, expr(@VA(.MAIN.ecc_err_260),16,16),1, IC_DATA, IR,16,x) 
	 .word 0xf8ece02c

	 .word 0xfad4e000

	 .word 0xeaccdc60

	 .word 0xf5e4e000


.global ecc_err_261 
ecc_err_261:
!$EV error(0, expr(@VA(.MAIN.ecc_err_261),16,16),1, IC_TAG, IR,20, x) 
	 .word 0xf1f4dc40


.global ecc_err_262 
ecc_err_262:
!$EV error(0, expr(@VA(.MAIN.ecc_err_262),16,16),1, IC_DATA, IR,6,x) 
	 .word 0xf9e4e000

	 .word 0xf87cc000


.global ecc_err_263 
ecc_err_263:
!$EV error(0, expr(@VA(.MAIN.ecc_err_263),16,16),1, DC_DATA, 35) 
	 .word 0xf46cc000


.global ecc_err_264 
ecc_err_264:
!$EV error(0, expr(@VA(.MAIN.ecc_err_264),16,16),1, DC_TAG, 58) 
	 .word 0xf87cc000


.global ecc_err_265 
ecc_err_265:
!$EV error(0, expr(@VA(.MAIN.ecc_err_265),16,16),1, DC_TAG, 49) 
	 .word 0xedf4d100

	 .word 0xf7f4c460


.global ecc_err_266 
ecc_err_266:
!$EV error(0, expr(@VA(.MAIN.ecc_err_266),16,16),1, IC_TAG, IR,1, x) 
	 .word 0xf1f4e000


.global ecc_err_267 
ecc_err_267:
!$EV error(0, expr(@VA(.MAIN.ecc_err_267),16,16),1, IC_TAG, IR,21, x) 
	 .word 0xf07ce000

	 .word 0xfa7ce004


.global ecc_err_268 
ecc_err_268:
!$EV error(0, expr(@VA(.MAIN.ecc_err_268),16,16),1, DC_DATA, 10) 
	 .word 0xede4c580

	 .word 0xebf4e000


.global ecc_err_269 
ecc_err_269:
!$EV error(0, expr(@VA(.MAIN.ecc_err_269),16,16),1, DC_DATA, 13) 
	 .word 0xf1f4d100

	 .word 0xf694e002


.global ecc_err_270 
ecc_err_270:
!$EV error(0, expr(@VA(.MAIN.ecc_err_270),16,16),1, DC_DATA, 22) 
	 .word 0xf47ce004


.global ecc_err_271 
ecc_err_271:
!$EV error(0, expr(@VA(.MAIN.ecc_err_271),16,16),1, DC_TAG, 29) 
	 .word 0xf844e004


.global ecc_err_272 
ecc_err_272:
!$EV error(0, expr(@VA(.MAIN.ecc_err_272),16,16),1, DC_DATA, 11) 
	 .word 0xede4e000


.global ecc_err_273 
ecc_err_273:
!$EV error(0, expr(@VA(.MAIN.ecc_err_273),16,16),1, DC_DATA, 6) 
	 .word 0xf1e4e000

	 .word 0xecb4d100


.global ecc_err_274 
ecc_err_274:
!$EV error(0, expr(@VA(.MAIN.ecc_err_274),16,16),1, DC_TAG, 4) 
	 .word 0xf26cc000


.global ecc_err_275 
ecc_err_275:
!$EV error(0, expr(@VA(.MAIN.ecc_err_275),16,16),1, DC_DATA, 42) 
	 .word 0xececc460


.global ecc_err_276 
ecc_err_276:
!$EV error(0, expr(@VA(.MAIN.ecc_err_276),16,16),1, DC_TAG, 19) 
	 .word 0xefe4e000

	 .word 0xf08ce03d

	 .word 0xeff4c460

	 .word 0xf474e008


.global ecc_err_277 
ecc_err_277:
!$EV error(0, expr(@VA(.MAIN.ecc_err_277),16,16),1, IC_TAG, IR,19, x) 
	 .word 0xf1f4e000

	 .word 0xf27ce000


.global ecc_err_278 
ecc_err_278:
!$EV error(0, expr(@VA(.MAIN.ecc_err_278),16,16),1, DC_TAG, 28) 
	 .word 0xf044e004


.global ecc_err_279 
ecc_err_279:
!$EV error(0, expr(@VA(.MAIN.ecc_err_279),16,16),1, IC_DATA, IR,16,x) 
	 .word 0xeeecc540

	 .word 0xeaecdc40

	 .word 0xebf4c560


.global ecc_err_280 
ecc_err_280:
!$EV error(0, expr(@VA(.MAIN.ecc_err_280),16,16),1, IC_TAG, IR,28, x) 
	 .word 0xf4ece00e


.global ecc_err_281 
ecc_err_281:
!$EV error(0, expr(@VA(.MAIN.ecc_err_281),16,16),1, IC_DATA, IR,25,x) 
	 .word 0xf46cc000


.global ecc_err_282 
ecc_err_282:
!$EV error(0, expr(@VA(.MAIN.ecc_err_282),16,16),1, DC_DATA, 34) 
	 .word 0xf1f4e000

	 .word 0xf66ce00c

	 .word 0xecc4e004

	 .word 0xf66cc000


.global ecc_err_283 
ecc_err_283:
!$EV error(0, expr(@VA(.MAIN.ecc_err_283),16,16),1, DC_TAG, 25) 
	 .word 0xf27ce004


.global ecc_err_284 
ecc_err_284:
!$EV error(0, expr(@VA(.MAIN.ecc_err_284),16,16),1, DC_TAG, 18) 
	 .word 0xf7e4dc60

	 .word 0xfa7ce000


.global ecc_err_285 
ecc_err_285:
!$EV error(0, expr(@VA(.MAIN.ecc_err_285),16,16),1, IC_TAG, IR,15, x) 
	 .word 0xf87cc000

	 .word 0xee54c000

	 .word 0xeac4e000


.global ecc_err_286 
ecc_err_286:
!$EV error(0, expr(@VA(.MAIN.ecc_err_286),16,16),1, DC_TAG, 22) 
	 .word 0xee7ce004


.global ecc_err_287 
ecc_err_287:
!$EV error(0, expr(@VA(.MAIN.ecc_err_287),16,16),1, DC_DATA, 32) 
	 .word 0xf6c4e000

	 .word 0xf05ce008


.global ecc_err_288 
ecc_err_288:
!$EV error(0, expr(@VA(.MAIN.ecc_err_288),16,16),1, DC_DATA, 48) 
	 .word 0xf0c4c580


.global ecc_err_289 
ecc_err_289:
!$EV error(0, expr(@VA(.MAIN.ecc_err_289),16,16),1, IC_TAG, IR,13, x) 
	 .word 0xf45cc000


.global ecc_err_290 
ecc_err_290:
!$EV error(0, expr(@VA(.MAIN.ecc_err_290),16,16),1, DC_TAG, 26) 
	 .word 0xf5f4d020


.global ecc_err_291 
ecc_err_291:
!$EV error(0, expr(@VA(.MAIN.ecc_err_291),16,16),1, DC_TAG, 6) 
	 .word 0xf6c4e004


.global ecc_err_292 
ecc_err_292:
!$EV error(0, expr(@VA(.MAIN.ecc_err_292),16,16),1, IC_TAG, IR,18, x) 
	 .word 0xf46ce03c

	 .word 0xf2fcc440

	 .word 0xea44e000

	 .word 0xf214c000

	 .word 0xf0a4c540


.global ecc_err_293 
ecc_err_293:
!$EV error(0, expr(@VA(.MAIN.ecc_err_293),16,16),1, DC_DATA, 0) 
	 .word 0xf6c4dc60


.global ecc_err_294 
ecc_err_294:
!$EV error(0, expr(@VA(.MAIN.ecc_err_294),16,16),1, DC_DATA, 31) 
	 .word 0xf444e000

	 .word 0xf24cc000


.global ecc_err_295 
ecc_err_295:
!$EV error(0, expr(@VA(.MAIN.ecc_err_295),16,16),1, DC_DATA, 30) 
	 .word 0xf9e4dd60


.global ecc_err_296 
ecc_err_296:
!$EV error(0, expr(@VA(.MAIN.ecc_err_296),16,16),1, DC_DATA, 17) 
	 .word 0xec9cd120


.global ecc_err_297 
ecc_err_297:
!$EV error(0, expr(@VA(.MAIN.ecc_err_297),16,16),1, IC_TAG, IR,30, x) 
	 .word 0xf2ecc540

	 .word 0xf684dc40

	 .word 0xebe4e000

	 .word 0xf2ece030


.global ecc_err_298 
ecc_err_298:
!$EV error(0, expr(@VA(.MAIN.ecc_err_298),16,16),1, IC_TAG, IR,5, x) 
	 .word 0xf5f4e000


.global ecc_err_299 
ecc_err_299:
!$EV error(0, expr(@VA(.MAIN.ecc_err_299),16,16),1, DC_TAG, 8) 
	 .word 0xf094d120


.global ecc_err_300 
ecc_err_300:
!$EV error(0, expr(@VA(.MAIN.ecc_err_300),16,16),1, DC_DATA, 26) 
	 .word 0xf4c4d020


.global ecc_err_301 
ecc_err_301:
!$EV error(0, expr(@VA(.MAIN.ecc_err_301),16,16),1, IC_DATA, IR,9,x) 
	 .word 0xf2ece00c

	 .word 0xeed4e000

	 .word 0xf854c000


.global ecc_err_302 
ecc_err_302:
!$EV error(0, expr(@VA(.MAIN.ecc_err_302),16,16),1, IC_DATA, IR,8,x) 
	 .word 0xec1cc000


.global ecc_err_303 
ecc_err_303:
!$EV error(0, expr(@VA(.MAIN.ecc_err_303),16,16),1, DC_TAG, 19) 
	 .word 0xee8cdd60


.global ecc_err_304 
ecc_err_304:
!$EV error(0, expr(@VA(.MAIN.ecc_err_304),16,16),1, IC_TAG, IR,8, x) 
	 .word 0xf1f4c480


.global ecc_err_305 
ecc_err_305:
!$EV error(0, expr(@VA(.MAIN.ecc_err_305),16,16),1, DC_DATA, 49) 
	 .word 0xf66cc000


.global ecc_err_306 
ecc_err_306:
!$EV error(0, expr(@VA(.MAIN.ecc_err_306),16,16),1, DC_DATA, 47) 
	 .word 0xf6ecc480

	 .word 0xeedce000


.global ecc_err_307 
ecc_err_307:
!$EV error(0, expr(@VA(.MAIN.ecc_err_307),16,16),1, IC_DATA, IR,23,x) 
	 .word 0xf9e4d120


.global ecc_err_308 
ecc_err_308:
!$EV error(0, expr(@VA(.MAIN.ecc_err_308),16,16),1, IC_TAG, IR,10, x) 
	 .word 0xf6c4c460

	 .word 0xf014c000

	 .word 0xea6ce013

	 .word 0xfa2cc000

	 .word 0xf26ce037


.global ecc_err_309 
ecc_err_309:
!$EV error(0, expr(@VA(.MAIN.ecc_err_309),16,16),1, IC_DATA, IR,16,x) 
	 .word 0xf3e4c460

	 .word 0xf4ecdc60


.global ecc_err_310 
ecc_err_310:
!$EV error(0, expr(@VA(.MAIN.ecc_err_310),16,16),1, IC_TAG, IR,11, x) 
	 .word 0xea6ce018


.global ecc_err_311 
ecc_err_311:
!$EV error(0, expr(@VA(.MAIN.ecc_err_311),16,16),1, DC_DATA, 60) 
	 .word 0xec8cc540

	 .word 0xecbcdd40

	 .word 0xf0fcdd40


.global ecc_err_312 
ecc_err_312:
!$EV error(0, expr(@VA(.MAIN.ecc_err_312),16,16),1, IC_DATA, IR,26,x) 
	 .word 0xf8ecdd60

	 .word 0xf3e4dc60


.global ecc_err_313 
ecc_err_313:
!$EV error(0, expr(@VA(.MAIN.ecc_err_313),16,16),1, DC_DATA, 28) 
	 .word 0xf7f4c540


.global ecc_err_314 
ecc_err_314:
!$EV error(0, expr(@VA(.MAIN.ecc_err_314),16,16),1, IC_DATA, IR,28,x) 
	 .word 0xf7e4e000


.global ecc_err_315 
ecc_err_315:
!$EV error(0, expr(@VA(.MAIN.ecc_err_315),16,16),1, DC_DATA, 5) 
	 .word 0xf0ecd100

	 .word 0xea74c000

	 .word 0xfafce000

	 .word 0xf26cc000

	 .word 0xecfcc540

	 .word 0xf67ce000

	 .word 0xf6fce004


.global ecc_err_316 
ecc_err_316:
!$EV error(0, expr(@VA(.MAIN.ecc_err_316),16,16),1, DC_DATA, 0) 
	 .word 0xf7e4d100

	 .word 0xec14c000

	 .word 0xf6acc480


.global ecc_err_317 
ecc_err_317:
!$EV error(0, expr(@VA(.MAIN.ecc_err_317),16,16),1, IC_DATA, IR,27,x) 
	 .word 0xf46cc000


.global ecc_err_318 
ecc_err_318:
!$EV error(0, expr(@VA(.MAIN.ecc_err_318),16,16),1, IC_TAG, IR,8, x) 
	 .word 0xebf4d000

	 .word 0xf084e000

	 .word 0xecbce010


.global ecc_err_319 
ecc_err_319:
!$EV error(0, expr(@VA(.MAIN.ecc_err_319),16,16),1, DC_DATA, 51) 
	 .word 0xec7cc000


.global ecc_err_320 
ecc_err_320:
!$EV error(0, expr(@VA(.MAIN.ecc_err_320),16,16),1, DC_DATA, 45) 
	 .word 0xec1cc000


.global ecc_err_321 
ecc_err_321:
!$EV error(0, expr(@VA(.MAIN.ecc_err_321),16,16),1, IC_DATA, IR,7,x) 
	 .word 0xf8ecc540


.global ecc_err_322 
ecc_err_322:
!$EV error(0, expr(@VA(.MAIN.ecc_err_322),16,16),1, IC_TAG, IR,20, x) 
	 .word 0xefe4e000


.global ecc_err_323 
ecc_err_323:
!$EV error(0, expr(@VA(.MAIN.ecc_err_323),16,16),1, DC_TAG, 29) 
	 .word 0xf9f4e000


.global ecc_err_324 
ecc_err_324:
!$EV error(0, expr(@VA(.MAIN.ecc_err_324),16,16),1, IC_DATA, IR,6,x) 
	 .word 0xf9e4e000


.global ecc_err_325 
ecc_err_325:
!$EV error(0, expr(@VA(.MAIN.ecc_err_325),16,16),1, DC_TAG, 3) 
	 .word 0xf6ece039


.global ecc_err_326 
ecc_err_326:
!$EV error(0, expr(@VA(.MAIN.ecc_err_326),16,16),1, DC_TAG, 63) 
	 .word 0xefe4c540

	 .word 0xf6f4dd40


.global ecc_err_327 
ecc_err_327:
!$EV error(0, expr(@VA(.MAIN.ecc_err_327),16,16),1, DC_DATA, 17) 
	 .word 0xf84ce018


.global ecc_err_328 
ecc_err_328:
!$EV error(0, expr(@VA(.MAIN.ecc_err_328),16,16),1, DC_TAG, 16) 
	 .word 0xec9ce010

	 .word 0xebf4e000

	 .word 0xebf4e000


.global ecc_err_329 
ecc_err_329:
!$EV error(0, expr(@VA(.MAIN.ecc_err_329),16,16),1, IC_DATA, IR,22,x) 
	 .word 0xee6cc000


.global ecc_err_330 
ecc_err_330:
!$EV error(0, expr(@VA(.MAIN.ecc_err_330),16,16),1, DC_TAG, 25) 
	 .word 0xefe4d100

	 .word 0xecfce004

	 .word 0xf8ecd020

	 .word 0xfa94e002


.global ecc_err_331 
ecc_err_331:
!$EV error(0, expr(@VA(.MAIN.ecc_err_331),16,16),1, IC_TAG, IR,6, x) 
	 .word 0xf7f4dc60


.global ecc_err_332 
ecc_err_332:
!$EV error(0, expr(@VA(.MAIN.ecc_err_332),16,16),1, IC_TAG, IR,23, x) 
	 .word 0xf26cc000


.global ecc_err_333 
ecc_err_333:
!$EV error(0, expr(@VA(.MAIN.ecc_err_333),16,16),1, DC_DATA, 54) 
	 .word 0xf9f4c560


.global ecc_err_334 
ecc_err_334:
!$EV error(0, expr(@VA(.MAIN.ecc_err_334),16,16),1, DC_TAG, 36) 
	 .word 0xf3f4d000

	 .word 0xf034c000


.global ecc_err_335 
ecc_err_335:
!$EV error(0, expr(@VA(.MAIN.ecc_err_335),16,16),1, DC_TAG, 23) 
	 .word 0xea7cc000

	 .word 0xeaecc580

	 .word 0xecbcd000

	 .word 0xf5f4c580


.global ecc_err_336 
ecc_err_336:
!$EV error(0, expr(@VA(.MAIN.ecc_err_336),16,16),1, DC_DATA, 5) 
	 .word 0xede4d020

	 .word 0xf86cc000


.global ecc_err_337 
ecc_err_337:
!$EV error(0, expr(@VA(.MAIN.ecc_err_337),16,16),1, DC_DATA, 15) 
	 .word 0xebf4e000


.global ecc_err_338 
ecc_err_338:
!$EV error(0, expr(@VA(.MAIN.ecc_err_338),16,16),1, IC_TAG, IR,4, x) 
	 .word 0xea6ce01c


.global ecc_err_339 
ecc_err_339:
!$EV error(0, expr(@VA(.MAIN.ecc_err_339),16,16),1, DC_TAG, 15) 
	 .word 0xf2ece02c


.global ecc_err_340 
ecc_err_340:
!$EV error(0, expr(@VA(.MAIN.ecc_err_340),16,16),1, DC_TAG, 31) 
	 .word 0xebf4e000

	 .word 0xf4ecdc60


.global ecc_err_341 
ecc_err_341:
!$EV error(0, expr(@VA(.MAIN.ecc_err_341),16,16),1, IC_DATA, IR,22,x) 
	 .word 0xfac4dc60


.global ecc_err_342 
ecc_err_342:
!$EV error(0, expr(@VA(.MAIN.ecc_err_342),16,16),1, DC_DATA, 50) 
	 .word 0xf4ccdc60


.global ecc_err_343 
ecc_err_343:
!$EV error(0, expr(@VA(.MAIN.ecc_err_343),16,16),1, DC_TAG, 8) 
	 .word 0xf5e4e000


.global ecc_err_344 
ecc_err_344:
!$EV error(0, expr(@VA(.MAIN.ecc_err_344),16,16),1, DC_TAG, 50) 
	 .word 0xf8ecd000

	 .word 0xf6fcc560

	 .word 0xf5e4dd60

	 .word 0xec7cc000


.global ecc_err_345 
ecc_err_345:
!$EV error(0, expr(@VA(.MAIN.ecc_err_345),16,16),1, IC_DATA, IR,22,x) 
	 .word 0xf87ce000


.global ecc_err_346 
ecc_err_346:
!$EV error(0, expr(@VA(.MAIN.ecc_err_346),16,16),1, DC_DATA, 12) 
	 .word 0xf85ce008


.global ecc_err_347 
ecc_err_347:
!$EV error(0, expr(@VA(.MAIN.ecc_err_347),16,16),1, IC_DATA, IR,3,x) 
	 .word 0xee6cc000


.global ecc_err_348 
ecc_err_348:
!$EV error(0, expr(@VA(.MAIN.ecc_err_348),16,16),1, DC_DATA, 62) 
	 .word 0xf6c4e000


.global ecc_err_349 
ecc_err_349:
!$EV error(0, expr(@VA(.MAIN.ecc_err_349),16,16),1, IC_TAG, IR,21, x) 
	 .word 0xfadce008

	 .word 0xf87cc000


.global ecc_err_350 
ecc_err_350:
!$EV error(0, expr(@VA(.MAIN.ecc_err_350),16,16),1, IC_TAG, IR,4, x) 
	 .word 0xf5e4c480


.global ecc_err_351 
ecc_err_351:
!$EV error(0, expr(@VA(.MAIN.ecc_err_351),16,16),1, DC_TAG, 40) 
	 .word 0xf26cc000

	 .word 0xee74e000


.global ecc_err_352 
ecc_err_352:
!$EV error(0, expr(@VA(.MAIN.ecc_err_352),16,16),1, DC_TAG, 51) 
	 .word 0xf9f4d100


.global ecc_err_353 
ecc_err_353:
!$EV error(0, expr(@VA(.MAIN.ecc_err_353),16,16),1, IC_DATA, IR,14,x) 
	 .word 0xea6cc000

	 .word 0xececdd40

	 .word 0xf884dd60


.global ecc_err_354 
ecc_err_354:
!$EV error(0, expr(@VA(.MAIN.ecc_err_354),16,16),1, DC_TAG, 7) 
	 .word 0xea0ce014


.global ecc_err_355 
ecc_err_355:
!$EV error(0, expr(@VA(.MAIN.ecc_err_355),16,16),1, IC_DATA, IR,4,x) 
	 .word 0xf46cc000

	 .word 0xf67cc000


.global ecc_err_356 
ecc_err_356:
!$EV error(0, expr(@VA(.MAIN.ecc_err_356),16,16),1, DC_TAG, 47) 
	 .word 0xf6d4d020


.global ecc_err_357 
ecc_err_357:
!$EV error(0, expr(@VA(.MAIN.ecc_err_357),16,16),1, IC_TAG, IR,18, x) 
	 .word 0xee7ce004

	 .word 0xecf4c560

	 .word 0xf674c000

	 .word 0xf0a4e004


.global ecc_err_358 
ecc_err_358:
!$EV error(0, expr(@VA(.MAIN.ecc_err_358),16,16),1, IC_TAG, IR,7, x) 
	 .word 0xf7f4c560

	 .word 0xf67ce000


.global ecc_err_359 
ecc_err_359:
!$EV error(0, expr(@VA(.MAIN.ecc_err_359),16,16),1, DC_TAG, 27) 
	 .word 0xf7e4e000


.global ecc_err_360 
ecc_err_360:
!$EV error(0, expr(@VA(.MAIN.ecc_err_360),16,16),1, DC_DATA, 39) 
	 .word 0xf87cc000

	 .word 0xfa34e000

	 .word 0xeea4e000


.global ecc_err_361 
ecc_err_361:
!$EV error(0, expr(@VA(.MAIN.ecc_err_361),16,16),1, IC_DATA, IR,3,x) 
	 .word 0xf3e4d120


.global ecc_err_362 
ecc_err_362:
!$EV error(0, expr(@VA(.MAIN.ecc_err_362),16,16),1, DC_TAG, 15) 
	 .word 0xf5f4c480


.global ecc_err_363 
ecc_err_363:
!$EV error(0, expr(@VA(.MAIN.ecc_err_363),16,16),1, IC_DATA, IR,25,x) 
	 .word 0xf5f4e000

	 .word 0xf67cc000


.global ecc_err_364 
ecc_err_364:
!$EV error(0, expr(@VA(.MAIN.ecc_err_364),16,16),1, DC_TAG, 0) 
	 .word 0xedf4d120


.global ecc_err_365 
ecc_err_365:
!$EV error(0, expr(@VA(.MAIN.ecc_err_365),16,16),1, IC_TAG, IR,28, x) 
	 .word 0xf87ce004


.global ecc_err_366 
ecc_err_366:
!$EV error(0, expr(@VA(.MAIN.ecc_err_366),16,16),1, IC_DATA, IR,13,x) 
	 .word 0xf9f4d100

	 .word 0xec44e004

	 .word 0xf6fce004

	 .word 0xf26ce00e

	 .word 0xf46cc000


.global ecc_err_367 
ecc_err_367:
!$EV error(0, expr(@VA(.MAIN.ecc_err_367),16,16),1, DC_TAG, 52) 
	 .word 0xea7ce004


.global ecc_err_368 
ecc_err_368:
!$EV error(0, expr(@VA(.MAIN.ecc_err_368),16,16),1, DC_TAG, 51) 
	 .word 0xf444c000


.global ecc_err_369 
ecc_err_369:
!$EV error(0, expr(@VA(.MAIN.ecc_err_369),16,16),1, DC_TAG, 8) 
	 .word 0xeeece008


.global ecc_err_370 
ecc_err_370:
!$EV error(0, expr(@VA(.MAIN.ecc_err_370),16,16),1, IC_DATA, IR,26,x) 
	 .word 0xf8ecdc40

	 .word 0xf27ce000

	 .word 0xebf4c440

	 .word 0xeed4e000

	 .word 0xf67cc000

	 .word 0xfa8cc580


.global ecc_err_371 
ecc_err_371:
!$EV error(0, expr(@VA(.MAIN.ecc_err_371),16,16),1, DC_TAG, 32) 
	 .word 0xf9f4c480


.global ecc_err_372 
ecc_err_372:
!$EV error(0, expr(@VA(.MAIN.ecc_err_372),16,16),1, DC_TAG, 54) 
	 .word 0xf1f4e000

	 .word 0xeefcc540


.global ecc_err_373 
ecc_err_373:
!$EV error(0, expr(@VA(.MAIN.ecc_err_373),16,16),1, DC_DATA, 10) 
	 .word 0xf06cc000

	 .word 0xf634c000


.global ecc_err_374 
ecc_err_374:
!$EV error(0, expr(@VA(.MAIN.ecc_err_374),16,16),1, DC_DATA, 13) 
	 .word 0xf06ce028

	 .word 0xf4ece017


.global ecc_err_375 
ecc_err_375:
!$EV error(0, expr(@VA(.MAIN.ecc_err_375),16,16),1, IC_TAG, IR,2, x) 
	 .word 0xf854c000

	 .word 0xf9f4e000

	 .word 0xf424e000


.global ecc_err_376 
ecc_err_376:
!$EV error(0, expr(@VA(.MAIN.ecc_err_376),16,16),1, IC_TAG, IR,13, x) 
	 .word 0xf7e4c560


.global ecc_err_377 
ecc_err_377:
!$EV error(0, expr(@VA(.MAIN.ecc_err_377),16,16),1, IC_DATA, IR,19,x) 
	 .word 0xea7ce004


.global ecc_err_378 
ecc_err_378:
!$EV error(0, expr(@VA(.MAIN.ecc_err_378),16,16),1, IC_DATA, IR,14,x) 
	 .word 0xf254c000


.global ecc_err_379 
ecc_err_379:
!$EV error(0, expr(@VA(.MAIN.ecc_err_379),16,16),1, DC_TAG, 36) 
	 .word 0xec7ce004

	 .word 0xf66cc000


.global ecc_err_380 
ecc_err_380:
!$EV error(0, expr(@VA(.MAIN.ecc_err_380),16,16),1, IC_DATA, IR,28,x) 
	 .word 0xf7e4e000

	 .word 0xea04c000


.global ecc_err_381 
ecc_err_381:
!$EV error(0, expr(@VA(.MAIN.ecc_err_381),16,16),1, DC_TAG, 57) 
	 .word 0xea7ce000


.global ecc_err_382 
ecc_err_382:
!$EV error(0, expr(@VA(.MAIN.ecc_err_382),16,16),1, IC_TAG, IR,13, x) 
	 .word 0xf26cc000

	 .word 0xecc4c440


.global ecc_err_383 
ecc_err_383:
!$EV error(0, expr(@VA(.MAIN.ecc_err_383),16,16),1, IC_TAG, IR,19, x) 
	 .word 0xeccce038

	 .word 0xec7ce000

	 .word 0xf0ecc480

	 .word 0xec3cc000


.global ecc_err_384 
ecc_err_384:
!$EV error(0, expr(@VA(.MAIN.ecc_err_384),16,16),1, IC_TAG, IR,5, x) 
	 .word 0xf6ece03f

	 .word 0xf62cc000

	 .word 0xec1cc000


.global ecc_err_385 
ecc_err_385:
!$EV error(0, expr(@VA(.MAIN.ecc_err_385),16,16),1, IC_TAG, IR,0, x) 
	 .word 0xfadce008


.global ecc_err_386 
ecc_err_386:
!$EV error(0, expr(@VA(.MAIN.ecc_err_386),16,16),1, IC_DATA, IR,11,x) 
	 .word 0xeeecc440


.global ecc_err_387 
ecc_err_387:
!$EV error(0, expr(@VA(.MAIN.ecc_err_387),16,16),1, IC_DATA, IR,8,x) 
	 .word 0xebf4c540


.global ecc_err_388 
ecc_err_388:
!$EV error(0, expr(@VA(.MAIN.ecc_err_388),16,16),1, DC_DATA, 40) 
	 .word 0xf07ce000

	 .word 0xf27cc000


.global ecc_err_389 
ecc_err_389:
!$EV error(0, expr(@VA(.MAIN.ecc_err_389),16,16),1, IC_TAG, IR,19, x) 
	 .word 0xf88ce03d


.global ecc_err_390 
ecc_err_390:
!$EV error(0, expr(@VA(.MAIN.ecc_err_390),16,16),1, DC_TAG, 24) 
	 .word 0xebf4e000

	 .word 0xf67ce000

	 .word 0xec9ce000


.global ecc_err_391 
ecc_err_391:
!$EV error(0, expr(@VA(.MAIN.ecc_err_391),16,16),1, DC_TAG, 59) 
	 .word 0xf8ece024


.global ecc_err_392 
ecc_err_392:
!$EV error(0, expr(@VA(.MAIN.ecc_err_392),16,16),1, DC_TAG, 8) 
	 .word 0xf1e4e000


.global ecc_err_393 
ecc_err_393:
!$EV error(0, expr(@VA(.MAIN.ecc_err_393),16,16),1, IC_TAG, IR,19, x) 
	 .word 0xf4ecc440


.global ecc_err_394 
ecc_err_394:
!$EV error(0, expr(@VA(.MAIN.ecc_err_394),16,16),1, DC_TAG, 11) 
	 .word 0xf84cc000


.global ecc_err_395 
ecc_err_395:
!$EV error(0, expr(@VA(.MAIN.ecc_err_395),16,16),1, DC_TAG, 25) 
	 .word 0xf87ce000


.global ecc_err_396 
ecc_err_396:
!$EV error(0, expr(@VA(.MAIN.ecc_err_396),16,16),1, DC_DATA, 48) 
	 .word 0xfa94e002

	 .word 0xf274c000

	 .word 0xea7cc000


.global ecc_err_397 
ecc_err_397:
!$EV error(0, expr(@VA(.MAIN.ecc_err_397),16,16),1, DC_DATA, 36) 
	 .word 0xeeecdc40


.global ecc_err_398 
ecc_err_398:
!$EV error(0, expr(@VA(.MAIN.ecc_err_398),16,16),1, DC_DATA, 25) 
	 .word 0xf8ece01f


.global ecc_err_399 
ecc_err_399:
!$EV error(0, expr(@VA(.MAIN.ecc_err_399),16,16),1, IC_TAG, IR,23, x) 
	 .word 0xf5e4c460

	 .word 0xf4a4d120

	 .word 0xf2ecd000

	 .word 0xec7ce004

	 .word 0xecbce010

	 .word 0xec6ce014


.global ecc_err_400 
ecc_err_400:
!$EV error(0, expr(@VA(.MAIN.ecc_err_400),16,16),1, DC_TAG, 18) 
	 .word 0xf3e4e000

	 .word 0xee6cc000

	 .word 0xea7ce000


.global ecc_err_401 
ecc_err_401:
!$EV error(0, expr(@VA(.MAIN.ecc_err_401),16,16),1, DC_DATA, 51) 
	 .word 0xea6ce028


.global ecc_err_402 
ecc_err_402:
!$EV error(0, expr(@VA(.MAIN.ecc_err_402),16,16),1, IC_DATA, IR,17,x) 
	 .word 0xf1f4c440

	 .word 0xecfce004


.global ecc_err_403 
ecc_err_403:
!$EV error(0, expr(@VA(.MAIN.ecc_err_403),16,16),1, DC_TAG, 1) 
	 .word 0xeaecdd40


.global ecc_err_404 
ecc_err_404:
!$EV error(0, expr(@VA(.MAIN.ecc_err_404),16,16),1, IC_DATA, IR,24,x) 
	 .word 0xf1f4d000


.global ecc_err_405 
ecc_err_405:
!$EV error(0, expr(@VA(.MAIN.ecc_err_405),16,16),1, DC_DATA, 59) 
	 .word 0xf2ecd120

	 .word 0xeff4dc60

	 .word 0xec1cc000

	 .word 0xf6ece010


.global ecc_err_406 
ecc_err_406:
!$EV error(0, expr(@VA(.MAIN.ecc_err_406),16,16),1, IC_DATA, IR,1,x) 
	 .word 0xf47ce000


.global ecc_err_407 
ecc_err_407:
!$EV error(0, expr(@VA(.MAIN.ecc_err_407),16,16),1, DC_TAG, 29) 
	 .word 0xf0ecd000


.global ecc_err_408 
ecc_err_408:
!$EV error(0, expr(@VA(.MAIN.ecc_err_408),16,16),1, DC_DATA, 8) 
	 .word 0xfa0cc000

	 .word 0xf66cc000


.global ecc_err_409 
ecc_err_409:
!$EV error(0, expr(@VA(.MAIN.ecc_err_409),16,16),1, DC_TAG, 63) 
	 .word 0xf0ecc580


.global ecc_err_410 
ecc_err_410:
!$EV error(0, expr(@VA(.MAIN.ecc_err_410),16,16),1, IC_DATA, IR,17,x) 
	 .word 0xfa5cc000

	 .word 0xf5e4d100


.global ecc_err_411 
ecc_err_411:
!$EV error(0, expr(@VA(.MAIN.ecc_err_411),16,16),1, IC_TAG, IR,11, x) 
	 .word 0xf9e4c580


.global ecc_err_412 
ecc_err_412:
!$EV error(0, expr(@VA(.MAIN.ecc_err_412),16,16),1, IC_TAG, IR,10, x) 
	 .word 0xeed4c580

	 .word 0xec1cc000


.global ecc_err_413 
ecc_err_413:
!$EV error(0, expr(@VA(.MAIN.ecc_err_413),16,16),1, IC_TAG, IR,17, x) 
	 .word 0xf00ce003


.global ecc_err_414 
ecc_err_414:
!$EV error(0, expr(@VA(.MAIN.ecc_err_414),16,16),1, IC_TAG, IR,29, x) 
	 .word 0xee04e004


.global ecc_err_415 
ecc_err_415:
!$EV error(0, expr(@VA(.MAIN.ecc_err_415),16,16),1, IC_TAG, IR,8, x) 
	 .word 0xf5f4e000


.global ecc_err_416 
ecc_err_416:
!$EV error(0, expr(@VA(.MAIN.ecc_err_416),16,16),1, DC_DATA, 53) 
	 .word 0xec1cc000

	 .word 0xeaece032

	 .word 0xea0cc000


.global ecc_err_417 
ecc_err_417:
!$EV error(0, expr(@VA(.MAIN.ecc_err_417),16,16),1, IC_TAG, IR,0, x) 
	 .word 0xea94e002

	 .word 0xf8ecdd60

	 .word 0xf04cc000

	 .word 0xea7cc000


.global ecc_err_418 
ecc_err_418:
!$EV error(0, expr(@VA(.MAIN.ecc_err_418),16,16),1, IC_DATA, IR,2,x) 
	 .word 0xecece037


.global ecc_err_419 
ecc_err_419:
!$EV error(0, expr(@VA(.MAIN.ecc_err_419),16,16),1, DC_DATA, 16) 
	 .word 0xebe4e000

	 .word 0xf8fce004


.global ecc_err_420 
ecc_err_420:
!$EV error(0, expr(@VA(.MAIN.ecc_err_420),16,16),1, IC_TAG, IR,9, x) 
	 .word 0xf4ecc540


.global ecc_err_421 
ecc_err_421:
!$EV error(0, expr(@VA(.MAIN.ecc_err_421),16,16),1, DC_TAG, 58) 
	 .word 0xf8dce000


.global ecc_err_422 
ecc_err_422:
!$EV error(0, expr(@VA(.MAIN.ecc_err_422),16,16),1, DC_TAG, 22) 
	 .word 0xeaccc580

	 .word 0xede4d020


.global ecc_err_423 
ecc_err_423:
!$EV error(0, expr(@VA(.MAIN.ecc_err_423),16,16),1, DC_TAG, 1) 
	 .word 0xf1e4c480


.global ecc_err_424 
ecc_err_424:
!$EV error(0, expr(@VA(.MAIN.ecc_err_424),16,16),1, IC_DATA, IR,26,x) 
	 .word 0xf4d4dc60


.global ecc_err_425 
ecc_err_425:
!$EV error(0, expr(@VA(.MAIN.ecc_err_425),16,16),1, DC_DATA, 56) 
	 .word 0xea7cc000

	 .word 0xec7ce004


.global ecc_err_426 
ecc_err_426:
!$EV error(0, expr(@VA(.MAIN.ecc_err_426),16,16),1, IC_DATA, IR,5,x) 
	 .word 0xf47ce004


.global ecc_err_427 
ecc_err_427:
!$EV error(0, expr(@VA(.MAIN.ecc_err_427),16,16),1, IC_TAG, IR,8, x) 
	 .word 0xebf4c580


.global ecc_err_428 
ecc_err_428:
!$EV error(0, expr(@VA(.MAIN.ecc_err_428),16,16),1, DC_TAG, 41) 
	 .word 0xeeece01b

	 .word 0xf2dce008

	 .word 0xec1cc000

	 .word 0xf4ace028


.global ecc_err_429 
ecc_err_429:
!$EV error(0, expr(@VA(.MAIN.ecc_err_429),16,16),1, DC_DATA, 32) 
	 .word 0xea7ce004

	 .word 0xee74c000


.global ecc_err_430 
ecc_err_430:
!$EV error(0, expr(@VA(.MAIN.ecc_err_430),16,16),1, DC_TAG, 21) 
	 .word 0xee8ce03c

	 .word 0xea24e000

	 .word 0xf3f4c440


.global ecc_err_431 
ecc_err_431:
!$EV error(0, expr(@VA(.MAIN.ecc_err_431),16,16),1, IC_TAG, IR,7, x) 
	 .word 0xf86ce00b


.global ecc_err_432 
ecc_err_432:
!$EV error(0, expr(@VA(.MAIN.ecc_err_432),16,16),1, IC_DATA, IR,0,x) 
	 .word 0xf4cce01d

	 .word 0xf67cc000


.global ecc_err_433 
ecc_err_433:
!$EV error(0, expr(@VA(.MAIN.ecc_err_433),16,16),1, IC_DATA, IR,12,x) 
	 .word 0xf27ce000


.global ecc_err_434 
ecc_err_434:
!$EV error(0, expr(@VA(.MAIN.ecc_err_434),16,16),1, DC_TAG, 14) 
	 .word 0xf1f4e000

	 .word 0xf47cc000

	 .word 0xf6f4dc60

	 .word 0xf0ecd020

	 .word 0xecb4e002


.global ecc_err_435 
ecc_err_435:
!$EV error(0, expr(@VA(.MAIN.ecc_err_435),16,16),1, IC_DATA, IR,5,x) 
	 .word 0xf7f4c440


.global ecc_err_436 
ecc_err_436:
!$EV error(0, expr(@VA(.MAIN.ecc_err_436),16,16),1, IC_TAG, IR,16, x) 
	 .word 0xea7cc000


.global ecc_err_437 
ecc_err_437:
!$EV error(0, expr(@VA(.MAIN.ecc_err_437),16,16),1, IC_DATA, IR,9,x) 
	 .word 0xf1f4d000

	 .word 0xf5f4d100


.global ecc_err_438 
ecc_err_438:
!$EV error(0, expr(@VA(.MAIN.ecc_err_438),16,16),1, IC_TAG, IR,19, x) 
	 .word 0xfa44c000

	 .word 0xf5f4e000

	 .word 0xf4b4d000

	 .word 0xf24ce010


.global ecc_err_439 
ecc_err_439:
!$EV error(0, expr(@VA(.MAIN.ecc_err_439),16,16),1, IC_DATA, IR,30,x) 
	 .word 0xec7cc000


.global ecc_err_440 
ecc_err_440:
!$EV error(0, expr(@VA(.MAIN.ecc_err_440),16,16),1, DC_TAG, 51) 
	 .word 0xf87ce004

	 .word 0xee84c560


.global ecc_err_441 
ecc_err_441:
!$EV error(0, expr(@VA(.MAIN.ecc_err_441),16,16),1, IC_TAG, IR,5, x) 
	 .word 0xf06ce012

	 .word 0xf4fcdc40


.global ecc_err_442 
ecc_err_442:
!$EV error(0, expr(@VA(.MAIN.ecc_err_442),16,16),1, DC_DATA, 0) 
	 .word 0xf844e000


.global ecc_err_443 
ecc_err_443:
!$EV error(0, expr(@VA(.MAIN.ecc_err_443),16,16),1, IC_DATA, IR,5,x) 
	 .word 0xf6ece039

	 .word 0xf5e4e000


.global ecc_err_444 
ecc_err_444:
!$EV error(0, expr(@VA(.MAIN.ecc_err_444),16,16),1, DC_DATA, 47) 
	 .word 0xebf4e000

	 .word 0xec4ce01e

	 .word 0xf4fce000

	 .word 0xf014c000

	 .word 0xebe4e000

	 .word 0xf66ce02d

	 .word 0xeea4d020

	 .word 0xefe4e000


.global ecc_err_445 
ecc_err_445:
!$EV error(0, expr(@VA(.MAIN.ecc_err_445),16,16),1, IC_DATA, IR,23,x) 
	 .word 0xedf4c460

	 .word 0xf7f4e000


.global ecc_err_446 
ecc_err_446:
!$EV error(0, expr(@VA(.MAIN.ecc_err_446),16,16),1, DC_TAG, 60) 
	 .word 0xf0ecdd40

	 .word 0xf4ccd020


.global ecc_err_447 
ecc_err_447:
!$EV error(0, expr(@VA(.MAIN.ecc_err_447),16,16),1, IC_TAG, IR,14, x) 
	 .word 0xea0ce036


.global ecc_err_448 
ecc_err_448:
!$EV error(0, expr(@VA(.MAIN.ecc_err_448),16,16),1, IC_TAG, IR,31, x) 
	 .word 0xf7f4e000

	 .word 0xec14c000

	 .word 0xf86cc000

	 .word 0xea6cc000

	 .word 0xeab4e002

	 .word 0xf87ce004

	 .word 0xec94c440

	 .word 0xee14c000

	 .word 0xf86ce037


.global ecc_err_449 
ecc_err_449:
!$EV error(0, expr(@VA(.MAIN.ecc_err_449),16,16),1, DC_TAG, 61) 
	 .word 0xfa8cc460


.global ecc_err_450 
ecc_err_450:
!$EV error(0, expr(@VA(.MAIN.ecc_err_450),16,16),1, IC_DATA, IR,23,x) 
	 .word 0xecece031

	 .word 0xf494c440

	 .word 0xebf4c440

	 .word 0xecfce004


.global ecc_err_451 
ecc_err_451:
!$EV error(0, expr(@VA(.MAIN.ecc_err_451),16,16),1, IC_DATA, IR,5,x) 
	 .word 0xf2ece010


.global ecc_err_452 
ecc_err_452:
!$EV error(0, expr(@VA(.MAIN.ecc_err_452),16,16),1, IC_TAG, IR,26, x) 
	 .word 0xede4d120

	 .word 0xeccce020


.global ecc_err_453 
ecc_err_453:
!$EV error(0, expr(@VA(.MAIN.ecc_err_453),16,16),1, DC_DATA, 42) 
	 .word 0xf2cce03f


.global ecc_err_454 
ecc_err_454:
!$EV error(0, expr(@VA(.MAIN.ecc_err_454),16,16),1, DC_TAG, 36) 
	 .word 0xf5e4c440

	 .word 0xf06ce02e

	 .word 0xf0fce000

	 .word 0xf4ecd120


.global ecc_err_455 
ecc_err_455:
!$EV error(0, expr(@VA(.MAIN.ecc_err_455),16,16),1, IC_DATA, IR,6,x) 
	 .word 0xf9e4e000


.global ecc_err_456 
ecc_err_456:
!$EV error(0, expr(@VA(.MAIN.ecc_err_456),16,16),1, DC_DATA, 42) 
	 .word 0xf27cc000


.global ecc_err_457 
ecc_err_457:
!$EV error(0, expr(@VA(.MAIN.ecc_err_457),16,16),1, DC_TAG, 50) 
	 .word 0xf4ecdc60


.global ecc_err_458 
ecc_err_458:
!$EV error(0, expr(@VA(.MAIN.ecc_err_458),16,16),1, IC_DATA, IR,11,x) 
	 .word 0xf694c460


.global ecc_err_459 
ecc_err_459:
!$EV error(0, expr(@VA(.MAIN.ecc_err_459),16,16),1, IC_TAG, IR,19, x) 
	 .word 0xf4ece017

	 .word 0xf66cc000

	 .word 0xf7f4c440

	 .word 0xecbcd020


.global ecc_err_460 
ecc_err_460:
!$EV error(0, expr(@VA(.MAIN.ecc_err_460),16,16),1, IC_TAG, IR,2, x) 
	 .word 0xeff4c580


.global ecc_err_461 
ecc_err_461:
!$EV error(0, expr(@VA(.MAIN.ecc_err_461),16,16),1, DC_DATA, 47) 
	 .word 0xf6d4e002


.global ecc_err_462 
ecc_err_462:
!$EV error(0, expr(@VA(.MAIN.ecc_err_462),16,16),1, DC_TAG, 63) 
	 .word 0xf9f4e000

	 .word 0xf66cc000

	 .word 0xf0f4dc60


.global ecc_err_463 
ecc_err_463:
!$EV error(0, expr(@VA(.MAIN.ecc_err_463),16,16),1, IC_DATA, IR,16,x) 
	 .word 0xf64ce003


.global ecc_err_464 
ecc_err_464:
!$EV error(0, expr(@VA(.MAIN.ecc_err_464),16,16),1, DC_DATA, 8) 
	 .word 0xee6cc000


.global ecc_err_465 
ecc_err_465:
!$EV error(0, expr(@VA(.MAIN.ecc_err_465),16,16),1, DC_TAG, 1) 
	 .word 0xf3f4e000

	 .word 0xecfcdc60

	 .word 0xf3f4e000

	 .word 0xee7cc000


.global ecc_err_466 
ecc_err_466:
!$EV error(0, expr(@VA(.MAIN.ecc_err_466),16,16),1, IC_TAG, IR,3, x) 
	 .word 0xfa8ce03b

	 .word 0xf1f4dd60

	 .word 0xea84c440


.global ecc_err_467 
ecc_err_467:
!$EV error(0, expr(@VA(.MAIN.ecc_err_467),16,16),1, DC_TAG, 2) 
	 .word 0xf4ecc460

	 .word 0xf3f4dc60


.global ecc_err_468 
ecc_err_468:
!$EV error(0, expr(@VA(.MAIN.ecc_err_468),16,16),1, IC_DATA, IR,22,x) 
	 .word 0xecece00b

	 .word 0xeaece011

	 .word 0xfa7cc000

	 .word 0xeeecd120


.global ecc_err_469 
ecc_err_469:
!$EV error(0, expr(@VA(.MAIN.ecc_err_469),16,16),1, DC_DATA, 12) 
	 .word 0xf07ce004


.global ecc_err_470 
ecc_err_470:
!$EV error(0, expr(@VA(.MAIN.ecc_err_470),16,16),1, DC_TAG, 0) 
	 .word 0xec6cc000

	 .word 0xec6cc000


.global ecc_err_471 
ecc_err_471:
!$EV error(0, expr(@VA(.MAIN.ecc_err_471),16,16),1, DC_DATA, 37) 
	 .word 0xeeecc560

	 .word 0xf2fce000


.global ecc_err_472 
ecc_err_472:
!$EV error(0, expr(@VA(.MAIN.ecc_err_472),16,16),1, DC_TAG, 3) 
	 .word 0xebe4dd40


.global ecc_err_473 
ecc_err_473:
!$EV error(0, expr(@VA(.MAIN.ecc_err_473),16,16),1, DC_DATA, 43) 
	 .word 0xeeece01a


.global ecc_err_474 
ecc_err_474:
!$EV error(0, expr(@VA(.MAIN.ecc_err_474),16,16),1, DC_DATA, 33) 
	 .word 0xec7ce000


.global ecc_err_475 
ecc_err_475:
!$EV error(0, expr(@VA(.MAIN.ecc_err_475),16,16),1, DC_DATA, 63) 
	 .word 0xf3f4e000


.global ecc_err_476 
ecc_err_476:
!$EV error(0, expr(@VA(.MAIN.ecc_err_476),16,16),1, IC_DATA, IR,17,x) 
	 .word 0xeaece016


.global ecc_err_477 
ecc_err_477:
!$EV error(0, expr(@VA(.MAIN.ecc_err_477),16,16),1, IC_DATA, IR,9,x) 
	 .word 0xf3f4e000


.global ecc_err_478 
ecc_err_478:
!$EV error(0, expr(@VA(.MAIN.ecc_err_478),16,16),1, IC_TAG, IR,26, x) 
	 .word 0xf06ce026

	 .word 0xf2ecc460

	 .word 0xebe4c560

	 .word 0xf4ecdc60


.global ecc_err_479 
ecc_err_479:
!$EV error(0, expr(@VA(.MAIN.ecc_err_479),16,16),1, DC_TAG, 21) 
	 .word 0xf7e4c440


.global ecc_err_480 
ecc_err_480:
!$EV error(0, expr(@VA(.MAIN.ecc_err_480),16,16),1, DC_DATA, 52) 
	 .word 0xf27cc000


.global ecc_err_481 
ecc_err_481:
!$EV error(0, expr(@VA(.MAIN.ecc_err_481),16,16),1, IC_DATA, IR,14,x) 
	 .word 0xeff4dd40

	 .word 0xea7ce004


.global ecc_err_482 
ecc_err_482:
!$EV error(0, expr(@VA(.MAIN.ecc_err_482),16,16),1, DC_TAG, 60) 
	 .word 0xf6ecd100


.global ecc_err_483 
ecc_err_483:
!$EV error(0, expr(@VA(.MAIN.ecc_err_483),16,16),1, DC_DATA, 17) 
	 .word 0xf64cc000


.global ecc_err_484 
ecc_err_484:
!$EV error(0, expr(@VA(.MAIN.ecc_err_484),16,16),1, IC_DATA, IR,18,x) 
	 .word 0xec6ce02a


.global ecc_err_485 
ecc_err_485:
!$EV error(0, expr(@VA(.MAIN.ecc_err_485),16,16),1, IC_DATA, IR,18,x) 
	 .word 0xee0cc000


.global ecc_err_486 
ecc_err_486:
!$EV error(0, expr(@VA(.MAIN.ecc_err_486),16,16),1, DC_TAG, 57) 
	 .word 0xf86ce011


.global ecc_err_487 
ecc_err_487:
!$EV error(0, expr(@VA(.MAIN.ecc_err_487),16,16),1, DC_TAG, 57) 
	 .word 0xeeecc540

	 .word 0xf0ece037


.global ecc_err_488 
ecc_err_488:
!$EV error(0, expr(@VA(.MAIN.ecc_err_488),16,16),1, DC_DATA, 13) 
	 .word 0xea7ce000

	 .word 0xeeecc580


.global ecc_err_489 
ecc_err_489:
!$EV error(0, expr(@VA(.MAIN.ecc_err_489),16,16),1, DC_TAG, 30) 
	 .word 0xf3f4e000

	 .word 0xf2ecd120


.global ecc_err_490 
ecc_err_490:
!$EV error(0, expr(@VA(.MAIN.ecc_err_490),16,16),1, IC_DATA, IR,4,x) 
	 .word 0xf8ecd020


.global ecc_err_491 
ecc_err_491:
!$EV error(0, expr(@VA(.MAIN.ecc_err_491),16,16),1, DC_TAG, 22) 
	 .word 0xf47cc000

	 .word 0xfaace032


.global ecc_err_492 
ecc_err_492:
!$EV error(0, expr(@VA(.MAIN.ecc_err_492),16,16),1, IC_DATA, IR,0,x) 
	 .word 0xfa94e000


.global ecc_err_493 
ecc_err_493:
!$EV error(0, expr(@VA(.MAIN.ecc_err_493),16,16),1, IC_DATA, IR,11,x) 
	 .word 0xeedce000

	 .word 0xf8ece01f

	 .word 0xecd4e002


.global ecc_err_494 
ecc_err_494:
!$EV error(0, expr(@VA(.MAIN.ecc_err_494),16,16),1, DC_TAG, 43) 
	 .word 0xf9e4e000

	 .word 0xf9f4e000

	 .word 0xeefce004


.global ecc_err_495 
ecc_err_495:
!$EV error(0, expr(@VA(.MAIN.ecc_err_495),16,16),1, DC_TAG, 45) 
	 .word 0xf46ce01a

	 .word 0xedf4dd40

	 .word 0xf8ecd000


.global ecc_err_496 
ecc_err_496:
!$EV error(0, expr(@VA(.MAIN.ecc_err_496),16,16),1, IC_TAG, IR,24, x) 
	 .word 0xf46ce019


.global ecc_err_497 
ecc_err_497:
!$EV error(0, expr(@VA(.MAIN.ecc_err_497),16,16),1, DC_DATA, 16) 
	 .word 0xeaecc480


.global ecc_err_498 
ecc_err_498:
!$EV error(0, expr(@VA(.MAIN.ecc_err_498),16,16),1, DC_TAG, 59) 
	 .word 0xf27cc000


.global ecc_err_499 
ecc_err_499:
!$EV error(0, expr(@VA(.MAIN.ecc_err_499),16,16),1, DC_TAG, 41) 
	 .word 0xfa54c000


.global ecc_err_500 
ecc_err_500:
!$EV error(0, expr(@VA(.MAIN.ecc_err_500),16,16),1, DC_TAG, 54) 
	 .word 0xfa14e002

	 .word 0xececdd40


.global ecc_err_501 
ecc_err_501:
!$EV error(0, expr(@VA(.MAIN.ecc_err_501),16,16),1, DC_TAG, 55) 
	 .word 0xec9ce000

	 .word 0xeff4e000


.global ecc_err_502 
ecc_err_502:
!$EV error(0, expr(@VA(.MAIN.ecc_err_502),16,16),1, IC_DATA, IR,17,x) 
	 .word 0xec9ce000

	 .word 0xeafcc480


.global ecc_err_503 
ecc_err_503:
!$EV error(0, expr(@VA(.MAIN.ecc_err_503),16,16),1, DC_DATA, 23) 
	 .word 0xf3f4d000

	 .word 0xf2fcd120


.global ecc_err_504 
ecc_err_504:
!$EV error(0, expr(@VA(.MAIN.ecc_err_504),16,16),1, DC_DATA, 55) 
	 .word 0xf67ce004


.global ecc_err_505 
ecc_err_505:
!$EV error(0, expr(@VA(.MAIN.ecc_err_505),16,16),1, DC_TAG, 30) 
	 .word 0xf46cc000

	 .word 0xf06ce029


.global ecc_err_506 
ecc_err_506:
!$EV error(0, expr(@VA(.MAIN.ecc_err_506),16,16),1, IC_DATA, IR,2,x) 
	 .word 0xea8ce036

	 .word 0xf08ce009

	 .word 0xee4cc000

	 .word 0xee6ce033


.global ecc_err_507 
ecc_err_507:
!$EV error(0, expr(@VA(.MAIN.ecc_err_507),16,16),1, IC_TAG, IR,10, x) 
	 .word 0xf3f4e000

	 .word 0xf7e4dc60


.global ecc_err_508 
ecc_err_508:
!$EV error(0, expr(@VA(.MAIN.ecc_err_508),16,16),1, DC_TAG, 16) 
	 .word 0xf2ece01c

	 .word 0xec7cc000

	 .word 0xeef4e008

	 .word 0xfad4e002


.global ecc_err_509 
ecc_err_509:
!$EV error(0, expr(@VA(.MAIN.ecc_err_509),16,16),1, DC_TAG, 34) 
	 .word 0xf27cc000


.global ecc_err_510 
ecc_err_510:
!$EV error(0, expr(@VA(.MAIN.ecc_err_510),16,16),1, DC_DATA, 26) 
	 .word 0xf3f4dd60


.global ecc_err_511 
ecc_err_511:
!$EV error(0, expr(@VA(.MAIN.ecc_err_511),16,16),1, DC_TAG, 59) 
	 .word 0xf9f4dc60


.global ecc_err_512 
ecc_err_512:
!$EV error(0, expr(@VA(.MAIN.ecc_err_512),16,16),1, DC_DATA, 19) 
	 .word 0xf5f4e000


.global ecc_err_513 
ecc_err_513:
!$EV error(0, expr(@VA(.MAIN.ecc_err_513),16,16),1, DC_TAG, 23) 
	 .word 0xec9ce010


.global ecc_err_514 
ecc_err_514:
!$EV error(0, expr(@VA(.MAIN.ecc_err_514),16,16),1, DC_TAG, 29) 
	 .word 0xfa8cd120

	 .word 0xf894c540

	 .word 0xfa7cc000

	 .word 0xf4b4e000


.global ecc_err_515 
ecc_err_515:
!$EV error(0, expr(@VA(.MAIN.ecc_err_515),16,16),1, DC_TAG, 4) 
	 .word 0xfa44e000

	 .word 0xfab4c440

	 .word 0xefe4dc40


	 ba diag_pass 
	 nop 
run_th_1:

	 wr %g0, 249, %asi

	 ta T_CHANGE_HPRIV 
	 nop 
	 set 2832378915, %i0
	 set 1149291367, %i1
	 set 3248937125, %i2
	 set 3863816361, %i3
	 set 2037777780, %i4
	 set 2133145729, %i5
	 set 1329882348, %i6
	 set 1016669646, %i7
	 set 480410696, %o0
	 set 1493939893, %o1
	 set 1725882853, %o2
	 set 3556738174, %o3
	 set 1674060935, %o4
	 set 1533919695, %o5
	 set 3859353867, %o6
	 set 66554386, %o7
	 set 2724633457, %l0
	 set 3950359363, %l1
	 set 2009755938, %l2
	 set 3317949326, %l3
	 set 2092694995, %l4
	 set 2346733135, %l5
	 set 327172489, %l6
	 set 3433990258, %l7
	 set 196119927, %g0
	 set 4259867228, %g1
	 set 2289755858, %g2
	 set 1893303728, %g3
	 set 231913945, %g4
	 set 2857918377, %g5
	 set 1093960852, %g6
	 set 2200106231, %g7

wr %g0, 0x4, %fprs 
	 setx self_modcode, %l0, %l3
	 ldd [%l3], %f0
	 add 0x8, %l3, %l3
	 ldd [%l3], %f2
	 add 0x8, %l3, %l3
	 ldd [%l3], %f4
	 add 0x8, %l3, %l3
	 ldd [%l3], %f6
	 add 0x8, %l3, %l3
	 ldd [%l3], %f8
	 add 0x8, %l3, %l3
	 ldd [%l3], %f10
	 add 0x8, %l3, %l3
	 ldd [%l3], %f12
	 add 0x8, %l3, %l3
	 ldd [%l3], %f14
	 add 0x8, %l3, %l3
	 ldd [%l3], %f16
	 add 0x8, %l3, %l3
	 ldd [%l3], %f18
	 add 0x8, %l3, %l3
	 ldd [%l3], %f20
	 add 0x8, %l3, %l3
	 ldd [%l3], %f22
	 add 0x8, %l3, %l3
	 ldd [%l3], %f24
	 add 0x8, %l3, %l3
	 ldd [%l3], %f26
	 add 0x8, %l3, %l3
	 ldd [%l3], %f28
	 add 0x8, %l3, %l3
	 ldd [%l3], %f30
	 add 0x8, %l3, %l3
	 ldd [%l3], %f32
	 add 0x8, %l3, %l3
	 ldd [%l3], %f34
	 add 0x8, %l3, %l3
	 ldd [%l3], %f36
	 add 0x8, %l3, %l3
	 ldd [%l3], %f38
	 add 0x8, %l3, %l3
	 ldd [%l3], %f40
	 add 0x8, %l3, %l3
	 ldd [%l3], %f42
	 add 0x8, %l3, %l3
	 ldd [%l3], %f44
	 add 0x8, %l3, %l3
	 ldd [%l3], %f46
	 add 0x8, %l3, %l3
	 ldd [%l3], %f48
	 add 0x8, %l3, %l3
	 ldd [%l3], %f50
	 add 0x8, %l3, %l3
	 ldd [%l3], %f52
	 add 0x8, %l3, %l3
	 ldd [%l3], %f54
	 add 0x8, %l3, %l3
	 ldd [%l3], %f56
	 add 0x8, %l3, %l3
	 ldd [%l3], %f58
	 add 0x8, %l3, %l3
	 ldd [%l3], %f60
	 add 0x8, %l3, %l3
	 ldd [%l3], %f62
	 add 0x8, %l3, %l3
	 setx data5, %l0, %l3
	 setx self_modcode, %l0, %l1
.global spu_ldst_0
spu_ldst_0:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_0:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_1
spu_ldst_1:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_1:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_2
spu_ldst_2:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_2:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 5, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_3
spu_ldst_3:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_3:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_4
spu_ldst_4:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_4:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_5
spu_ldst_5:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_5:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_6
spu_ldst_6:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_6:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_7
spu_ldst_7:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_7:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_8
spu_ldst_8:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_8:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 49, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_9
spu_ldst_9:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_9:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_10
spu_ldst_10:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_10:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_11
spu_ldst_11:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_11:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_12
spu_ldst_12:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_12:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_13
spu_ldst_13:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_13:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_14
spu_ldst_14:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_14:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_15
spu_ldst_15:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_15:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_16
spu_ldst_16:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_16:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_17
spu_ldst_17:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_17:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_18
spu_ldst_18:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_18:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_19
spu_ldst_19:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_19:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 46, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_20
spu_ldst_20:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_20:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_21
spu_ldst_21:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_21:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 34, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_22
spu_ldst_22:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_22:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_23
spu_ldst_23:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_23:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_24
spu_ldst_24:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_24:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_25
spu_ldst_25:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_25:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_26
spu_ldst_26:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_26:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_27
spu_ldst_27:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_27:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_28
spu_ldst_28:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_28:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_29
spu_ldst_29:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_29:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_30
spu_ldst_30:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_30:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_31
spu_ldst_31:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_31:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_32
spu_ldst_32:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_32:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_33
spu_ldst_33:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_33:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_34
spu_ldst_34:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_34:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_35
spu_ldst_35:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_35:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_36
spu_ldst_36:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_36:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_37
spu_ldst_37:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_37:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_38
spu_ldst_38:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_38:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_39
spu_ldst_39:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_39:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_40
spu_ldst_40:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_40:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_41
spu_ldst_41:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_41:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_42
spu_ldst_42:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_42:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_43
spu_ldst_43:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_43:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_44
spu_ldst_44:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_44:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_45
spu_ldst_45:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_45:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_46
spu_ldst_46:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_46:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_47
spu_ldst_47:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_47:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_48
spu_ldst_48:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_48:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_49
spu_ldst_49:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_49:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_50
spu_ldst_50:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_50:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_51
spu_ldst_51:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_51:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_52
spu_ldst_52:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_52:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_53
spu_ldst_53:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_53:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_54
spu_ldst_54:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_54:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_55
spu_ldst_55:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_55:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_56
spu_ldst_56:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_56:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 9, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_57
spu_ldst_57:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_57:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_58
spu_ldst_58:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_58:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_59
spu_ldst_59:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_59:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_60
spu_ldst_60:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_60:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_61
spu_ldst_61:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_61:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_62
spu_ldst_62:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_62:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_63
spu_ldst_63:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_63:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_64
spu_ldst_64:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_64:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_65
spu_ldst_65:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_65:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_66
spu_ldst_66:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_66:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_67
spu_ldst_67:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_67:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_68
spu_ldst_68:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_68:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_69
spu_ldst_69:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_69:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_70
spu_ldst_70:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_70:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_71
spu_ldst_71:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_71:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_72
spu_ldst_72:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_72:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_73
spu_ldst_73:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_73:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_74
spu_ldst_74:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_74:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_75
spu_ldst_75:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_75:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_76
spu_ldst_76:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_76:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_77
spu_ldst_77:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_77:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_78
spu_ldst_78:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_78:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_79
spu_ldst_79:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_79:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_80
spu_ldst_80:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_80:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_81
spu_ldst_81:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_81:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_82
spu_ldst_82:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_82:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_83
spu_ldst_83:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_83:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_84
spu_ldst_84:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_84:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_85
spu_ldst_85:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_85:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_86
spu_ldst_86:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_86:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 40, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_87
spu_ldst_87:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_87:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_88
spu_ldst_88:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_88:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_89
spu_ldst_89:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_89:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 46, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_90
spu_ldst_90:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_90:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_91
spu_ldst_91:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_91:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_92
spu_ldst_92:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_92:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_93
spu_ldst_93:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_93:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_94
spu_ldst_94:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_94:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_95
spu_ldst_95:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_95:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_96
spu_ldst_96:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_96:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_97
spu_ldst_97:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_97:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_98
spu_ldst_98:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_98:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_99
spu_ldst_99:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_99:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_100
spu_ldst_100:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_100:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_101
spu_ldst_101:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_101:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_102
spu_ldst_102:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_102:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_103
spu_ldst_103:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_103:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_104
spu_ldst_104:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_104:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_105
spu_ldst_105:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_105:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_106
spu_ldst_106:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_106:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_107
spu_ldst_107:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_107:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_108
spu_ldst_108:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_108:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_109
spu_ldst_109:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_109:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_110
spu_ldst_110:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_110:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 40, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_111
spu_ldst_111:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_111:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_112
spu_ldst_112:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_112:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_113
spu_ldst_113:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_113:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_114
spu_ldst_114:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_114:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 34, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_115
spu_ldst_115:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_115:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_116
spu_ldst_116:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_116:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_117
spu_ldst_117:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_117:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_118
spu_ldst_118:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_118:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_119
spu_ldst_119:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_119:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_120
spu_ldst_120:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_120:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_121
spu_ldst_121:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_121:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_122
spu_ldst_122:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_122:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 5, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_123
spu_ldst_123:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_123:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_124
spu_ldst_124:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_124:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_125
spu_ldst_125:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_125:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_126
spu_ldst_126:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_126:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_127
spu_ldst_127:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_127:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_128
spu_ldst_128:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_128:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_129
spu_ldst_129:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_129:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 39, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_130
spu_ldst_130:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_130:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_131
spu_ldst_131:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_131:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_132
spu_ldst_132:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_132:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_133
spu_ldst_133:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_133:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 40, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_134
spu_ldst_134:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_134:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_135
spu_ldst_135:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_135:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_136
spu_ldst_136:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_136:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_137
spu_ldst_137:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_137:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_138
spu_ldst_138:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_138:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 5, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_139
spu_ldst_139:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_139:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_140
spu_ldst_140:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_140:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 53, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_141
spu_ldst_141:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_141:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 46, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_142
spu_ldst_142:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_142:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_143
spu_ldst_143:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_143:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_144
spu_ldst_144:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_144:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_145
spu_ldst_145:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_145:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_146
spu_ldst_146:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_146:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_147
spu_ldst_147:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_147:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_148
spu_ldst_148:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_148:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_149
spu_ldst_149:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_149:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_150
spu_ldst_150:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_150:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_151
spu_ldst_151:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_151:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_152
spu_ldst_152:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_152:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_153
spu_ldst_153:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_153:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_154
spu_ldst_154:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_154:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_155
spu_ldst_155:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_155:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 53, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_156
spu_ldst_156:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_156:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_157
spu_ldst_157:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_157:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_158
spu_ldst_158:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_158:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 46, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_159
spu_ldst_159:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_159:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_160
spu_ldst_160:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_160:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_161
spu_ldst_161:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_161:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_162
spu_ldst_162:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_162:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_163
spu_ldst_163:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_163:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_164
spu_ldst_164:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_164:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_165
spu_ldst_165:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_165:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_166
spu_ldst_166:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_166:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_167
spu_ldst_167:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_167:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_168
spu_ldst_168:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_168:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_169
spu_ldst_169:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_169:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_170
spu_ldst_170:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_170:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_171
spu_ldst_171:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_171:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_172
spu_ldst_172:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_172:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_173
spu_ldst_173:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_173:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_174
spu_ldst_174:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_174:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_175
spu_ldst_175:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_175:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_176
spu_ldst_176:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_176:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 34, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_177
spu_ldst_177:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_177:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_178
spu_ldst_178:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_178:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_179
spu_ldst_179:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_179:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_180
spu_ldst_180:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_180:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_181
spu_ldst_181:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_181:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_182
spu_ldst_182:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_182:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_183
spu_ldst_183:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_183:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_184
spu_ldst_184:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_184:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 34, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_185
spu_ldst_185:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_185:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_186
spu_ldst_186:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_186:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_187
spu_ldst_187:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_187:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 49, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_188
spu_ldst_188:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_188:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_189
spu_ldst_189:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_189:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 9, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_190
spu_ldst_190:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_190:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_191
spu_ldst_191:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_191:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_192
spu_ldst_192:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_192:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_193
spu_ldst_193:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_193:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_194
spu_ldst_194:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_194:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_195
spu_ldst_195:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_195:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 42, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_196
spu_ldst_196:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_196:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_197
spu_ldst_197:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_197:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 49, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_198
spu_ldst_198:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_198:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_199
spu_ldst_199:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_199:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_200
spu_ldst_200:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_200:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_201
spu_ldst_201:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_201:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 9, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_202
spu_ldst_202:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_202:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_203
spu_ldst_203:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_203:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_204
spu_ldst_204:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_204:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_205
spu_ldst_205:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_205:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_206
spu_ldst_206:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_206:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_207
spu_ldst_207:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_207:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_208
spu_ldst_208:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_208:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_209
spu_ldst_209:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_209:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_210
spu_ldst_210:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_210:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_211
spu_ldst_211:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_211:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_212
spu_ldst_212:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_212:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_213
spu_ldst_213:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_213:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_214
spu_ldst_214:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_214:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_215
spu_ldst_215:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_215:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_216
spu_ldst_216:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_216:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_217
spu_ldst_217:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_217:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_218
spu_ldst_218:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_218:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_219
spu_ldst_219:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_219:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_220
spu_ldst_220:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_220:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_221
spu_ldst_221:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_221:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_222
spu_ldst_222:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_222:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_223
spu_ldst_223:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_223:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_224
spu_ldst_224:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_224:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_225
spu_ldst_225:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_225:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_226
spu_ldst_226:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_226:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_227
spu_ldst_227:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_227:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_228
spu_ldst_228:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_228:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_229
spu_ldst_229:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_229:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_230
spu_ldst_230:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_230:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_231
spu_ldst_231:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_231:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_232
spu_ldst_232:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_232:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_233
spu_ldst_233:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_233:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_234
spu_ldst_234:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_234:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_235
spu_ldst_235:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_235:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_236
spu_ldst_236:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_236:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_237
spu_ldst_237:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_237:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_238
spu_ldst_238:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_238:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_239
spu_ldst_239:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_239:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_240
spu_ldst_240:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_240:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_241
spu_ldst_241:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_241:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_242
spu_ldst_242:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_242:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_243
spu_ldst_243:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_243:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_244
spu_ldst_244:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_244:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_245
spu_ldst_245:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_245:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_246
spu_ldst_246:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_246:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_247
spu_ldst_247:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_247:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 49, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_248
spu_ldst_248:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_248:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 34, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_249
spu_ldst_249:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_249:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_250
spu_ldst_250:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_250:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_251
spu_ldst_251:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_251:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_252
spu_ldst_252:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_252:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_253
spu_ldst_253:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_253:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_254
spu_ldst_254:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_254:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_255
spu_ldst_255:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_255:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_256
spu_ldst_256:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_256:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_257
spu_ldst_257:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_257:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_258
spu_ldst_258:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_258:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_259
spu_ldst_259:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_259:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_260
spu_ldst_260:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_260:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_261
spu_ldst_261:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_261:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_262
spu_ldst_262:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_262:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_263
spu_ldst_263:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_263:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_264
spu_ldst_264:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_264:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_265
spu_ldst_265:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_265:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_266
spu_ldst_266:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_266:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_267
spu_ldst_267:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_267:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_268
spu_ldst_268:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_268:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_269
spu_ldst_269:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_269:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_270
spu_ldst_270:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_270:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_271
spu_ldst_271:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_271:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_272
spu_ldst_272:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_272:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_273
spu_ldst_273:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_273:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_274
spu_ldst_274:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_274:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_275
spu_ldst_275:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_275:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_276
spu_ldst_276:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_276:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_277
spu_ldst_277:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_277:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_278
spu_ldst_278:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_278:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_279
spu_ldst_279:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_279:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_280
spu_ldst_280:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_280:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 42, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_281
spu_ldst_281:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_281:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_282
spu_ldst_282:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_282:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_283
spu_ldst_283:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_283:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_284
spu_ldst_284:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_284:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_285
spu_ldst_285:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_285:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_286
spu_ldst_286:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_286:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_287
spu_ldst_287:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_287:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_288
spu_ldst_288:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_288:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_289
spu_ldst_289:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_289:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_290
spu_ldst_290:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_290:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_291
spu_ldst_291:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_291:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_292
spu_ldst_292:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_292:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_293
spu_ldst_293:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_293:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 53, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_294
spu_ldst_294:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_294:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_295
spu_ldst_295:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_295:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_296
spu_ldst_296:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_296:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_297
spu_ldst_297:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_297:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_298
spu_ldst_298:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_298:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_299
spu_ldst_299:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_299:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_300
spu_ldst_300:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_300:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_301
spu_ldst_301:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_301:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_302
spu_ldst_302:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_302:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_303
spu_ldst_303:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_303:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_304
spu_ldst_304:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_304:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_305
spu_ldst_305:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_305:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_306
spu_ldst_306:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_306:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_307
spu_ldst_307:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_307:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_308
spu_ldst_308:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_308:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_309
spu_ldst_309:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_309:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_310
spu_ldst_310:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_310:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_311
spu_ldst_311:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_311:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_312
spu_ldst_312:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_312:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_313
spu_ldst_313:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_313:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_314
spu_ldst_314:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_314:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_315
spu_ldst_315:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_315:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_316
spu_ldst_316:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_316:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_317
spu_ldst_317:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_317:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_318
spu_ldst_318:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_318:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 34, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_319
spu_ldst_319:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_319:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_320
spu_ldst_320:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_320:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_321
spu_ldst_321:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_321:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_322
spu_ldst_322:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_322:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_323
spu_ldst_323:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_323:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_324
spu_ldst_324:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_324:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_325
spu_ldst_325:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_325:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_326
spu_ldst_326:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_326:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_327
spu_ldst_327:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_327:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_328
spu_ldst_328:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_328:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_329
spu_ldst_329:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_329:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_330
spu_ldst_330:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_330:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_331
spu_ldst_331:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_331:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_332
spu_ldst_332:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_332:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_333
spu_ldst_333:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_333:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_334
spu_ldst_334:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_334:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_335
spu_ldst_335:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_335:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_336
spu_ldst_336:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_336:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_337
spu_ldst_337:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_337:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_338
spu_ldst_338:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_338:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 40, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_339
spu_ldst_339:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_339:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_340
spu_ldst_340:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_340:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_341
spu_ldst_341:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_341:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_342
spu_ldst_342:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_342:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_343
spu_ldst_343:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_343:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_344
spu_ldst_344:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_344:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_345
spu_ldst_345:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_345:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_346
spu_ldst_346:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_346:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_347
spu_ldst_347:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_347:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_348
spu_ldst_348:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_348:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_349
spu_ldst_349:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_349:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_350
spu_ldst_350:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_350:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_351
spu_ldst_351:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_351:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_352
spu_ldst_352:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_352:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_353
spu_ldst_353:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_353:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_354
spu_ldst_354:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_354:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_355
spu_ldst_355:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_355:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_356
spu_ldst_356:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_356:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_357
spu_ldst_357:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_357:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_358
spu_ldst_358:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_358:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_359
spu_ldst_359:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_359:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_360
spu_ldst_360:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_360:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_361
spu_ldst_361:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_361:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_362
spu_ldst_362:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_362:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_363
spu_ldst_363:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_363:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_364
spu_ldst_364:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_364:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_365
spu_ldst_365:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_365:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_366
spu_ldst_366:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_366:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_367
spu_ldst_367:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_367:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_368
spu_ldst_368:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_368:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_369
spu_ldst_369:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_369:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_370
spu_ldst_370:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_370:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_371
spu_ldst_371:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_371:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 5, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_372
spu_ldst_372:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_372:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_373
spu_ldst_373:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_373:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_374
spu_ldst_374:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_374:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_375
spu_ldst_375:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_375:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_376
spu_ldst_376:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_376:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_377
spu_ldst_377:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_377:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_378
spu_ldst_378:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_378:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_379
spu_ldst_379:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_379:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_380
spu_ldst_380:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_380:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_381
spu_ldst_381:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_381:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_382
spu_ldst_382:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_382:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_383
spu_ldst_383:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_383:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_384
spu_ldst_384:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_384:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_385
spu_ldst_385:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_385:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_386
spu_ldst_386:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_386:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_387
spu_ldst_387:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_387:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_388
spu_ldst_388:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_388:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_389
spu_ldst_389:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_389:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_390
spu_ldst_390:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_390:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_391
spu_ldst_391:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_391:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_392
spu_ldst_392:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_392:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_393
spu_ldst_393:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_393:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_394
spu_ldst_394:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_394:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_395
spu_ldst_395:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_395:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_396
spu_ldst_396:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_396:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_397
spu_ldst_397:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_397:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_398
spu_ldst_398:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_398:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_399
spu_ldst_399:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_399:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_400
spu_ldst_400:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_400:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_401
spu_ldst_401:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_401:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_402
spu_ldst_402:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_402:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 42, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_403
spu_ldst_403:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_403:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_404
spu_ldst_404:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_404:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_405
spu_ldst_405:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_405:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_406
spu_ldst_406:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_406:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_407
spu_ldst_407:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_407:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 42, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_408
spu_ldst_408:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_408:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_409
spu_ldst_409:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_409:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_410
spu_ldst_410:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_410:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_411
spu_ldst_411:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_411:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_412
spu_ldst_412:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_412:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_413
spu_ldst_413:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_413:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_414
spu_ldst_414:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_414:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_415
spu_ldst_415:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_415:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_416
spu_ldst_416:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_416:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_417
spu_ldst_417:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_417:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_418
spu_ldst_418:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_418:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_419
spu_ldst_419:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_419:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_420
spu_ldst_420:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_420:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_421
spu_ldst_421:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_421:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_422
spu_ldst_422:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_422:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_423
spu_ldst_423:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_423:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_424
spu_ldst_424:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_424:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_425
spu_ldst_425:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_425:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_426
spu_ldst_426:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_426:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_427
spu_ldst_427:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_427:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_428
spu_ldst_428:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_428:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_429
spu_ldst_429:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_429:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_430
spu_ldst_430:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_430:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_431
spu_ldst_431:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_431:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_432
spu_ldst_432:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_432:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_433
spu_ldst_433:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_433:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_434
spu_ldst_434:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_434:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_435
spu_ldst_435:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_435:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_436
spu_ldst_436:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_436:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_437
spu_ldst_437:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_437:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_438
spu_ldst_438:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_438:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_439
spu_ldst_439:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_439:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_440
spu_ldst_440:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_440:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_441
spu_ldst_441:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_441:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_442
spu_ldst_442:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_442:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_443
spu_ldst_443:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_443:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_444
spu_ldst_444:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_444:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_445
spu_ldst_445:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_445:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 46, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_446
spu_ldst_446:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_446:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_447
spu_ldst_447:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_447:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 9, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_448
spu_ldst_448:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_448:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_449
spu_ldst_449:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_449:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_450
spu_ldst_450:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_450:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_451
spu_ldst_451:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_451:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_452
spu_ldst_452:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_452:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_453
spu_ldst_453:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_453:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_454
spu_ldst_454:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_454:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_455
spu_ldst_455:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_455:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_456
spu_ldst_456:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_456:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_457
spu_ldst_457:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_457:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_458
spu_ldst_458:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_458:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_459
spu_ldst_459:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_459:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_460
spu_ldst_460:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_460:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_461
spu_ldst_461:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_461:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_462
spu_ldst_462:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_462:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_463
spu_ldst_463:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_463:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_464
spu_ldst_464:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_464:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 5, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_465
spu_ldst_465:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_465:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_466
spu_ldst_466:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_466:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_467
spu_ldst_467:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_467:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_468
spu_ldst_468:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_468:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_469
spu_ldst_469:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_469:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 46, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_470
spu_ldst_470:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_470:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_471
spu_ldst_471:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_471:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_472
spu_ldst_472:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_472:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_473
spu_ldst_473:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_473:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_474
spu_ldst_474:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_474:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_475
spu_ldst_475:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_475:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_476
spu_ldst_476:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_476:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_477
spu_ldst_477:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_477:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 46, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_478
spu_ldst_478:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_478:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_479
spu_ldst_479:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_479:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_480
spu_ldst_480:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_480:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_481
spu_ldst_481:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_481:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_482
spu_ldst_482:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_482:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_483
spu_ldst_483:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_483:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 42, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_484
spu_ldst_484:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_484:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_485
spu_ldst_485:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_485:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_486
spu_ldst_486:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_486:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 39, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_487
spu_ldst_487:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_487:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_488
spu_ldst_488:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_488:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_489
spu_ldst_489:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_489:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_490
spu_ldst_490:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_490:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 9, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_491
spu_ldst_491:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_491:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_492
spu_ldst_492:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_492:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_493
spu_ldst_493:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_493:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_494
spu_ldst_494:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_494:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_495
spu_ldst_495:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_495:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_496
spu_ldst_496:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_496:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_497
spu_ldst_497:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_497:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_498
spu_ldst_498:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_498:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_499
spu_ldst_499:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_499:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_500
spu_ldst_500:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_500:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_501
spu_ldst_501:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_501:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_502
spu_ldst_502:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_502:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_503
spu_ldst_503:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_503:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 9, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_504
spu_ldst_504:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_504:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_505
spu_ldst_505:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_505:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_506
spu_ldst_506:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_506:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_507
spu_ldst_507:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_507:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_508
spu_ldst_508:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_508:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_509
spu_ldst_509:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_509:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_510
spu_ldst_510:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_510:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_511
spu_ldst_511:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_511:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_512
spu_ldst_512:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_512:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_513
spu_ldst_513:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_513:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_514
spu_ldst_514:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_514:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_515
spu_ldst_515:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_515:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_516
spu_ldst_516:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_516:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 5, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_517
spu_ldst_517:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_517:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_518
spu_ldst_518:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_518:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_519
spu_ldst_519:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_519:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_520
spu_ldst_520:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_520:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_521
spu_ldst_521:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_521:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_522
spu_ldst_522:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_522:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_523
spu_ldst_523:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_523:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_524
spu_ldst_524:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_524:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_525
spu_ldst_525:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_525:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_526
spu_ldst_526:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_526:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_527
spu_ldst_527:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_527:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_528
spu_ldst_528:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_528:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_529
spu_ldst_529:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_529:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_530
spu_ldst_530:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_530:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_531
spu_ldst_531:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_531:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_532
spu_ldst_532:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_532:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_533
spu_ldst_533:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_533:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_534
spu_ldst_534:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_534:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_535
spu_ldst_535:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_535:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_536
spu_ldst_536:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_536:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_537
spu_ldst_537:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_537:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_538
spu_ldst_538:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_538:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_539
spu_ldst_539:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_539:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_540
spu_ldst_540:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_540:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_541
spu_ldst_541:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_541:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_542
spu_ldst_542:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_542:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_543
spu_ldst_543:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_543:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_544
spu_ldst_544:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_544:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_545
spu_ldst_545:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_545:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_546
spu_ldst_546:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_546:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_547
spu_ldst_547:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_547:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_548
spu_ldst_548:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_548:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_549
spu_ldst_549:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_549:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_550
spu_ldst_550:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_550:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_551
spu_ldst_551:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_551:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_552
spu_ldst_552:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_552:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_553
spu_ldst_553:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_553:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_554
spu_ldst_554:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_554:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_555
spu_ldst_555:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_555:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_556
spu_ldst_556:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_556:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_557
spu_ldst_557:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_557:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 40, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_558
spu_ldst_558:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_558:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_559
spu_ldst_559:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_559:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_560
spu_ldst_560:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_560:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_561
spu_ldst_561:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_561:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_562
spu_ldst_562:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_562:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_563
spu_ldst_563:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_563:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_564
spu_ldst_564:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_564:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_565
spu_ldst_565:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_565:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_566
spu_ldst_566:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_566:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_567
spu_ldst_567:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_567:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_568
spu_ldst_568:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_568:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_569
spu_ldst_569:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_569:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_570
spu_ldst_570:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_570:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_571
spu_ldst_571:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_571:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_572
spu_ldst_572:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_572:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_573
spu_ldst_573:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_573:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_574
spu_ldst_574:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_574:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_575
spu_ldst_575:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_575:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 53, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_576
spu_ldst_576:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_576:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_577
spu_ldst_577:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_577:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_578
spu_ldst_578:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_578:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 9, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_579
spu_ldst_579:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_579:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_580
spu_ldst_580:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_580:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_581
spu_ldst_581:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_581:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_582
spu_ldst_582:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_582:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_583
spu_ldst_583:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_583:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_584
spu_ldst_584:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_584:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_585
spu_ldst_585:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_585:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_586
spu_ldst_586:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_586:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_587
spu_ldst_587:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_587:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_588
spu_ldst_588:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_588:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_589
spu_ldst_589:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_589:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_590
spu_ldst_590:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_590:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_591
spu_ldst_591:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_591:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_592
spu_ldst_592:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_592:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_593
spu_ldst_593:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_593:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_594
spu_ldst_594:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_594:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_595
spu_ldst_595:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_595:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_596
spu_ldst_596:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_596:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_597
spu_ldst_597:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_597:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 40, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_598
spu_ldst_598:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_598:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_599
spu_ldst_599:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_599:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_600
spu_ldst_600:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_600:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_601
spu_ldst_601:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_601:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_602
spu_ldst_602:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_602:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_603
spu_ldst_603:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_603:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_604
spu_ldst_604:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_604:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_605
spu_ldst_605:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_605:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_606
spu_ldst_606:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_606:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_607
spu_ldst_607:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_607:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_608
spu_ldst_608:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_608:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 42, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_609
spu_ldst_609:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_609:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 49, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_610
spu_ldst_610:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_610:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_611
spu_ldst_611:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_611:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_612
spu_ldst_612:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_612:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_613
spu_ldst_613:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_613:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_614
spu_ldst_614:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_614:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_615
spu_ldst_615:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_615:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_616
spu_ldst_616:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_616:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_617
spu_ldst_617:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_617:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_618
spu_ldst_618:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_618:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_619
spu_ldst_619:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_619:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_620
spu_ldst_620:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_620:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_621
spu_ldst_621:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_621:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_622
spu_ldst_622:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_622:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 39, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_623
spu_ldst_623:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_623:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_624
spu_ldst_624:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_624:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_625
spu_ldst_625:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_625:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 5, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_626
spu_ldst_626:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_626:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_627
spu_ldst_627:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_627:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_628
spu_ldst_628:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_628:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_629
spu_ldst_629:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_629:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_630
spu_ldst_630:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_630:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_631
spu_ldst_631:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_631:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_632
spu_ldst_632:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_632:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_633
spu_ldst_633:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_633:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_634
spu_ldst_634:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_634:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_635
spu_ldst_635:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_635:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_636
spu_ldst_636:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_636:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_637
spu_ldst_637:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_637:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_638
spu_ldst_638:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_638:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_639
spu_ldst_639:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_639:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_640
spu_ldst_640:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_640:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_641
spu_ldst_641:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_641:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_642
spu_ldst_642:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_642:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_643
spu_ldst_643:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_643:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_644
spu_ldst_644:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_644:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 39, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_645
spu_ldst_645:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_645:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_646
spu_ldst_646:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_646:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_647
spu_ldst_647:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_647:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_648
spu_ldst_648:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_648:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_649
spu_ldst_649:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_649:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_650
spu_ldst_650:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_650:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_651
spu_ldst_651:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_651:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_652
spu_ldst_652:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_652:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_653
spu_ldst_653:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_653:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_654
spu_ldst_654:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_654:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_655
spu_ldst_655:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_655:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_656
spu_ldst_656:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_656:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_657
spu_ldst_657:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_657:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_658
spu_ldst_658:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_658:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_659
spu_ldst_659:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_659:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_660
spu_ldst_660:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_660:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_661
spu_ldst_661:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_661:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_662
spu_ldst_662:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_662:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_663
spu_ldst_663:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_663:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_664
spu_ldst_664:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_664:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_665
spu_ldst_665:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_665:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_666
spu_ldst_666:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_666:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_667
spu_ldst_667:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_667:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_668
spu_ldst_668:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_668:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_669
spu_ldst_669:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_669:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_670
spu_ldst_670:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_670:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_671
spu_ldst_671:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_671:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_672
spu_ldst_672:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_672:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_673
spu_ldst_673:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_673:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_674
spu_ldst_674:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_674:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_675
spu_ldst_675:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_675:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_676
spu_ldst_676:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_676:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_677
spu_ldst_677:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_677:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 53, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_678
spu_ldst_678:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_678:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_679
spu_ldst_679:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_679:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_680
spu_ldst_680:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_680:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_681
spu_ldst_681:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_681:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 40, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_682
spu_ldst_682:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_682:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_683
spu_ldst_683:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_683:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_684
spu_ldst_684:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_684:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_685
spu_ldst_685:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_685:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_686
spu_ldst_686:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_686:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_687
spu_ldst_687:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_687:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_688
spu_ldst_688:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_688:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_689
spu_ldst_689:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_689:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_690
spu_ldst_690:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_690:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_691
spu_ldst_691:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_691:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_692
spu_ldst_692:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_692:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_693
spu_ldst_693:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_693:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_694
spu_ldst_694:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_694:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_695
spu_ldst_695:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_695:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_696
spu_ldst_696:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_696:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_697
spu_ldst_697:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_697:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_698
spu_ldst_698:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_698:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_699
spu_ldst_699:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_699:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_700
spu_ldst_700:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_700:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_701
spu_ldst_701:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_701:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_702
spu_ldst_702:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_702:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_703
spu_ldst_703:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_703:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_704
spu_ldst_704:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_704:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_705
spu_ldst_705:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_705:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_706
spu_ldst_706:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_706:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_707
spu_ldst_707:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_707:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_708
spu_ldst_708:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_708:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_709
spu_ldst_709:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_709:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_710
spu_ldst_710:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_710:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_711
spu_ldst_711:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_711:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_712
spu_ldst_712:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_712:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_713
spu_ldst_713:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_713:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_714
spu_ldst_714:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_714:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_715
spu_ldst_715:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_715:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_716
spu_ldst_716:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_716:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_717
spu_ldst_717:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_717:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_718
spu_ldst_718:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_718:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 40, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_719
spu_ldst_719:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_719:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_720
spu_ldst_720:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_720:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 42, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_721
spu_ldst_721:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_721:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_722
spu_ldst_722:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_722:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_723
spu_ldst_723:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_723:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_724
spu_ldst_724:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_724:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_725
spu_ldst_725:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_725:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_726
spu_ldst_726:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_726:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 5, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_727
spu_ldst_727:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_727:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_728
spu_ldst_728:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_728:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_729
spu_ldst_729:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_729:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_730
spu_ldst_730:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_730:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_731
spu_ldst_731:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_731:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_732
spu_ldst_732:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_732:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_733
spu_ldst_733:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_733:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_734
spu_ldst_734:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_734:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 49, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_735
spu_ldst_735:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_735:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_736
spu_ldst_736:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_736:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_737
spu_ldst_737:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_737:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_738
spu_ldst_738:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_738:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_739
spu_ldst_739:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_739:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_740
spu_ldst_740:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_740:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_741
spu_ldst_741:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_741:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_742
spu_ldst_742:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_742:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_743
spu_ldst_743:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_743:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_744
spu_ldst_744:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_744:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_745
spu_ldst_745:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_745:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_746
spu_ldst_746:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_746:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_747
spu_ldst_747:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_747:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_748
spu_ldst_748:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_748:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_749
spu_ldst_749:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_749:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_750
spu_ldst_750:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_750:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_751
spu_ldst_751:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_751:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_752
spu_ldst_752:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_752:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_753
spu_ldst_753:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_753:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_754
spu_ldst_754:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_754:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_755
spu_ldst_755:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_755:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_756
spu_ldst_756:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_756:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_757
spu_ldst_757:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_757:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_758
spu_ldst_758:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_758:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_759
spu_ldst_759:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_759:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_760
spu_ldst_760:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_760:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_761
spu_ldst_761:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_761:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_762
spu_ldst_762:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_762:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_763
spu_ldst_763:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_763:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_764
spu_ldst_764:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_764:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_765
spu_ldst_765:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_765:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_766
spu_ldst_766:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_766:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_767
spu_ldst_767:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_767:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_768
spu_ldst_768:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_768:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_769
spu_ldst_769:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_769:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_770
spu_ldst_770:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_770:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 39, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_771
spu_ldst_771:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_771:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_772
spu_ldst_772:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_772:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_773
spu_ldst_773:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_773:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_774
spu_ldst_774:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_774:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 1, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_775
spu_ldst_775:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_775:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_776
spu_ldst_776:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_776:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_777
spu_ldst_777:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_777:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_778
spu_ldst_778:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_778:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_779
spu_ldst_779:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_779:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_780
spu_ldst_780:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_780:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_781
spu_ldst_781:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_781:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_782
spu_ldst_782:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_782:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_783
spu_ldst_783:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_783:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_784
spu_ldst_784:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_784:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_785
spu_ldst_785:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_785:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_786
spu_ldst_786:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_786:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_787
spu_ldst_787:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_787:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_788
spu_ldst_788:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_788:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_789
spu_ldst_789:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_789:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_790
spu_ldst_790:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_790:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_791
spu_ldst_791:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_791:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_792
spu_ldst_792:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_792:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_793
spu_ldst_793:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_793:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_794
spu_ldst_794:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_794:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_795
spu_ldst_795:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_795:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_796
spu_ldst_796:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_796:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_797
spu_ldst_797:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_797:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_798
spu_ldst_798:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_798:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_799
spu_ldst_799:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_799:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_800
spu_ldst_800:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_800:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_801
spu_ldst_801:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_801:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_802
spu_ldst_802:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_802:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_803
spu_ldst_803:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_803:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 49, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_804
spu_ldst_804:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_804:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_805
spu_ldst_805:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_805:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_806
spu_ldst_806:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_806:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_807
spu_ldst_807:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_807:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_808
spu_ldst_808:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_808:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_809
spu_ldst_809:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_809:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_810
spu_ldst_810:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_810:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_811
spu_ldst_811:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_811:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_812
spu_ldst_812:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_812:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_813
spu_ldst_813:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_813:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_814
spu_ldst_814:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_814:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 49, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_815
spu_ldst_815:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_815:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 52, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_816
spu_ldst_816:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_816:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_817
spu_ldst_817:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_817:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_818
spu_ldst_818:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_818:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_819
spu_ldst_819:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_819:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_820
spu_ldst_820:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_820:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_821
spu_ldst_821:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_821:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_822
spu_ldst_822:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_822:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 42, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_823
spu_ldst_823:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_823:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_824
spu_ldst_824:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_824:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_825
spu_ldst_825:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_825:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_826
spu_ldst_826:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_826:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 40, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_827
spu_ldst_827:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_827:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_828
spu_ldst_828:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_828:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 46, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_829
spu_ldst_829:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_829:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_830
spu_ldst_830:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_830:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_831
spu_ldst_831:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_831:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_832
spu_ldst_832:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_832:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 41, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_833
spu_ldst_833:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_833:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_834
spu_ldst_834:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_834:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 39, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_835
spu_ldst_835:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_835:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_836
spu_ldst_836:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_836:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_837
spu_ldst_837:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_837:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_838
spu_ldst_838:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_838:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_839
spu_ldst_839:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_839:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_840
spu_ldst_840:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_840:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_841
spu_ldst_841:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_841:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 49, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_842
spu_ldst_842:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_842:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_843
spu_ldst_843:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_843:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 15, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_844
spu_ldst_844:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_844:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_845
spu_ldst_845:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_845:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_846
spu_ldst_846:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_846:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_847
spu_ldst_847:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_847:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_848
spu_ldst_848:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_848:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_849
spu_ldst_849:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_849:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_850
spu_ldst_850:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_850:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_851
spu_ldst_851:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_851:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_852
spu_ldst_852:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_852:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_853
spu_ldst_853:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_853:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_854
spu_ldst_854:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_854:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_855
spu_ldst_855:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_855:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_856
spu_ldst_856:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_856:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_857
spu_ldst_857:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_857:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_858
spu_ldst_858:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_858:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_859
spu_ldst_859:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_859:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_860
spu_ldst_860:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_860:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 21, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_861
spu_ldst_861:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_861:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_862
spu_ldst_862:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_862:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_863
spu_ldst_863:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_863:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_864
spu_ldst_864:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_864:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_865
spu_ldst_865:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_865:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_866
spu_ldst_866:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_866:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_867
spu_ldst_867:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_867:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 35, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_868
spu_ldst_868:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_868:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_869
spu_ldst_869:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_869:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_870
spu_ldst_870:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_870:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_871
spu_ldst_871:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_871:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 46, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_872
spu_ldst_872:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_872:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_873
spu_ldst_873:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_873:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_874
spu_ldst_874:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_874:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_875
spu_ldst_875:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_875:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_876
spu_ldst_876:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_876:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_877
spu_ldst_877:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_877:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_878
spu_ldst_878:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_878:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_879
spu_ldst_879:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_879:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 7, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_880
spu_ldst_880:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_880:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_881
spu_ldst_881:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_881:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_882
spu_ldst_882:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_882:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_883
spu_ldst_883:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_883:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_884
spu_ldst_884:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_884:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_885
spu_ldst_885:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_885:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_886
spu_ldst_886:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_886:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_887
spu_ldst_887:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_887:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 13, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_888
spu_ldst_888:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_888:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 5, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_889
spu_ldst_889:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_889:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_890
spu_ldst_890:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_890:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_891
spu_ldst_891:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_891:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_892
spu_ldst_892:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_892:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 51, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_893
spu_ldst_893:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_893:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 10, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_894
spu_ldst_894:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_894:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_895
spu_ldst_895:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_895:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_896
spu_ldst_896:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_896:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 57, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_897
spu_ldst_897:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_897:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 43, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_898
spu_ldst_898:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_898:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_899
spu_ldst_899:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_899:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_900
spu_ldst_900:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_900:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_901
spu_ldst_901:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_901:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 40, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_902
spu_ldst_902:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_902:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_903
spu_ldst_903:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_903:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_904
spu_ldst_904:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_904:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_905
spu_ldst_905:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_905:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_906
spu_ldst_906:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_906:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 29, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_907
spu_ldst_907:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_907:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_908
spu_ldst_908:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_908:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 53, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_909
spu_ldst_909:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_909:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_910
spu_ldst_910:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_910:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_911
spu_ldst_911:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_911:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_912
spu_ldst_912:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_912:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_913
spu_ldst_913:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_913:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_914
spu_ldst_914:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_914:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_915
spu_ldst_915:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_915:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_916
spu_ldst_916:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_916:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 30, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_917
spu_ldst_917:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_917:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_918
spu_ldst_918:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_918:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_919
spu_ldst_919:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_919:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_920
spu_ldst_920:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_920:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_921
spu_ldst_921:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_921:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_922
spu_ldst_922:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_922:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_923
spu_ldst_923:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_923:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 31, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_924
spu_ldst_924:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_924:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_925
spu_ldst_925:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_925:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_926
spu_ldst_926:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_926:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 9, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_927
spu_ldst_927:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_927:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 50, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_928
spu_ldst_928:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_928:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_929
spu_ldst_929:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_929:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 39, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_930
spu_ldst_930:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_930:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 11, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_931
spu_ldst_931:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_931:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_932
spu_ldst_932:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_932:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_933
spu_ldst_933:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_933:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_934
spu_ldst_934:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_934:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 26, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_935
spu_ldst_935:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_935:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_936
spu_ldst_936:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_936:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_937
spu_ldst_937:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_937:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 23, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_938
spu_ldst_938:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_938:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 62, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_939
spu_ldst_939:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_939:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_940
spu_ldst_940:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_940:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 39, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_941
spu_ldst_941:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_941:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_942
spu_ldst_942:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_942:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 58, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_943
spu_ldst_943:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_943:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_944
spu_ldst_944:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_944:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_945
spu_ldst_945:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_945:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_946
spu_ldst_946:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_946:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 28, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_947
spu_ldst_947:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_947:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_948
spu_ldst_948:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_948:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_949
spu_ldst_949:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_949:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_950
spu_ldst_950:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_950:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 60, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_951
spu_ldst_951:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_951:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 8, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_952
spu_ldst_952:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_952:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_953
spu_ldst_953:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_953:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 32, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_954
spu_ldst_954:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_954:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_955
spu_ldst_955:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_955:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 19, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_956
spu_ldst_956:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_956:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 54, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_957
spu_ldst_957:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_957:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_958
spu_ldst_958:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_958:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_959
spu_ldst_959:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_959:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 5, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_960
spu_ldst_960:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_960:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_961
spu_ldst_961:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_961:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_962
spu_ldst_962:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_962:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 46, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_963
spu_ldst_963:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_963:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 44, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_964
spu_ldst_964:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_964:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_965
spu_ldst_965:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_965:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 14, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_966
spu_ldst_966:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_966:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 25, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_967
spu_ldst_967:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_967:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_968
spu_ldst_968:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_968:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 63, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_969
spu_ldst_969:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_969:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 64, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_970
spu_ldst_970:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_970:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 22, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_971
spu_ldst_971:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_971:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 36, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_972
spu_ldst_972:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_972:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 17, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_973
spu_ldst_973:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_973:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_974
spu_ldst_974:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_974:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 59, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_975
spu_ldst_975:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_975:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 38, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_976
spu_ldst_976:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_976:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 18, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_977
spu_ldst_977:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_977:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 3, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_978
spu_ldst_978:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_978:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_979
spu_ldst_979:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_979:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_980
spu_ldst_980:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_980:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 9, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_981
spu_ldst_981:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_981:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 48, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_982
spu_ldst_982:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_982:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 4, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_983
spu_ldst_983:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_983:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 33, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_984
spu_ldst_984:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_984:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 45, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_985
spu_ldst_985:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_985:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 56, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_986
spu_ldst_986:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_986:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 37, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_987
spu_ldst_987:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_987:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 2, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_988
spu_ldst_988:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_988:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 20, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_989
spu_ldst_989:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_989:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_990
spu_ldst_990:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_990:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 49, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_991
spu_ldst_991:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_991:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 16, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_992
spu_ldst_992:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_992:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 55, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_993
spu_ldst_993:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_993:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 24, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_994
spu_ldst_994:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_994:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 6, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_995
spu_ldst_995:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_995:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 27, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_996
spu_ldst_996:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_996:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_997
spu_ldst_997:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_997:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 61, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_998
spu_ldst_998:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_998:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 47, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  
.global spu_ldst_999
spu_ldst_999:

	
  	wr	%g0, SPU_ASI, %asi  ! set up the asi register to contain SPU asi
init_spu_ldst_999:
	setpa	(spu_data_src, %l0, %l1, %l5)  
	stxa	%l5, [%g0+REG_MPA_ADDR] %asi
	! set the PA of spu_data_dest to %l6 using %l0 and %l1 as temp regs
	setpa	(spu_data_dest, %l0, %l1, %l6)  
	stxa	%g0, [%g0+REG_MA_ADDR_ADDR] %asi   ! set 0 to the REG_MA_ADDR for MAMEM offset

	add	%g0, 12, %i3  ! %i3 contains number of xwords to load/store
	sub	%i3, 1,  %i0	! #of xwords to load to MAMEM minus 1
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! store to the MA_CTL register to load %i0 + 1 xwords to MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
	stxa	%l6, [%g0+REG_MPA_ADDR] %asi ! set spu_data_dest to MPA
	or	%i0, 0x40, %i0
	stxa	%i0, [%g0+REG_MA_CTL_ADDR] %asi   ! set the MA_CTL register to store out %i0 + 1 xwords of MAMEM
	ldxa	[%g0+MASync_ADDR] %asi, %l7
  

	 ba diag_pass 
	 nop 
run_th_2:

	 wr %g0, 248, %asi

	 ta T_CHANGE_PRIV 
	 nop 
	 set 2430866107, %i0
	 set 749056619, %i1
	 set 1085606506, %i2
	 set 4148121874, %i3
	 set 1350417553, %i4
	 set 1197303836, %i5
	 set 2190453686, %i6
	 set 2636098926, %i7
	 set 3574352650, %o0
	 set 3610422619, %o1
	 set 622130510, %o2
	 set 373330342, %o3
	 set 2422736073, %o4
	 set 1834291173, %o5
	 set 65774138, %o6
	 set 1994782052, %o7
	 set 448629150, %l0
	 set 3823589100, %l1
	 set 306638650, %l2
	 set 1500321061, %l3
	 set 3726879838, %l4
	 set 3052517986, %l5
	 set 1432304305, %l6
	 set 4031628574, %l7
	 set 332699133, %g0
	 set 3567897207, %g1
	 set 868233184, %g2
	 set 4045639261, %g3
	 set 476939733, %g4
	 set 2798832479, %g5
	 set 1416753496, %g6
	 set 1346959920, %g7

wr %g0, 0x4, %fprs 
	 setx self_modcode, %l0, %l3
	 ldd [%l3], %f0
	 add 0x8, %l3, %l3
	 ldd [%l3], %f2
	 add 0x8, %l3, %l3
	 ldd [%l3], %f4
	 add 0x8, %l3, %l3
	 ldd [%l3], %f6
	 add 0x8, %l3, %l3
	 ldd [%l3], %f8
	 add 0x8, %l3, %l3
	 ldd [%l3], %f10
	 add 0x8, %l3, %l3
	 ldd [%l3], %f12
	 add 0x8, %l3, %l3
	 ldd [%l3], %f14
	 add 0x8, %l3, %l3
	 ldd [%l3], %f16
	 add 0x8, %l3, %l3
	 ldd [%l3], %f18
	 add 0x8, %l3, %l3
	 ldd [%l3], %f20
	 add 0x8, %l3, %l3
	 ldd [%l3], %f22
	 add 0x8, %l3, %l3
	 ldd [%l3], %f24
	 add 0x8, %l3, %l3
	 ldd [%l3], %f26
	 add 0x8, %l3, %l3
	 ldd [%l3], %f28
	 add 0x8, %l3, %l3
	 ldd [%l3], %f30
	 add 0x8, %l3, %l3
	 ldd [%l3], %f32
	 add 0x8, %l3, %l3
	 ldd [%l3], %f34
	 add 0x8, %l3, %l3
	 ldd [%l3], %f36
	 add 0x8, %l3, %l3
	 ldd [%l3], %f38
	 add 0x8, %l3, %l3
	 ldd [%l3], %f40
	 add 0x8, %l3, %l3
	 ldd [%l3], %f42
	 add 0x8, %l3, %l3
	 ldd [%l3], %f44
	 add 0x8, %l3, %l3
	 ldd [%l3], %f46
	 add 0x8, %l3, %l3
	 ldd [%l3], %f48
	 add 0x8, %l3, %l3
	 ldd [%l3], %f50
	 add 0x8, %l3, %l3
	 ldd [%l3], %f52
	 add 0x8, %l3, %l3
	 ldd [%l3], %f54
	 add 0x8, %l3, %l3
	 ldd [%l3], %f56
	 add 0x8, %l3, %l3
	 ldd [%l3], %f58
	 add 0x8, %l3, %l3
	 ldd [%l3], %f60
	 add 0x8, %l3, %l3
	 ldd [%l3], %f62
	 add 0x8, %l3, %l3
	 setx data0, %l0, %l3
	 setx self_modcode, %l0, %l1
	 .word 0xc11ce000
	 .word 0xe1bce080

	 .word 0xecbcdf00
	 .word 0xe1bcdf00

	 .word 0xf3f4e000
	 .word 0xe19cde00

	 .word 0x81dce0c6
	 .word 0xe19ce240

	 .word 0xec1ce010
	 .word 0xc1bce000

	 .word 0xecbcdf00
	 .word 0xc19cdf00

	 .word 0xc11ce030
	 .word 0xe1bcde20

	 .word 0xc13cc000
	 .word 0xe19ce140

	 .word 0xc1bce380
	 .word 0xc1bcdf00

	 .word 0xeea4e004
	 .word 0xc1bce080

	 .word 0xf024c000
	 .word 0xe1bce140

	 .word 0xf9f4de20
	 .word 0xe1bce3c0

	 .word 0x8143e02a
	 .word 0xe1bcde00

	 .word 0xf87cc000
	 .word 0xe1bce180

	 .word 0xf44ce01e
	 .word 0xc1bcdf20

	 .word 0xf86cc000
	 .word 0xc19ce2c0

	 .word 0xf26cc000
	 .word 0xc1bce1c0

	 .word 0xf3e4df20
	 .word 0xe19cdf20

	 .word 0x8143e00c
	 .word 0xe19ce000

	 .word 0xf7e4e000
	 .word 0xc1bcde20

	 .word 0xf6ece035
	 .word 0xc19cdf20

	 .word 0xf66ce00d
	 .word 0xc19cdf20

	 .word 0xe19ce080
	 .word 0xe1bcde20

	 .word 0xc924e024
	 .word 0xe19ce300

	 .word 0xf86cc000
	 .word 0xc19ce240

	 .word 0xec9cdf20
	 .word 0xe1bce380

	 .word 0x8143c000
	 .word 0xc1bcdf00

	 .word 0xea7cc000
	 .word 0xe19cde00

	 .word 0xd3ecdf00
	 .word 0xe1bce000

	 .word 0xf0fcdf00
	 .word 0xe1bcdf00

	 .word 0xf2ece03e
	 .word 0xe1bce080

	 .word 0x81dce05b
	 .word 0xc19cde20

	 .word 0xec9cdf20
	 .word 0xe1bcdf20

	 .word 0x8143c000
	 .word 0xe19cde20

	 .word 0xf8fce000
	 .word 0xe19ce2c0

	 .word 0xdd1cc000
	 .word 0xe19ce340

	 .word 0xd56ce040
	 .word 0xc19cdf00

	 .word 0x8143c000
	 .word 0xc1bcdf20

	 .word 0xf414e000
	 .word 0xc1bcdf20

	 .word 0xf454e002
	 .word 0xc1bce0c0

	 .word 0xf684e004
	 .word 0xc19cdf00

	 .word 0xf47ce000
	 .word 0xc19cde20

	 .word 0xecbce010
	 .word 0xe19ce140

	 .word 0xf46cc000
	 .word 0xe19ce300

	 .word 0xc1bce200
	 .word 0xc19ce3c0

	 .word 0xeeb4df20
	 .word 0xc1bcdf20

	 .word 0xf07cc000
	 .word 0xe19ce1c0

	 .word 0xf7e4df00
	 .word 0xe1bce3c0

	 .word 0x8143e021
	 .word 0xc19cdf00

	 .word 0xfaa4de20
	 .word 0xe1bcde20

	 .word 0xf4d4df20
	 .word 0xe19ce000

	 .word 0xfa04e004
	 .word 0xe1bce0c0

	 .word 0xe1bcde20
	 .word 0xc19cde20

	 .word 0xcb24e004
	 .word 0xe1bce0c0

	 .word 0xe1bcdf00
	 .word 0xc1bcdf00

	 .word 0xf224c000
	 .word 0xe1bcdf20

	 .word 0xf5f4e000
	 .word 0xc1bcde00

	 .word 0xf3f4df20
	 .word 0xe19cdf20

	 .word 0xe19ce380
	 .word 0xe19cdf20

	 .word 0xf02cc000
	 .word 0xc1bcde00

	 .word 0xcd04c000
	 .word 0xe19ce2c0

	 .word 0xf8b4e002
	 .word 0xe19cdf00

	 .word 0xddece010
	 .word 0xe19ce340

	 .word 0x81dcc000
	 .word 0xe19ce340

	 .word 0xe19ce140
	 .word 0xe19cdf20

	 .word 0x8143c000
	 .word 0xe19cdf00

	 .word 0xc1bcdf20
	 .word 0xc19cdf20

	 .word 0xdd3ce010
	 .word 0xc1bcde00

	 .word 0xec6ce037
	 .word 0xc19cde00

	 .word 0xf274e008
	 .word 0xe1bce180

	 .word 0xf76ce050
	 .word 0xc19cdf00

	 .word 0xe19ce340
	 .word 0xe1bce2c0

	 .word 0xf0c4de20
	 .word 0xe1bcde20

	 .word 0xf7e4e000
	 .word 0xc19ce1c0

	 .word 0xf3e4e000
	 .word 0xe19cdf00

	 .word 0xf87ce000
	 .word 0xe19cde00

	 .word 0xec7cc000
	 .word 0xe19cdf00

	 .word 0x8143e053
	 .word 0xe1bce040

	 .word 0xee24e000
	 .word 0xc1bce140

	 .word 0xc104e034
	 .word 0xc19cde00

	 .word 0xdf04c000
	 .word 0xe1bce180

	 .word 0xf224c000
	 .word 0xc1bcdf00

	 .word 0xc7ece060
	 .word 0xe1bce100

	 .word 0xeaece022
	 .word 0xc19cde00

	 .word 0x8143c000
	 .word 0xc19ce080

	 .word 0xc11ce030
	 .word 0xe19ce100

	 .word 0xf66cc000
	 .word 0xe1bce080

	 .word 0xe19ce0c0
	 .word 0xe19ce200

	 .word 0x81dcc000
	 .word 0xe19ce340

	 .word 0xf86ce010
	 .word 0xc19ce3c0

	 .word 0xf06ce002
	 .word 0xe1bcde20

	 .word 0xf4b4df20
	 .word 0xc19ce240

	 .word 0xc124e03c
	 .word 0xc19cde00

	 .word 0xec7ce004
	 .word 0xc1bce180

	 .word 0xe19cdf20
	 .word 0xc19cdf20

	 .word 0xf0b4e002
	 .word 0xe1bcde20

	 .word 0xcbece020
	 .word 0xc1bce140

	 .word 0xf87ce000
	 .word 0xc1bcdf20

	 .word 0xea8cdf20
	 .word 0xe19ce100

	 .word 0xc11cc000
	 .word 0xe19ce380

	 .word 0xefe4e000
	 .word 0xe1bce340

	 .word 0xc36cc000
	 .word 0xc1bce000

	 .word 0xc104e024
	 .word 0xe19ce380

	 .word 0xf07cc000
	 .word 0xc19ce340

	 .word 0xd53cc000
	 .word 0xe1bcde00

	 .word 0x8143c000
	 .word 0xc1bcde00

	 .word 0xc16ce020
	 .word 0xc1bcde20

	 .word 0xf454c000
	 .word 0xc19ce240

	 .word 0xecfce000
	 .word 0xe19ce040

	 .word 0xc19ce300
	 .word 0xe1bcdf20

	 .word 0xf62cc000
	 .word 0xe19ce280

	 .word 0xc11ce030
	 .word 0xc1bce200

	 .word 0xf2ece01f
	 .word 0xc19cdf00

	 .word 0xc104e004
	 .word 0xc19ce300

	 .word 0xfb6cc000
	 .word 0xc19ce2c0

	 .word 0xcd04c000
	 .word 0xc1bcde20

	 .word 0xeaece029
	 .word 0xe1bcdf20

	 .word 0xf3e4e000
	 .word 0xe19cdf20

	 .word 0xc11ce000
	 .word 0xc1bce240

	 .word 0xfafce004
	 .word 0xc1bcdf20

	 .word 0xc19cde00
	 .word 0xe1bce380

	 .word 0x8143e014
	 .word 0xc19cde20

	 .word 0xf6dcdf00
	 .word 0xe1bcdf00

	 .word 0xea34c000
	 .word 0xe19ce2c0

	 .word 0xeff4e000
	 .word 0xe1bcdf00

	 .word 0xc124e014
	 .word 0xc19ce340

	 .word 0xf46ce03c
	 .word 0xc1bcdf00

	 .word 0xeeece030
	 .word 0xe19cdf00

	 .word 0xf26ce02e
	 .word 0xe19cdf00

	 .word 0xebe4e000
	 .word 0xe19cdf00

	 .word 0xe19ce140
	 .word 0xc1bcdf00

	 .word 0xee7cc000
	 .word 0xe19cdf20

	 .word 0xfab4e000
	 .word 0xe1bcdf20

	 .word 0xeec4e000
	 .word 0xc1bcdf00

	 .word 0xf07ce004
	 .word 0xe1bcdf00

	 .word 0xfaace01a
	 .word 0xc19ce140

	 .word 0xf9e4e000
	 .word 0xe1bce300

	 .word 0xf56cc000
	 .word 0xe19ce180

	 .word 0xecbcde00
	 .word 0xc1bcde00

	 .word 0xf9f4df00
	 .word 0xe1bcdf00

	 .word 0xc11ce010
	 .word 0xe1bcdf20

	 .word 0xc11cc000
	 .word 0xc19cde20

	 .word 0xcfecde00
	 .word 0xc19ce380

	 .word 0xf67cc000
	 .word 0xe19ce100

	 .word 0xc104e00e
	 .word 0xc19ce2c0

	 .word 0xf1e4e000
	 .word 0xc1bce140

	 .word 0xc19ce2c0
	 .word 0xc19cde00

	 .word 0xf0dcdf00
	 .word 0xc1bcdf00

	 .word 0xd3ece0a0
	 .word 0xe19cdf20

	 .word 0xf5e4e000
	 .word 0xc1bcde00

	 .word 0xee6ce00a
	 .word 0xc19cde20

	 .word 0xe19ce040
	 .word 0xe1bce040

	 .word 0xea74c000
	 .word 0xc19cde00

	 .word 0xc93cc000
	 .word 0xc19ce1c0

	 .word 0xf2dcdf20
	 .word 0xe1bcdf20

	 .word 0xc104e012
	 .word 0xc1bcde20

	 .word 0xf2ace02b
	 .word 0xe19ce280

	 .word 0x81dce0ea
	 .word 0xc19ce180

	 .word 0xf814e000
	 .word 0xc1bcdf00

	 .word 0xf2fcde00
	 .word 0xe19cde00

	 .word 0x8143c000
	 .word 0xc19ce080

	 .word 0x8143e01c
	 .word 0xe19cdf00

	 .word 0xeefce004
	 .word 0xc1bce200

	 .word 0xf24cc000
	 .word 0xe19cde20

	 .word 0x8143e024
	 .word 0xc19ce200

	 .word 0xc724e038
	 .word 0xe19ce080

	 .word 0xfa84df00
	 .word 0xc1bcdf00

	 .word 0xecf4df20
	 .word 0xc19cdf20

	 .word 0xf6ece012
	 .word 0xc19cdf00

	 .word 0xc324e00c
	 .word 0xc19ce240

	 .word 0xeefce000
	 .word 0xe19ce1c0

	 .word 0xf6dce000
	 .word 0xe1bce280

	 .word 0xf4fcdf20
	 .word 0xc19cdf20

	 .word 0xc13ce030
	 .word 0xc1bcde20

	 .word 0xeedcde00
	 .word 0xc1bce3c0

	 .word 0xecb4df00
	 .word 0xe1bcdf00

	 .word 0xcd04c000
	 .word 0xe1bcde20

	 .word 0xf0fce004
	 .word 0xc1bcde20

	 .word 0xf1f4e000
	 .word 0xc1bcde00

	 .word 0xfafce000
	 .word 0xe1bce0c0

	 .word 0xd504c000
	 .word 0xe19cdf00

	 .word 0xf4c4e000
	 .word 0xc1bce140

	 .word 0xf5f4df20
	 .word 0xe1bcdf20

	 .word 0xc19cde20
	 .word 0xe1bcde20

	 .word 0xecf4e008
	 .word 0xc1bcdf00

	 .word 0xec9ce000
	 .word 0xe1bcdf20

	 .word 0xc11ce010
	 .word 0xe1bce1c0

	 .word 0x8143c000
	 .word 0xc1bce0c0

	 .word 0xf9e4df00
	 .word 0xe1bce0c0

	 .word 0xf2ecdf00
	 .word 0xc19ce380

	 .word 0xf4acde20
	 .word 0xc1bcde20

	 .word 0xfa5cc000
	 .word 0xe19cde20

	 .word 0xf084df20
	 .word 0xe19cdf20

	 .word 0xf7e4df00
	 .word 0xc1bce080

	 .word 0xc104e006
	 .word 0xe1bcde20

	 .word 0x81dcc000
	 .word 0xe1bcde00

	 .word 0xc104e006
	 .word 0xc1bce080

	 .word 0xebe4e000
	 .word 0xc19ce340

	 .word 0xfa04c000
	 .word 0xe19cdf00

	 .word 0xf674e000
	 .word 0xc1bcde00

	 .word 0x8143c000
	 .word 0xc1bcde20

	 .word 0xf0b4e000
	 .word 0xc1bcdf00

	 .word 0xf3f4e000
	 .word 0xc19cde20

	 .word 0xf274c000
	 .word 0xc1bce280

	 .word 0xe19ce2c0
	 .word 0xc19cdf00

	 .word 0xec9cdf00
	 .word 0xc19ce100

	 .word 0xec7cc000
	 .word 0xe19ce280

	 .word 0xc1bce100
	 .word 0xe19cde00

	 .word 0xede4de20
	 .word 0xc19cde20

	 .word 0xe19cde20
	 .word 0xc19ce100

	 .word 0xec14c000
	 .word 0xc19cde20

	 .word 0xe19cdf00
	 .word 0xe1bce040

	 .word 0xe1bcdf20
	 .word 0xc19ce3c0

	 .word 0xf3f4e000
	 .word 0xe19cdf00

	 .word 0xea74e008
	 .word 0xe1bcde20

	 .word 0xf1e4de00
	 .word 0xc1bcde00

	 .word 0xf8f4e008
	 .word 0xe19cdf20

	 .word 0xec94e002
	 .word 0xc19ce380

	 .word 0xc19cde20
	 .word 0xc1bce280

	 .word 0xe1bce080
	 .word 0xc1bce1c0

	 .word 0xede4e000
	 .word 0xc1bcde00

	 .word 0x81dce090
	 .word 0xc1bce300

	 .word 0xefe4e000
	 .word 0xe1bcde00

	 .word 0xedf4e000
	 .word 0xe1bce000

	 .word 0xfafce004
	 .word 0xc19ce140

	 .word 0xf06ce01d
	 .word 0xc19cde20

	 .word 0xedf4e000
	 .word 0xc1bce340

	 .word 0xec84e004
	 .word 0xe19ce340

	 .word 0x8143e041
	 .word 0xc1bcdf20

	 .word 0xc1bcde20
	 .word 0xc19ce140

	 .word 0xf07cc000
	 .word 0xe19cde20

	 .word 0xf6fcde00
	 .word 0xe19cde00

	 .word 0xf87ce000
	 .word 0xc19ce180

	 .word 0xc1bcdf00
	 .word 0xc1bce040

	 .word 0xcd3cc000
	 .word 0xe19ce340

	 .word 0xdd24c000
	 .word 0xe1bce340

	 .word 0xf4ecdf00
	 .word 0xe1bce3c0

	 .word 0xc1bce140
	 .word 0xc19ce280

	 .word 0xf8ece02d
	 .word 0xc1bce100

	 .word 0xe76cc000
	 .word 0xe19cde00

	 .word 0xeefce004
	 .word 0xc19ce140

	 .word 0xf1f4e000
	 .word 0xc1bcdf20

	 .word 0xf234c000
	 .word 0xe19cde00

	 .word 0xdf24c000
	 .word 0xc19ce3c0

	 .word 0xecfcdf00
	 .word 0xc19ce240

	 .word 0x81dcc000
	 .word 0xe1bce000

	 .word 0xeff4e000
	 .word 0xc19ce300

	 .word 0xedf4e000
	 .word 0xc1bce1c0

	 .word 0x8143c000
	 .word 0xc19ce100

	 .word 0xf06ce03b
	 .word 0xe19ce240

	 .word 0xf004c000
	 .word 0xe1bcdf20

	 .word 0xf26cc000
	 .word 0xc19ce3c0

	 .word 0xfa7cc000
	 .word 0xe1bce240

	 .word 0xc13cc000
	 .word 0xe19ce140

	 .word 0xf9e4de00
	 .word 0xc19ce1c0

	 .word 0xf3f4df00
	 .word 0xe19cdf00

	 .word 0xe1bcdf20
	 .word 0xe1bce340

	 .word 0xf5e4df20
	 .word 0xe19ce000

	 .word 0xec5ce008
	 .word 0xe19ce1c0

	 .word 0xcdece0e0
	 .word 0xc1bce280

	 .word 0xee5cc000
	 .word 0xe1bcde00

	 .word 0xea24c000
	 .word 0xe1bce2c0

	 .word 0xf024e000
	 .word 0xe1bcde20

	 .word 0xeaece00a
	 .word 0xe19cdf00

	 .word 0xea7cc000
	 .word 0xe19cde20

	 .word 0xf26cc000
	 .word 0xe19ce300

	 .word 0xdd3ce030
	 .word 0xe1bce000

	 .word 0xf8fcde00
	 .word 0xc19ce300

	 .word 0xf044c000
	 .word 0xc1bce280

	 .word 0xf9e4de00
	 .word 0xc19ce2c0

	 .word 0xf6fcde20
	 .word 0xc1bcde20

	 .word 0xc13cc000
	 .word 0xe1bcde20

	 .word 0xead4e002
	 .word 0xe1bce200

	 .word 0xeeece032
	 .word 0xc1bce3c0

	 .word 0x8143c000
	 .word 0xc19ce180

	 .word 0xecece007
	 .word 0xc19cdf20

	 .word 0xf46ce012
	 .word 0xc1bcde00

	 .word 0xf2f4e000
	 .word 0xc1bcdf00

	 .word 0xf0f4e008
	 .word 0xc19cde20

	 .word 0xc1bce180
	 .word 0xe1bcde20

	 .word 0xf3e4de00
	 .word 0xc19ce000

	 .word 0xf1f4e000
	 .word 0xc1bce100

	 .word 0xd924e030
	 .word 0xc1bce180

	 .word 0xeea4e004
	 .word 0xe1bce0c0

	 .word 0xea7cc000
	 .word 0xe1bce380

	 .word 0xebe4e000
	 .word 0xc19ce080

	 .word 0xeff4df20
	 .word 0xe1bcdf20

	 .word 0xf86ce018
	 .word 0xc19cdf00

	 .word 0xc76ce020
	 .word 0xe1bcdf00

	 .word 0xf7e4df20
	 .word 0xe1bce380

	 .word 0xf8b4e000
	 .word 0xc19ce340

	 .word 0xec9cde20
	 .word 0xc1bce280

	 .word 0xe1bcde00
	 .word 0xc19cde00

	 .word 0xc1bcde20
	 .word 0xc1bce000

	 .word 0xececdf20
	 .word 0xc19cdf20

	 .word 0xececdf20
	 .word 0xe19cdf20

	 .word 0x81dcc000
	 .word 0xc1bce240

	 .word 0xfa7cc000
	 .word 0xc1bce240

	 .word 0xe1bcde20
	 .word 0xc19cde20

	 .word 0xee7cc000
	 .word 0xc19ce300

	 .word 0xdd3cc000
	 .word 0xc1bce380

	 .word 0xc11ce010
	 .word 0xe1bcde00

	 .word 0xf22cc000
	 .word 0xc19ce2c0

	 .word 0xf4d4de00
	 .word 0xe1bcde00

	 .word 0xe1bce000
	 .word 0xe1bce040

	 .word 0xf5e4e000
	 .word 0xc19ce280

	 .word 0xf2ece01d
	 .word 0xc1bce280

	 .word 0xc19cdf20
	 .word 0xe19ce1c0

	 .word 0xf06cc000
	 .word 0xe19ce140

	 .word 0xe19ce100
	 .word 0xc1bcde20

	 .word 0xf414e000
	 .word 0xe1bce080

	 .word 0xc924c000
	 .word 0xc19cde20

	 .word 0xf6ecde00
	 .word 0xe19cde00

	 .word 0x8143c000
	 .word 0xe1bcde00

	 .word 0xc1ecdf20
	 .word 0xc19ce240

	 .word 0xefe4de00
	 .word 0xc19ce380

	 .word 0xf6ece03d
	 .word 0xc1bcdf00

	 .word 0xc53ce020
	 .word 0xc19ce080

	 .word 0xea7cc000
	 .word 0xc19cdf20

	 .word 0xea04c000
	 .word 0xe19ce0c0

	 .word 0x8143e019
	 .word 0xe19ce0c0

	 .word 0xc19ce200
	 .word 0xe1bcdf20

	 .word 0xf8fcdf00
	 .word 0xc19cdf00

	 .word 0xec3cc000
	 .word 0xc19ce240

	 .word 0xf8a4de00
	 .word 0xc1bcde00

	 .word 0xf1f4e000
	 .word 0xe19cdf00

	 .word 0xf5ecde00
	 .word 0xe1bce000

	 .word 0xf4ece001
	 .word 0xc1bce180

	 .word 0xeaece03f
	 .word 0xc1bce000

	 .word 0xf9e4e000
	 .word 0xc19ce340

	 .word 0xee7ce000
	 .word 0xe1bcdf20

	 .word 0xc19cdf20
	 .word 0xe1bcdf20

	 .word 0xf6ccde20
	 .word 0xc1bce100

	 .word 0xf7f4e000
	 .word 0xe1bcdf00

	 .word 0xf254c000
	 .word 0xe1bcde00

	 .word 0xee7cc000
	 .word 0xe1bce340

	 .word 0xf1e4e000
	 .word 0xc1bce1c0

	 .word 0xc76ce040
	 .word 0xc19ce140

	 .word 0xe1bcde20
	 .word 0xe1bcde20

	 .word 0xf244e004
	 .word 0xe19ce300

	 .word 0xf5f4e000
	 .word 0xc1bcde20

	 .word 0xe1bcdf20
	 .word 0xe19ce340

	 .word 0xf6ace013
	 .word 0xe19cdf00

	 .word 0xfa7cc000
	 .word 0xc19cde20

	 .word 0xd324e030
	 .word 0xe1bcdf20

	 .word 0xea44e004
	 .word 0xc1bce140

	 .word 0xf2ece033
	 .word 0xe1bcdf20

	 .word 0x8143c000
	 .word 0xe19ce040

	 .word 0xe56cc000
	 .word 0xe19ce340

	 .word 0x8143c000
	 .word 0xe19cde00

	 .word 0xf2d4de20
	 .word 0xc19ce080

	 .word 0xc1bcde20
	 .word 0xc19cde20

	 .word 0xfa54c000
	 .word 0xe1bcde00

	 .word 0x8143c000
	 .word 0xe19cde00

	 .word 0xc724c000
	 .word 0xe19cde20

	 .word 0xede4df00
	 .word 0xc19ce180

	 .word 0xeafce004
	 .word 0xe19cdf20

	 .word 0xf8acde20
	 .word 0xc19cde20

	 .word 0xf9f4e000
	 .word 0xe1bcde00

	 .word 0xdb6cc000
	 .word 0xe1bcdf00

	 .word 0xf0ecde00
	 .word 0xc1bce200

	 .word 0xf46cc000
	 .word 0xe19ce300

	 .word 0xf7e4df20
	 .word 0xe1bce340

	 .word 0xf424e000
	 .word 0xc19cde20

	 .word 0xebe4df00
	 .word 0xc1bcdf00

	 .word 0xf414c000
	 .word 0xc1bcde00

	 .word 0xf1e4df00
	 .word 0xc1bcdf00

	 .word 0xf66ce01d
	 .word 0xe19cde20

	 .word 0xf4ecdf00
	 .word 0xe1bcdf00

	 .word 0xf1f4df00
	 .word 0xc1bcdf00

	 .word 0xf9e4df20
	 .word 0xe19cdf20

	 .word 0xf1f4e000
	 .word 0xe19cde20

	 .word 0xfac4e004
	 .word 0xe19cdf00

	 .word 0x8143c000
	 .word 0xc1bce080

	 .word 0xe1bce100
	 .word 0xc19cde20

	 .word 0xc3ece030
	 .word 0xe1bce200

	 .word 0xf7f4e000
	 .word 0xc1bce0c0

	 .word 0xecbcdf20
	 .word 0xc1bcdf20

	 .word 0xf4ecdf20
	 .word 0xc19cdf20

	 .word 0xf9f4e000
	 .word 0xc19ce040

	 .word 0xe1bce3c0
	 .word 0xc1bce200

	 .word 0xc704c000
	 .word 0xe1bcdf00

	 .word 0xee34c000
	 .word 0xe19cde00

	 .word 0xe19ce140
	 .word 0xe1bcde20

	 .word 0xf87ce004
	 .word 0xe19cde00

	 .word 0xe1bce280
	 .word 0xc19cde20

	 .word 0xf82cc000
	 .word 0xc19cdf20

	 .word 0xc1bcde00
	 .word 0xc19ce1c0

	 .word 0xc304c000
	 .word 0xc1bcdf00

	 .word 0xf0a4e004
	 .word 0xe1bce3c0

	 .word 0xea44c000
	 .word 0xe19ce240

	 .word 0xede4de20
	 .word 0xe19ce200

	 .word 0xe19ce3c0
	 .word 0xc19cde20

	 .word 0xf5f4e000
	 .word 0xe19cdf20

	 .word 0xefe4de00
	 .word 0xe1bcde00

	 .word 0xe56ce020
	 .word 0xc1bcde00

	 .word 0xec3ce010
	 .word 0xc19ce100

	 .word 0xf86ce007
	 .word 0xc19ce1c0

	 .word 0x81dcc000
	 .word 0xc19cdf20

	 .word 0xee6cc000
	 .word 0xc19cde00

	 .word 0xf5e4e000
	 .word 0xe1bcde20

	 .word 0xf7f4df20
	 .word 0xe1bcdf20

	 .word 0xfab4df20
	 .word 0xc1bce180

	 .word 0x8143e04d
	 .word 0xe1bce300

	 .word 0xf4ece015
	 .word 0xe19cdf20

	 .word 0xf9e4e000
	 .word 0xc1bce140

	 .word 0x81dce0f3
	 .word 0xe19cdf00

	 .word 0xc11ce000
	 .word 0xe19ce1c0

	 .word 0xf3f4de00
	 .word 0xc1bce100

	 .word 0xe19cde20
	 .word 0xe1bcde20

	 .word 0xf07ce004
	 .word 0xc1bce100

	 .word 0x81dce0bd
	 .word 0xc1bce280

	 .word 0xf6fcde00
	 .word 0xc19ce040

	 .word 0xfb6ce060
	 .word 0xc19ce140

	 .word 0xf9f4de00
	 .word 0xc19cde00

	 .word 0xf8b4e000
	 .word 0xc19cdf00

	 .word 0xf4fce004
	 .word 0xc19cdf00

	 .word 0xc104e018
	 .word 0xc19cde00

	 .word 0xc1bcde20
	 .word 0xe1bce100

	 .word 0xea0ce01f
	 .word 0xc19ce340

	 .word 0x8143c000
	 .word 0xc1bce1c0

	 .word 0xc19cde20
	 .word 0xc19cde20

	 .word 0xf5e4df00
	 .word 0xe19cdf00

	 .word 0xf3f4de00
	 .word 0xc1bcde00

	 .word 0xf9e4de00
	 .word 0xc19ce040

	 .word 0xe1bce0c0
	 .word 0xe19ce280

	 .word 0xf7e4df00
	 .word 0xc19cdf00

	 .word 0xf27ce000
	 .word 0xc1bce3c0

	 .word 0xecbce000
	 .word 0xc19ce3c0

	 .word 0xc51cc000
	 .word 0xc1bcde20

	 .word 0xc19ce0c0
	 .word 0xe1bce2c0

	 .word 0xc104e02e
	 .word 0xe19ce200

	 .word 0xf024e000
	 .word 0xe19cde00

	 .word 0xeaece03f
	 .word 0xe19ce340

	 .word 0xf87cc000
	 .word 0xe19ce240

	 .word 0xf8ecde20
	 .word 0xc1bcde20

	 .word 0xf824e000
	 .word 0xe1bce3c0

	 .word 0xecfce004
	 .word 0xc19cdf00

	 .word 0xebe4de20
	 .word 0xe1bce3c0

	 .word 0xf5f4e000
	 .word 0xc19ce100

	 .word 0xf45cc000
	 .word 0xe19cde00

	 .word 0x8143e001
	 .word 0xc1bcde00

	 .word 0xd104c000
	 .word 0xc19ce340

	 .word 0xec9cde20
	 .word 0xe1bcde20

	 .word 0xc104e03c
	 .word 0xc1bce080

	 .word 0xeefcde00
	 .word 0xe1bce000

	 .word 0xd96ce0a0
	 .word 0xe1bcde20

	 .word 0xeafce004
	 .word 0xe19cdf20

	 .word 0xecbcde20
	 .word 0xc1bce300

	 .word 0xc93ce000
	 .word 0xe19ce300

	 .word 0xf054c000
	 .word 0xc19cdf20

	 .word 0xf66ce01a
	 .word 0xe1bce240

	 .word 0x81dcc000
	 .word 0xe1bcde00

	 .word 0xf5f4e000
	 .word 0xe1bcde00

	 .word 0xdd24e014
	 .word 0xc19ce380

	 .word 0xe19ce180
	 .word 0xc1bce000

	 .word 0xf0fcde00
	 .word 0xe1bce2c0

	 .word 0xe19ce280
	 .word 0xe1bcde20

	 .word 0xf9e4df00
	 .word 0xe19cdf00

	 .word 0xf2fce000
	 .word 0xe1bcde20

	 .word 0xeeece010
	 .word 0xc1bce000

	 .word 0x81dcc000
	 .word 0xe19cdf20

	 .word 0xc11ce000
	 .word 0xe1bce240

	 .word 0xdd24e030
	 .word 0xe19cde20

	 .word 0xee34e000
	 .word 0xc19ce1c0

	 .word 0xecbce010
	 .word 0xc19ce200

	 .word 0xcf04c000
	 .word 0xe19ce200

	 .word 0xf0fcde00
	 .word 0xc19cde00

	 .word 0xc19ce100
	 .word 0xe19ce180

	 .word 0xf6ece023
	 .word 0xc19ce380

	 .word 0xf6ecde00
	 .word 0xc19cde00

	 .word 0xecece020
	 .word 0xc1bcdf00

	 .word 0xea6cc000
	 .word 0xc1bce2c0

	 .word 0xf07ce000
	 .word 0xc1bce240

	 .word 0xf624e004
	 .word 0xe19ce2c0

	 .word 0xc1bce0c0
	 .word 0xe19ce100

	 .word 0xe7ece0e0
	 .word 0xc19ce1c0

	 .word 0xf684e004
	 .word 0xc1bcde00

	 .word 0xec8ce018
	 .word 0xc19ce100

	 .word 0xdf24e02c
	 .word 0xe1bce1c0

	 .word 0xf644e000
	 .word 0xc1bcde00

	 .word 0x81dce013
	 .word 0xc1bce300

	 .word 0xecbce000
	 .word 0xe1bcde00

	 .word 0xcd24c000
	 .word 0xc1bcde20

	 .word 0xec1ce000
	 .word 0xe1bcde20

	 .word 0xc93ce030
	 .word 0xc1bcdf20

	 .word 0xf9f4e000
	 .word 0xc19cde20

	 .word 0xf04ce017
	 .word 0xc19ce1c0

	 .word 0xeff4df00
	 .word 0xe1bce100

	 .word 0xecacdf00
	 .word 0xc1bce000

	 .word 0xeafce000
	 .word 0xe19ce3c0

	 .word 0xf3e4de20
	 .word 0xc19cde20

	 .word 0xee84df00
	 .word 0xc19ce340

	 .word 0xd13ce030
	 .word 0xe19ce080

	 .word 0xf604e000
	 .word 0xe1bce200

	 .word 0xc11ce010
	 .word 0xc19cdf20

	 .word 0xc19cde20
	 .word 0xe19cde20

	 .word 0x8143c000
	 .word 0xe19ce080

	 .word 0xf07cc000
	 .word 0xe1bce080

	 .word 0xf3f4df00
	 .word 0xc19ce040

	 .word 0xf4fce004
	 .word 0xc19ce2c0

	 .word 0xf8ece02f
	 .word 0xc19ce1c0

	 .word 0xf4ace03d
	 .word 0xc19ce1c0

	 .word 0xedf4e000
	 .word 0xe19ce200

	 .word 0xedf4e000
	 .word 0xe1bce240

	 .word 0xe9ecdf00
	 .word 0xe1bcdf00

	 .word 0xf4f4de20
	 .word 0xc1bce080

	 .word 0xf86cc000
	 .word 0xe19cdf00

	 .word 0xdd3cc000
	 .word 0xc19ce240

	 .word 0xf86ce011
	 .word 0xc19cde20

	 .word 0xeff4e000
	 .word 0xc1bce200

	 .word 0xf3f4de00
	 .word 0xe19cde00

	 .word 0xf8fce000
	 .word 0xc19ce340

	 .word 0xf67cc000
	 .word 0xe1bcdf00

	 .word 0xf5f4e000
	 .word 0xe1bce100

	 .word 0xc1bce240
	 .word 0xe19ce240

	 .word 0xe1bce040
	 .word 0xc19ce1c0

	 .word 0xc104e036
	 .word 0xc1bcdf00

	 .word 0xe19cde20
	 .word 0xc1bce180

	 .word 0xecd4de20
	 .word 0xe19cde20

	 .word 0xf86ce03d
	 .word 0xc19cde00

	 .word 0xc704c000
	 .word 0xe1bcdf20

	 .word 0xfa2ce030
	 .word 0xe19ce140

	 .word 0xc56ce070
	 .word 0xc1bcdf20

	 .word 0xf47ce004
	 .word 0xe19cde00

	 .word 0xf00cc000
	 .word 0xc19cdf00

	 .word 0xf6ecdf00
	 .word 0xc1bce000

	 .word 0xf5e4de00
	 .word 0xc19ce100

	 .word 0xfa4ce03a
	 .word 0xe1bce2c0

	 .word 0xf244c000
	 .word 0xe19ce200

	 .word 0xf6ece025
	 .word 0xc19cde20

	 .word 0xc19cde00
	 .word 0xc1bce0c0

	 .word 0xf4fce004
	 .word 0xc19cde20

	 .word 0xdd24e03c
	 .word 0xc1bcde00

	 .word 0xf054c000
	 .word 0xc1bcdf20

	 .word 0xe19ce3c0
	 .word 0xc1bcde20

	 .word 0xe1bcde20
	 .word 0xe19ce100

	 .word 0xc1bce080
	 .word 0xe19ce340

	 .word 0xf4c4de20
	 .word 0xe1bcde20

	 .word 0xc524e004
	 .word 0xc1bce040

	 .word 0xc11ce020
	 .word 0xc1bcdf20

	 .word 0xeaacdf00
	 .word 0xe19ce2c0

	 .word 0xf3e4e000
	 .word 0xe19cde00

	 .word 0xf26ce003
	 .word 0xe19ce140

	 .word 0xf46cc000
	 .word 0xe19ce1c0

	 .word 0xeafcde00
	 .word 0xc1bcde00

	 .word 0xc5ece0a0
	 .word 0xc19ce280

	 .word 0xf47cc000
	 .word 0xc1bce180

	 .word 0xdd24c000
	 .word 0xe19cdf20

	 .word 0xfaacdf00
	 .word 0xe19cdf00

	 .word 0xe19ce380
	 .word 0xe19ce300

	 .word 0xf24cc000
	 .word 0xe1bcdf00

	 .word 0xfadcdf00
	 .word 0xe1bce140

	 .word 0xc19cde20
	 .word 0xe1bcde20

	 .word 0x8143c000
	 .word 0xc1bcdf00

	 .word 0xec9ce010
	 .word 0xc1bcde20

	 .word 0xf67ce004
	 .word 0xc19cde00

	 .word 0xc11ce030
	 .word 0xe1bce040

	 .word 0xeeacde00
	 .word 0xe1bcde00

	 .word 0xeafcdf00
	 .word 0xc19ce300

	 .word 0xecece032
	 .word 0xe19cdf00

	 .word 0xede4df00
	 .word 0xc1bce040

	 .word 0x8143e04c
	 .word 0xc1bce040

	 .word 0xdd1cc000
	 .word 0xc19ce300

	 .word 0xd524e004
	 .word 0xc19cde20

	 .word 0x8143e06e
	 .word 0xc1bce180

	 .word 0xc524c000
	 .word 0xc1bce240

	 .word 0xecbcdf20
	 .word 0xc1bcdf20

	 .word 0xfab4e002
	 .word 0xc19cde00

	 .word 0xee84df00
	 .word 0xc1bce340

	 .word 0xf6fcdf20
	 .word 0xc19ce100

	 .word 0xf7f4de00
	 .word 0xe19cde00

	 .word 0xcd24c000
	 .word 0xe1bce040

	 .word 0xf5e4e000
	 .word 0xc1bcde20

	 .word 0xecece01f
	 .word 0xe19cde20

	 .word 0xf27cc000
	 .word 0xe19ce0c0

	 .word 0xd93cc000
	 .word 0xc1bcdf00

	 .word 0xec9cde00
	 .word 0xc19cde00

	 .word 0xc56ce020
	 .word 0xe19ce100

	 .word 0xec1ce000
	 .word 0xc1bce0c0

	 .word 0xe19ce140
	 .word 0xc19cdf00

	 .word 0x8143c000
	 .word 0xe19ce100

	 .word 0xecb4e002
	 .word 0xe19ce280

	 .word 0xd13cc000
	 .word 0xc19cde00

	 .word 0xf3f4e000
	 .word 0xe1bce000

	 .word 0xede4e000
	 .word 0xc19ce240

	 .word 0x81dcc000
	 .word 0xe1bcdf20

	 .word 0xf2b4df00
	 .word 0xe1bcdf00

	 .word 0xf27ce004
	 .word 0xe19cde20

	 .word 0xc19cdf20
	 .word 0xe19cdf20

	 .word 0xeaece023
	 .word 0xe19ce340

	 .word 0x8143c000
	 .word 0xe1bcde20

	 .word 0xf2ecde20
	 .word 0xe19ce140

	 .word 0xfa7cc000
	 .word 0xc1bcde00

	 .word 0xf24cc000
	 .word 0xe19ce040

	 .word 0xf654e000
	 .word 0xe1bce200

	 .word 0xe19cdf20
	 .word 0xe1bcdf20

	 .word 0xe124c000
	 .word 0xe1bce300

	 .word 0xec3cc000
	 .word 0xc1bcdf20

	 .word 0xc76cc000
	 .word 0xe19ce300

	 .word 0xf694de00
	 .word 0xc19cde00

	 .word 0xc1bcdf20
	 .word 0xe19ce0c0

	 .word 0xf6c4de00
	 .word 0xe19cde00

	 .word 0xc1bcde00
	 .word 0xe19ce300

	 .word 0xf2cce021
	 .word 0xe19cde00

	 .word 0xf204c000
	 .word 0xc19cdf20

	 .word 0xfa7cc000
	 .word 0xc1bcde00

	 .word 0xe1bce2c0
	 .word 0xc1bce2c0

	 .word 0xf6dcde20
	 .word 0xe1bce100

	 .word 0xea7cc000
	 .word 0xe19ce200

	 .word 0xeaa4e004
	 .word 0xe1bce1c0

	 .word 0xc1bcdf20
	 .word 0xe19cdf20

	 .word 0x8143e014
	 .word 0xc19cdf20

	 .word 0x8143e05d
	 .word 0xc1bce3c0

	 .word 0xf474c000
	 .word 0xe1bce080

	 .word 0xf3e4de20
	 .word 0xe1bce2c0

	 .word 0x8143e054
	 .word 0xe19ce380

	 .word 0xf674e000
	 .word 0xe19ce080

	 .word 0xea6ce013
	 .word 0xc1bcde00

	 .word 0xf88ce006
	 .word 0xc1bce2c0

	 .word 0xf9f4de20
	 .word 0xc19cde20

	 .word 0xe124c000
	 .word 0xc19ce280

	 .word 0x8143e06e
	 .word 0xc1bce200

	 .word 0xf8ecde00
	 .word 0xe19cde00

	 .word 0xf0b4e000
	 .word 0xe1bcde00

	 .word 0xf8ccde00
	 .word 0xc1bce000

	 .word 0xc5ecde20
	 .word 0xe19cde20

	 .word 0xecf4df00
	 .word 0xc1bcdf00

	 .word 0xe19cdf20
	 .word 0xe19cdf20

	 .word 0xf0fcdf20
	 .word 0xe19ce1c0

	 .word 0xd124e038
	 .word 0xc19ce1c0

	 .word 0xf4b4e002
	 .word 0xc19cdf00

	 .word 0xeefce004
	 .word 0xc1bcde20

	 .word 0xea7ce000
	 .word 0xc19ce380

	 .word 0xfa34c000
	 .word 0xc19cde20

	 .word 0xec6ce005
	 .word 0xe1bcdf20

	 .word 0xc96cc000
	 .word 0xc19cde00

	 .word 0xdf24e010
	 .word 0xc1bcdf20

	 .word 0xc19ce140
	 .word 0xe19ce100

	 .word 0xecfce004
	 .word 0xe1bcdf00

	 .word 0xc1bce040
	 .word 0xc19cde00

	 .word 0xee7cc000
	 .word 0xe1bcdf00

	 .word 0xf0a4e000
	 .word 0xc1bce380

	 .word 0xf2acdf20
	 .word 0xc19ce3c0

	 .word 0xd53ce010
	 .word 0xe1bce100

	 .word 0xdb6ce060
	 .word 0xe1bce380

	 .word 0xc53ce010
	 .word 0xc1bce000

	 .word 0xeafcdf00
	 .word 0xe19cdf00

	 .word 0xf644e000
	 .word 0xc19cdf20

	 .word 0xcb24e034
	 .word 0xe19ce380

	 .word 0xf22cc000
	 .word 0xc1bcdf20

	 .word 0xf4f4de20
	 .word 0xe19cde20

	 .word 0xf46ce03c
	 .word 0xe1bcde20

	 .word 0xf85cc000
	 .word 0xc1bcdf00

	 .word 0xf234c000
	 .word 0xe19cde00

	 .word 0xf8acdf00
	 .word 0xe1bcdf00

	 .word 0xc19cdf20
	 .word 0xe19cdf20

	 .word 0xeeecde00
	 .word 0xc19cde00

	 .word 0xf6b4df00
	 .word 0xc1bcdf00

	 .word 0xf4ecdf20
	 .word 0xe19ce300

	 .word 0xe1bce240
	 .word 0xe1bce080

	 .word 0xc104e028
	 .word 0xc1bce340

	 .word 0xf6ece01d
	 .word 0xc19ce1c0

	 .word 0xfa84e004
	 .word 0xc1bcdf00

	 .word 0xd1ece0a0
	 .word 0xe19ce340

	 .word 0xe19cde20
	 .word 0xe19ce140

	 .word 0xc13ce030
	 .word 0xe19ce100

	 .word 0xf2acde00
	 .word 0xe19cde00

	 .word 0xf0fce000
	 .word 0xc19cdf00

	 .word 0xec6cc000
	 .word 0xe1bcde00

	 .word 0xececde00
	 .word 0xe19cde00

	 .word 0x81dcc000
	 .word 0xe19cde00

	 .word 0xf5e4df20
	 .word 0xc1bce300

	 .word 0xee94e002
	 .word 0xe19cdf20

	 .word 0xf2fcde20
	 .word 0xc1bcde20

	 .word 0xc11ce030
	 .word 0xe1bcde20

	 .word 0xec6ce008
	 .word 0xc19cde00

	 .word 0xeff4e000
	 .word 0xc19cde00

	 .word 0xeaecdf00
	 .word 0xe1bce100

	 .word 0xea4cc000
	 .word 0xc1bcde00

	 .word 0xec3ce010
	 .word 0xe1bcdf20

	 .word 0x8143e059
	 .word 0xc1bcde00

	 .word 0xfaf4e000
	 .word 0xe1bcdf20

	 .word 0xf4ecdf00
	 .word 0xe19ce300

	 .word 0xc1bcde20
	 .word 0xc19ce0c0

	 .word 0xc1ecde20
	 .word 0xe19cde20

	 .word 0xee6cc000
	 .word 0xe19cdf20

	 .word 0xc3ece0e0
	 .word 0xe1bcde00

	 .word 0xf274e008
	 .word 0xe19cdf20

	 .word 0xf8d4e000
	 .word 0xe1bce200

	 .word 0xfa7cc000
	 .word 0xe1bce2c0

	 .word 0xec84e004
	 .word 0xe1bce180

	 .word 0xf3e4df00
	 .word 0xc1bce240

	 .word 0xd324e02c
	 .word 0xe1bce180

	 .word 0x81dcc000
	 .word 0xe1bce100

	 .word 0xc724c000
	 .word 0xe19ce2c0

	 .word 0xecd4de00
	 .word 0xe19ce340

	 .word 0xea74e000
	 .word 0xc19cde00

	 .word 0xedece0b0
	 .word 0xc1bcde20

	 .word 0xc93cc000
	 .word 0xc1bce080

	 .word 0xf07ce000
	 .word 0xc19cde00

	 .word 0xefe4de20
	 .word 0xe1bcde20

	 .word 0xf5f4e000
	 .word 0xe19ce200

	 .word 0xea84de00
	 .word 0xe19ce0c0

	 .word 0xeaece024
	 .word 0xe1bcde00

	 .word 0xf86cc000
	 .word 0xe1bce300

	 .word 0xc19cde00
	 .word 0xe19cde00

	 .word 0xec9cde00
	 .word 0xe19ce180

	 .word 0xedecde00
	 .word 0xe1bcde00

	 .word 0xc76ce0f0
	 .word 0xc19ce3c0

	 .word 0x81dce044
	 .word 0xc19ce040

	 .word 0xf86ce015
	 .word 0xc19ce300

	 .word 0xf054e000
	 .word 0xc19cde20

	 .word 0x8143c000
	 .word 0xe19ce240

	 .word 0xeff4de20
	 .word 0xc1bce040

	 .word 0xec7ce000
	 .word 0xe1bcde00

	 .word 0xf46cc000
	 .word 0xe1bcdf20

	 .word 0xecbcdf00
	 .word 0xc19ce380

	 .word 0xf1e4e000
	 .word 0xc1bce340

	 .word 0xc76cc000
	 .word 0xe19ce0c0

	 .word 0x8143c000
	 .word 0xc19cde20

	 .word 0xf5e4de20
	 .word 0xc19ce3c0

	 .word 0xf67ce004
	 .word 0xc1bce1c0

	 .word 0xf87cc000
	 .word 0xe1bce000

	 .word 0xd11cc000
	 .word 0xe19ce240

	 .word 0xf8fce000
	 .word 0xc19ce040

	 .word 0xec3ce010
	 .word 0xc19cde00

	 .word 0x81dce007
	 .word 0xe1bce180

	 .word 0x8143c000
	 .word 0xe19ce3c0

	 .word 0xeaa4df20
	 .word 0xe1bcdf20

	 .word 0x8143e00d
	 .word 0xe1bcde00

	 .word 0xf844c000
	 .word 0xe19ce2c0

	 .word 0xec24c000
	 .word 0xe1bcde00

	 .word 0xc11ce010
	 .word 0xc19ce3c0

	 .word 0xc1bcde00
	 .word 0xe1bce180

	 .word 0xf1f4de20
	 .word 0xc19cde20

	 .word 0xc19cdf00
	 .word 0xc1bce3c0

	 .word 0xf244e004
	 .word 0xe19cdf00

	 .word 0xf0ece020
	 .word 0xc1bcdf00

	 .word 0xdd3cc000
	 .word 0xe19cdf20

	 .word 0xeff4e000
	 .word 0xc19cdf00

	 .word 0xc5ecde00
	 .word 0xc1bce280

	 .word 0xffece060
	 .word 0xc1bce000

	 .word 0xf6ece02d
	 .word 0xe19cdf20

	 .word 0xf40ce002
	 .word 0xe19ce1c0

	 .word 0xead4e002
	 .word 0xe19cdf20

	 .word 0xf4ece016
	 .word 0xc1bcde00

	 .word 0xf02cc000
	 .word 0xe1bce240

	 .word 0xf27cc000
	 .word 0xc1bce040

	 .word 0xe19cdf00
	 .word 0xc19ce100

	 .word 0xc1bce000
	 .word 0xc1bce180

	 .word 0xf9e4e000
	 .word 0xe19cdf20

	 .word 0xdf24c000
	 .word 0xe19ce100

	 .word 0xc19cde20
	 .word 0xc1bcde20

	 .word 0xf8ecdf20
	 .word 0xc19ce1c0

	 .word 0xecbcdf00
	 .word 0xe19cdf00

	 .word 0xeff4e000
	 .word 0xc19ce040

	 .word 0xf9e4e000
	 .word 0xe19ce180

	 .word 0xee8cde20
	 .word 0xc1bcde20

	 .word 0xeefce004
	 .word 0xe1bcdf00

	 .word 0xebf4e000
	 .word 0xc1bcdf00

	 .word 0xeaa4e000
	 .word 0xe1bce3c0

	 .word 0xee0cc000
	 .word 0xc1bce3c0

	 .word 0xc3ece090
	 .word 0xc1bcdf00

	 .word 0xf44ce02a
	 .word 0xe19cdf00

	 .word 0xf26ce014
	 .word 0xc19ce280

	 .word 0xec2ce021
	 .word 0xc19cdf20

	 .word 0xe1bce100
	 .word 0xe1bce040

	 .word 0xf6fcde20
	 .word 0xc19ce180

	 .word 0xf44cc000
	 .word 0xe19cde00

	 .word 0xf1e4de00
	 .word 0xc1bce280

	 .word 0xea0cc000
	 .word 0xe19cde20

	 .word 0xf86ce017
	 .word 0xc19cdf20

	 .word 0xef6cc000
	 .word 0xe1bcde00

	 .word 0x81dcc000
	 .word 0xe19cdf00

	 .word 0xe5ece0e0
	 .word 0xe19cdf20

	 .word 0xc1bce140
	 .word 0xc19ce080

	 .word 0xe19cdf20
	 .word 0xe19cdf20

	 .word 0xc51cc000
	 .word 0xc1bce100

	 .word 0xf9f4e000
	 .word 0xe19ce040

	 .word 0xee04e004
	 .word 0xe1bcde00

	 .word 0xf9f4df20
	 .word 0xe19cdf20

	 .word 0xecace00b
	 .word 0xc19cde00

	 .word 0xd924c000
	 .word 0xc1bcdf20

	 .word 0xf2ece006
	 .word 0xe19ce000

	 .word 0xf8c4e000
	 .word 0xe1bce100

	 .word 0xec6cc000
	 .word 0xe19ce1c0

	 .word 0x8143e057
	 .word 0xe1bce140

	 .word 0xc1bce240
	 .word 0xe19ce380

	 .word 0xec3ce000
	 .word 0xc1bce300

	 .word 0xe9ece0c0
	 .word 0xe19ce380

	 .word 0xee7ce004
	 .word 0xc1bcdf20

	 .word 0xc11ce020
	 .word 0xe19ce280

	 .word 0xfab4de20
	 .word 0xc1bcde20

	 .word 0xf2f4e008
	 .word 0xe1bcde00

	 .word 0xc91cc000
	 .word 0xc1bcdf00

	 .word 0xe1bce300
	 .word 0xe19cde20

	 .word 0xcd24c000
	 .word 0xe19ce000

	 .word 0xec3cc000
	 .word 0xe1bce3c0

	 .word 0xf66ce03f
	 .word 0xc1bce080

	 .word 0xee84e000
	 .word 0xc1bce2c0

	 .word 0x8143e04d
	 .word 0xe1bce340

	 .word 0xee24c000
	 .word 0xc1bcde20

	 .word 0xf014c000
	 .word 0xc19ce100

	 .word 0xec7ce000
	 .word 0xc1bcdf20

	 .word 0xf8ace01c
	 .word 0xc1bcdf20

	 .word 0xec0ce026
	 .word 0xc19ce300

	 .word 0xe19cde00
	 .word 0xe1bce380

	 .word 0xc104e008
	 .word 0xc19cde00

	 .word 0x8143e040
	 .word 0xe1bce140

	 .word 0xec44e000
	 .word 0xe19ce380

	 .word 0xeeecdf00
	 .word 0xe1bce180

	 .word 0xf2ecde20
	 .word 0xc1bcde20

	 .word 0x8143e008
	 .word 0xe19cdf00

	 .word 0xf604c000
	 .word 0xc1bcde20

	 .word 0xf04cc000
	 .word 0xe19cdf00

	 .word 0xc104e00e
	 .word 0xc1bcde20

	 .word 0xec3cc000
	 .word 0xe19ce1c0

	 .word 0xea4ce001
	 .word 0xe19ce2c0

	 .word 0xe19cdf00
	 .word 0xe19cdf00

	 .word 0xecbce010
	 .word 0xe19cdf00

	 .word 0xf27cc000
	 .word 0xc19ce240

	 .word 0xf4fce000
	 .word 0xe1bce380

	 .word 0xebf4df00
	 .word 0xe1bce040

	 .word 0xfafce000
	 .word 0xc19cdf20

	 .word 0xc19ce0c0
	 .word 0xe19cde20

	 .word 0xee24e004
	 .word 0xc19cdf00

	 .word 0xf8ece034
	 .word 0xc19ce100

	 .word 0x81dce0f8
	 .word 0xc19cdf20

	 .word 0xc11ce020
	 .word 0xc19ce100

	 .word 0xd704c000
	 .word 0xc1bce000

	 .word 0xf1f4df20
	 .word 0xe19cdf20

	 .word 0xc9ece080
	 .word 0xc1bce280

	 .word 0xeafcdf20
	 .word 0xc19cdf20

	 .word 0xf5e4e000
	 .word 0xc19cde20

	 .word 0xf44ce022
	 .word 0xc1bcde20

	 .word 0x8143c000
	 .word 0xc1bcdf00

	 .word 0xf27cc000
	 .word 0xe19cde00

	 .word 0xea5cc000
	 .word 0xe19cdf20

	 .word 0xc5ece0d0
	 .word 0xe1bce280

	 .word 0xec2cc000
	 .word 0xe19cdf00

	 .word 0xc16ce0b0
	 .word 0xc1bcde00

	 .word 0xe1bce340
	 .word 0xe19cdf20

	 .word 0xf1f4e000
	 .word 0xe1bce200

	 .word 0xf86ce028
	 .word 0xe1bcde20

	 .word 0xebf4df20
	 .word 0xe1bcdf20

	 .word 0x81dcc000
	 .word 0xc1bce2c0

	 .word 0x8143e04c
	 .word 0xc1bcdf00

	 .word 0x8143c000
	 .word 0xc1bce380

	 .word 0xf7e4df20
	 .word 0xe1bce080

	 .word 0xcb24c000
	 .word 0xe19ce2c0

	 .word 0x8143e021
	 .word 0xe19cdf00

	 .word 0xeeace01a
	 .word 0xe19cde20

	 .word 0xf7f4e000
	 .word 0xe1bce3c0

	 .word 0xc1bce100
	 .word 0xe1bce280

	 .word 0xe1bcdf00
	 .word 0xc19cdf00

	 .word 0xf7f4e000
	 .word 0xe1bcdf00

	 .word 0x8143e041
	 .word 0xc1bce2c0

	 .word 0xf9f4e000
	 .word 0xc19cdf00

	 .word 0xf6f4de00
	 .word 0xc1bcde00

	 .word 0xea7cc000
	 .word 0xe1bce380

	 .word 0xec9ce010
	 .word 0xe19cde00

	 .word 0xedf4df20
	 .word 0xc1bcdf20

	 .word 0xeab4e002
	 .word 0xe19ce140

	 .word 0xf0fcdf00
	 .word 0xe1bcdf00

	 .word 0xf8dcde20
	 .word 0xc19ce180

	 .word 0xf26ce008
	 .word 0xe19cde20

	 .word 0xfaf4e000
	 .word 0xc1bcdf20

	 .word 0xf2ecdf00
	 .word 0xe19ce0c0

	 .word 0xf5f4de20
	 .word 0xe1bcde20

	 .word 0xe1bce200
	 .word 0xe1bce0c0

	 .word 0xf8a4e000
	 .word 0xc19cde20

	 .word 0xd724e000
	 .word 0xe19cdf20

	 .word 0x81dcc000
	 .word 0xe1bce3c0

	 .word 0xf3f4de20
	 .word 0xc1bce0c0

	 .word 0xc1bcde20
	 .word 0xe19ce240

	 .word 0xc3ece000
	 .word 0xc1bce140

	 .word 0xf0ece014
	 .word 0xc19ce040

	 .word 0xc36ce0d0
	 .word 0xe19cde00

	 .word 0xec9cde20
	 .word 0xc1bce3c0

	 .word 0xf9f4de20
	 .word 0xe1bce040

	 .word 0xecbcde20
	 .word 0xc19cde20

	 .word 0x8143c000
	 .word 0xc19ce200

	 .word 0xc3ece050
	 .word 0xc1bcde20

	 .word 0xc11ce030
	 .word 0xe19ce2c0

	 .word 0xf8fce004
	 .word 0xc1bce380

	 .word 0xf1e4e000
	 .word 0xc1bcdf00

	 .word 0xe1bcdf20
	 .word 0xc19ce240

	 .word 0xc104e02a
	 .word 0xc1bcde20

	 .word 0xc1bce300
	 .word 0xe1bce140

	 .word 0xf6ece005
	 .word 0xe1bce040

	 .word 0xfaacde20
	 .word 0xe19cde20

	 .word 0xf46cc000
	 .word 0xc1bce200

	 .word 0xecbcde00
	 .word 0xc1bcde00

	 .word 0xecfce004
	 .word 0xe19cde00

	 .word 0xdd1cc000
	 .word 0xe19cdf20

	 .word 0x8143c000
	 .word 0xc19ce140

	 .word 0xf3e4e000
	 .word 0xc19cde20

	 .word 0xc1bcde00
	 .word 0xe1bce080

	 .word 0xfafcde20
	 .word 0xc19cde20

	 .word 0xecece018
	 .word 0xe1bcdf20

	 .word 0xc11ce030
	 .word 0xe1bcdf20

	 .word 0xf004e000
	 .word 0xc19ce040

	 .word 0xeefcdf00
	 .word 0xe1bce180

	 .word 0xc19cde00
	 .word 0xc19cde00

	 .word 0xc1bce3c0
	 .word 0xc19ce0c0

	 .word 0xf3f4df20
	 .word 0xe19cdf20

	 .word 0xc9ece0e0
	 .word 0xc1bcde20

	 .word 0xf0ecde20
	 .word 0xc19ce040

	 .word 0xf7f4de20
	 .word 0xc1bce240

	 .word 0x8143c000
	 .word 0xe1bce080

	 .word 0xf6fcde20
	 .word 0xe1bcde20

	 .word 0xc11cc000
	 .word 0xc1bcde20

	 .word 0xd504c000
	 .word 0xe1bcdf20

	 .word 0xc11ce030
	 .word 0xe19cdf20

	 .word 0xc1bce300
	 .word 0xe1bce300

	 .word 0xe56cc000
	 .word 0xc1bce180

	 .word 0xe1bcde00
	 .word 0xc1bce280

	 .word 0x8143e01a
	 .word 0xc19ce240

	 .word 0x81dce05c
	 .word 0xc19cde20

	 .word 0xc11cc000
	 .word 0xc19cdf20

	 .word 0xc504c000
	 .word 0xe1bce200

	 .word 0xc1bce300
	 .word 0xe1bcde00

	 .word 0xefe4e000
	 .word 0xc19ce000

	 .word 0xcd3ce000
	 .word 0xc1bcde00

	 .word 0xecece023
	 .word 0xe1bce280

	 .word 0xeeece01a
	 .word 0xc19cde00

	 .word 0xc924e034
	 .word 0xe19cdf20

	 .word 0x8143c000
	 .word 0xe19cde00

	 .word 0xea7cc000
	 .word 0xc1bce180

	 .word 0xf87ce000
	 .word 0xe1bcde20

	 .word 0xec1cc000
	 .word 0xc1bce140

	 .word 0xec6ce02f
	 .word 0xe1bce2c0

	 .word 0xec1ce010
	 .word 0xc19cde20

	 .word 0xf9f4df20
	 .word 0xc1bce080

	 .word 0xf674c000
	 .word 0xe19cde20

	 .word 0x8143c000
	 .word 0xc19cdf20

	 .word 0xec1ce010
	 .word 0xc19ce3c0

	 .word 0xe1bcde20
	 .word 0xe19ce140

	 .word 0xec24e004
	 .word 0xc1bcdf20

	 .word 0xec3ce010
	 .word 0xe1bcdf20

	 .word 0xc1bcde20
	 .word 0xc19ce200

	 .word 0xf5e4e000
	 .word 0xc1bcdf20

	 .word 0x81dcc000
	 .word 0xc1bcdf00

	 .word 0xedf4e000
	 .word 0xe19ce180

	 .word 0xc16cc000
	 .word 0xe1bcdf20

	 .word 0xf22ce039
	 .word 0xe19ce2c0

	 .word 0xf4fcde00
	 .word 0xe1bcde00

	 .word 0xeaf4df20
	 .word 0xc19ce200

	 .word 0xe19ce380
	 .word 0xc1bce100

	 .word 0xeeccde00
	 .word 0xe1bcde00

	 .word 0xf4ecde20
	 .word 0xe1bce040

	 .word 0xf9e4e000
	 .word 0xe1bce100

	 .word 0xeafce000
	 .word 0xc1bcde20

	 .word 0xf414c000
	 .word 0xc19cdf20

	 .word 0xcd3cc000
	 .word 0xe19cde20

	 .word 0xeafcde00
	 .word 0xc19ce1c0

	 .word 0xec9ce010
	 .word 0xe19ce180

	 .word 0xe1bce3c0
	 .word 0xe19ce0c0

	 .word 0xeeecde20
	 .word 0xe19ce300

	 .word 0xeeace005
	 .word 0xe19ce040

	 .word 0xf444e004
	 .word 0xc19cdf20

	 .word 0xc19cdf20
	 .word 0xc1bcdf20

	 .word 0xe19ce0c0
	 .word 0xc19ce000

	 .word 0xfa7cc000
	 .word 0xe1bce280

	 .word 0xcd24e038
	 .word 0xc1bce100

	 .word 0xc104e024
	 .word 0xc19ce180

	 .word 0xf044e004
	 .word 0xe19cde20

	 .word 0xcb04c000
	 .word 0xe1bcdf20

	 .word 0xf9f4de20
	 .word 0xc19cde20

	 .word 0xede4e000
	 .word 0xc1bcdf00

	 .word 0xc19ce0c0
	 .word 0xe1bcdf00

	 .word 0xf47ce000
	 .word 0xc19ce040

	 .word 0xf0ecde20
	 .word 0xc1bcde20

	 .word 0xec1cc000
	 .word 0xe1bcde20

	 .word 0xc19cdf20
	 .word 0xc1bce1c0

	 .word 0xf05cc000
	 .word 0xe1bce240

	 .word 0xe19ce380
	 .word 0xc19cdf00

	 .word 0xc11ce020
	 .word 0xc1bcde20

	 .word 0xf0ece021
	 .word 0xe1bcdf20

	 .word 0xf4ace034
	 .word 0xc1bce300

	 .word 0xececde00
	 .word 0xe1bce3c0

	 .word 0xc19ce0c0
	 .word 0xe19ce3c0

	 .word 0xf3e4de20
	 .word 0xc1bce000

	 .word 0xfa7ce004
	 .word 0xc19cdf20

	 .word 0xe19ce280
	 .word 0xe19ce080

	 .word 0xe19ce0c0
	 .word 0xc19ce340

	 .word 0xeefcdf00
	 .word 0xc1bce080

	 .word 0xe1bce300
	 .word 0xe1bcdf00

	 .word 0xf6fce000
	 .word 0xe1bce240

	 .word 0xd724e030
	 .word 0xc1bcdf20

	 .word 0xf624c000
	 .word 0xe1bce200

	 .word 0xea7ce004
	 .word 0xc1bcde20

	 .word 0xd13ce020
	 .word 0xe19ce000

	 .word 0xf46cc000
	 .word 0xe19cdf20

	 .word 0xc1bce140
	 .word 0xc1bce340

	 .word 0xd93ce020
	 .word 0xe19cde00

	 .word 0xf604e000
	 .word 0xc1bcdf20

	 .word 0xec6ce00a
	 .word 0xc19cde20

	 .word 0xf3e4e000
	 .word 0xc1bce3c0


	 ba diag_pass 
	 nop 
run_th_3:

	 wr %g0, 240, %asi

	 ta T_CHANGE_PRIV 
	 nop 
	 set 4057648752, %i0
	 set 2480881937, %i1
	 set 1524373685, %i2
	 set 3405372483, %i3
	 set 1361319160, %i4
	 set 336262609, %i5
	 set 4152375075, %i6
	 set 2157578442, %i7
	 set 738383589, %o0
	 set 692069556, %o1
	 set 343728157, %o2
	 set 3575269893, %o3
	 set 2111279648, %o4
	 set 585777648, %o5
	 set 717771523, %o6
	 set 1123606802, %o7
	 set 522162576, %l0
	 set 752521487, %l1
	 set 1948436374, %l2
	 set 2703713049, %l3
	 set 4221220780, %l4
	 set 1775263218, %l5
	 set 2717928617, %l6
	 set 2292466677, %l7
	 set 1315626578, %g0
	 set 3965534745, %g1
	 set 3215285783, %g2
	 set 508552986, %g3
	 set 1227415511, %g4
	 set 2003958306, %g5
	 set 60974583, %g6
	 set 1854364337, %g7

wr %g0, 0x4, %fprs 
	 setx self_modcode, %l0, %l3
	 ldd [%l3], %f0
	 add 0x8, %l3, %l3
	 ldd [%l3], %f2
	 add 0x8, %l3, %l3
	 ldd [%l3], %f4
	 add 0x8, %l3, %l3
	 ldd [%l3], %f6
	 add 0x8, %l3, %l3
	 ldd [%l3], %f8
	 add 0x8, %l3, %l3
	 ldd [%l3], %f10
	 add 0x8, %l3, %l3
	 ldd [%l3], %f12
	 add 0x8, %l3, %l3
	 ldd [%l3], %f14
	 add 0x8, %l3, %l3
	 ldd [%l3], %f16
	 add 0x8, %l3, %l3
	 ldd [%l3], %f18
	 add 0x8, %l3, %l3
	 ldd [%l3], %f20
	 add 0x8, %l3, %l3
	 ldd [%l3], %f22
	 add 0x8, %l3, %l3
	 ldd [%l3], %f24
	 add 0x8, %l3, %l3
	 ldd [%l3], %f26
	 add 0x8, %l3, %l3
	 ldd [%l3], %f28
	 add 0x8, %l3, %l3
	 ldd [%l3], %f30
	 add 0x8, %l3, %l3
	 ldd [%l3], %f32
	 add 0x8, %l3, %l3
	 ldd [%l3], %f34
	 add 0x8, %l3, %l3
	 ldd [%l3], %f36
	 add 0x8, %l3, %l3
	 ldd [%l3], %f38
	 add 0x8, %l3, %l3
	 ldd [%l3], %f40
	 add 0x8, %l3, %l3
	 ldd [%l3], %f42
	 add 0x8, %l3, %l3
	 ldd [%l3], %f44
	 add 0x8, %l3, %l3
	 ldd [%l3], %f46
	 add 0x8, %l3, %l3
	 ldd [%l3], %f48
	 add 0x8, %l3, %l3
	 ldd [%l3], %f50
	 add 0x8, %l3, %l3
	 ldd [%l3], %f52
	 add 0x8, %l3, %l3
	 ldd [%l3], %f54
	 add 0x8, %l3, %l3
	 ldd [%l3], %f56
	 add 0x8, %l3, %l3
	 ldd [%l3], %f58
	 add 0x8, %l3, %l3
	 ldd [%l3], %f60
	 add 0x8, %l3, %l3
	 ldd [%l3], %f62
	 add 0x8, %l3, %l3
	 setx data5, %l0, %l3
	 setx self_modcode, %l0, %l1
	 .word 0xc96ce000
	 .word 0xc5ece0a0
	 .word 0xc19ce340

	 .word 0xfac4e004
	 .word 0xc76ce0e0
	 .word 0xe1bcc580

	 .word 0xefe4c460
	 .word 0xcd6ce020
	 .word 0xe19ce2c0


.global invldic_0
 invldic_0:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_0_lp, %l0, %l2
.align 0x10 
.global invldic_0_lp
invldic_0_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_0_lp; add %l7, 1, %l7

	 .word 0xf8fce000
	 .word 0xc96ce070
	 .word 0xe1bcd020

	 .word 0xc19cc440
	 .word 0xff6cc000
	 .word 0xe19ce0c0


.global invldic_1
 invldic_1:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_1_lp, %l0, %l2
.align 0x10 
.global invldic_1_lp
invldic_1_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_1_lp; add %l7, 1, %l7

	 .word 0xf5f4e000
	 .word 0xc7ecc460
	 .word 0xe1bce100


.global invldic_2
 invldic_2:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_2_lp, %l0, %l2
.align 0x10 
.global invldic_2_lp
invldic_2_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_2_lp; add %l7, 1, %l7


.global invldic_3
 invldic_3:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_3_lp, %l0, %l2
.align 0x10 
.global invldic_3_lp
invldic_3_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_3_lp; add %l7, 1, %l7

	 .word 0xf1f4c540
	 .word 0xdf6cc000
	 .word 0xe1bcc540

	 .word 0xf3e4e000
	 .word 0xe3ecd000
	 .word 0xe19cd000

	 .word 0xf5e4d000
	 .word 0xd1ecd000
	 .word 0xe19ce380

	 .word 0xc9ece0b0
	 .word 0xd3ecc440
	 .word 0xc19ce140


.global invldic_4
 invldic_4:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_4_lp, %l0, %l2
.align 0x10 
.global invldic_4_lp
invldic_4_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_4_lp; add %l7, 1, %l7

	 .word 0xc1bce0c0
	 .word 0xc36ce0d0
	 .word 0xc19cd100


.global invldic_5
 invldic_5:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_5_lp, %l0, %l2
.align 0x10 
.global invldic_5_lp
invldic_5_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_5_lp; add %l7, 1, %l7


.global invldic_6
 invldic_6:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_6_lp, %l0, %l2
.align 0x10 
.global invldic_6_lp
invldic_6_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_6_lp; add %l7, 1, %l7


.global invldic_7
 invldic_7:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_7_lp, %l0, %l2
.align 0x10 
.global invldic_7_lp
invldic_7_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_7_lp; add %l7, 1, %l7

	 .word 0xee6ce028
	 .word 0xc5ece060
	 .word 0xe19cc560

	 .word 0xc924c000
	 .word 0xe7ecd000
	 .word 0xc1bce280


.global invldic_8
 invldic_8:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_8_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 32, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_8_lp
invldic_8_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_8_lp; add %l7, 1, %l7


.global invldic_9
 invldic_9:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_9_lp, %l0, %l2
.align 0x10 
.global invldic_9_lp
invldic_9_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_9_lp; add %l7, 1, %l7


.global invldic_10
 invldic_10:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_10_lp, %l0, %l2
.align 0x10 
.global invldic_10_lp
invldic_10_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_10_lp; add %l7, 1, %l7


.global invldic_11
 invldic_11:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_11_lp, %l0, %l2
.align 0x10 
.global invldic_11_lp
invldic_11_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_11_lp; add %l7, 1, %l7


.global invldic_12
 invldic_12:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_12_lp, %l0, %l2
.align 0x10 
.global invldic_12_lp
invldic_12_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_12_lp; add %l7, 1, %l7

	 .word 0xf414e002
	 .word 0xcdece090
	 .word 0xe19ce300


.global invldic_13
 invldic_13:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_13_lp, %l0, %l2
.align 0x10 
.global invldic_13_lp
invldic_13_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_13_lp; add %l7, 1, %l7


.global invldic_14
 invldic_14:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_14_lp, %l0, %l2
.align 0x10 
.global invldic_14_lp
invldic_14_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_14_lp; add %l7, 1, %l7


.global invldic_15
 invldic_15:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_15_lp, %l0, %l2
.align 0x10 
.global invldic_15_lp
invldic_15_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_15_lp; add %l7, 1, %l7

	 .word 0xf894c440
	 .word 0xfd6ce0e0
	 .word 0xe1bce140

	 .word 0xecbcc480
	 .word 0xd9ece010
	 .word 0xe19cc480

	 .word 0xf66cc000
	 .word 0xd1ece0b0
	 .word 0xe1bcd100

	 .word 0xec9ce000
	 .word 0xc36cc000
	 .word 0xc1bce080


.global invldic_16
 invldic_16:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_16_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 176, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_16_lp
invldic_16_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_16_lp; add %l7, 1, %l7


.global invldic_17
 invldic_17:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_17_lp, %l0, %l2
.align 0x10 
.global invldic_17_lp
invldic_17_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_17_lp; add %l7, 1, %l7


.global invldic_18
 invldic_18:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_18_lp, %l0, %l2
.align 0x10 
.global invldic_18_lp
invldic_18_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_18_lp; add %l7, 1, %l7


.global invldic_19
 invldic_19:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_19_lp, %l0, %l2
.align 0x10 
.global invldic_19_lp
invldic_19_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_19_lp; add %l7, 1, %l7

	 .word 0xec1ce000
	 .word 0xc1ece0d0
	 .word 0xe19ce340

	 .word 0xeadcc440
	 .word 0xd56cc000
	 .word 0xc19ce040


.global invldic_20
 invldic_20:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_20_lp, %l0, %l2
.align 0x10 
.global invldic_20_lp
invldic_20_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_20_lp; add %l7, 1, %l7

	 .word 0xf9e4e000
	 .word 0xc36cc000
	 .word 0xc19ce140


.global invldic_21
 invldic_21:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_21_lp, %l0, %l2
.align 0x10 
.global invldic_21_lp
invldic_21_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_21_lp; add %l7, 1, %l7

	 .word 0xebf4e000
	 .word 0xcd6ce090
	 .word 0xc19cd000

	 .word 0xd13cc000
	 .word 0xd96ce060
	 .word 0xe1bce200

	 .word 0xeefce000
	 .word 0xcbecc460
	 .word 0xe19cc460

	 .word 0xf5e4c580
	 .word 0xcf6ce0f0
	 .word 0xc1bce0c0


.global invldic_22
 invldic_22:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_22_lp, %l0, %l2
.align 0x10 
.global invldic_22_lp
invldic_22_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_22_lp; add %l7, 1, %l7

	 .word 0x8143e067
	 .word 0xd16ce090
	 .word 0xc19ce000


.global invldic_23
 invldic_23:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_23_lp, %l0, %l2
.align 0x10 
.global invldic_23_lp
invldic_23_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_23_lp; add %l7, 1, %l7

	 .word 0x8143c000
	 .word 0xc5ece060
	 .word 0xc1bcc560


.global invldic_24
 invldic_24:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_24_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 16, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_24_lp
invldic_24_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_24_lp; add %l7, 1, %l7


.global invldic_25
 invldic_25:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_25_lp, %l0, %l2
.align 0x10 
.global invldic_25_lp
invldic_25_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_25_lp; add %l7, 1, %l7

	 .word 0xecece005
	 .word 0xe9ecc580
	 .word 0xc19ce040

	 .word 0xc104e034
	 .word 0xf56ce030
	 .word 0xc1bcc480

	 .word 0xe1bcdc40
	 .word 0xc36ce060
	 .word 0xe1bce380


.global invldic_26
 invldic_26:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_26_lp, %l0, %l2
.align 0x10 
.global invldic_26_lp
invldic_26_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_26_lp; add %l7, 1, %l7


.global invldic_27
 invldic_27:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_27_lp, %l0, %l2
.align 0x10 
.global invldic_27_lp
invldic_27_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_27_lp; add %l7, 1, %l7

	 .word 0xc11cc000
	 .word 0xd56cc000
	 .word 0xc1bce3c0


.global invldic_28
 invldic_28:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_28_lp, %l0, %l2
.align 0x10 
.global invldic_28_lp
invldic_28_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_28_lp; add %l7, 1, %l7


.global invldic_29
 invldic_29:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_29_lp, %l0, %l2
.align 0x10 
.global invldic_29_lp
invldic_29_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_29_lp; add %l7, 1, %l7


.global invldic_30
 invldic_30:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_30_lp, %l0, %l2
.align 0x10 
.global invldic_30_lp
invldic_30_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_30_lp; add %l7, 1, %l7

	 .word 0xf66ce030
	 .word 0xc56ce060
	 .word 0xe19ce340


.global invldic_31
 invldic_31:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_31_lp, %l0, %l2
.align 0x10 
.global invldic_31_lp
invldic_31_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_31_lp; add %l7, 1, %l7


.global invldic_32
 invldic_32:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_32_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 208, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_32_lp
invldic_32_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_32_lp; add %l7, 1, %l7


.global invldic_33
 invldic_33:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_33_lp, %l0, %l2
.align 0x10 
.global invldic_33_lp
invldic_33_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_33_lp; add %l7, 1, %l7

	 .word 0xea6cc000
	 .word 0xddece0f0
	 .word 0xe19cc560

	 .word 0xf474c000
	 .word 0xc36ce080
	 .word 0xe19cd020


.global invldic_34
 invldic_34:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_34_lp, %l0, %l2
.align 0x10 
.global invldic_34_lp
invldic_34_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_34_lp; add %l7, 1, %l7

	 .word 0x81dce007
	 .word 0xf7ecd100
	 .word 0xe1bcd100


.global invldic_35
 invldic_35:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_35_lp, %l0, %l2
.align 0x10 
.global invldic_35_lp
invldic_35_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_35_lp; add %l7, 1, %l7


.global invldic_36
 invldic_36:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_36_lp, %l0, %l2
.align 0x10 
.global invldic_36_lp
invldic_36_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_36_lp; add %l7, 1, %l7


.global invldic_37
 invldic_37:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_37_lp, %l0, %l2
.align 0x10 
.global invldic_37_lp
invldic_37_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_37_lp; add %l7, 1, %l7

	 .word 0xe1bce280
	 .word 0xfb6ce0e0
	 .word 0xe19cc540

	 .word 0xf47cc000
	 .word 0xc7ece020
	 .word 0xc1bce200


.global invldic_38
 invldic_38:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_38_lp, %l0, %l2
.align 0x10 
.global invldic_38_lp
invldic_38_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_38_lp; add %l7, 1, %l7


.global invldic_39
 invldic_39:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_39_lp, %l0, %l2
.align 0x10 
.global invldic_39_lp
invldic_39_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_39_lp; add %l7, 1, %l7

	 .word 0xf26ce02e
	 .word 0xf5ece070
	 .word 0xc19cdc60

	 .word 0xe1bcc440
	 .word 0xe1ece070
	 .word 0xe1bce280


.global invldic_40
 invldic_40:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_40_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 224, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_40_lp
invldic_40_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_40_lp; add %l7, 1, %l7


.global invldic_41
 invldic_41:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_41_lp, %l0, %l2
.align 0x10 
.global invldic_41_lp
invldic_41_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_41_lp; add %l7, 1, %l7

	 .word 0xf624e000
	 .word 0xf7ece0b0
	 .word 0xc1bcc540

	 .word 0xf4d4c560
	 .word 0xc56ce020
	 .word 0xc19cc560


.global invldic_42
 invldic_42:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_42_lp, %l0, %l2
.align 0x10 
.global invldic_42_lp
invldic_42_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_42_lp; add %l7, 1, %l7

	 .word 0xec1ce010
	 .word 0xe96cc000
	 .word 0xc19ce300

	 .word 0xfacce017
	 .word 0xfbece030
	 .word 0xe1bce100


.global invldic_43
 invldic_43:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_43_lp, %l0, %l2
.align 0x10 
.global invldic_43_lp
invldic_43_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_43_lp; add %l7, 1, %l7

	 .word 0xf0dce000
	 .word 0xc96cc000
	 .word 0xc19ce380


.global invldic_44
 invldic_44:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_44_lp, %l0, %l2
.align 0x10 
.global invldic_44_lp
invldic_44_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_44_lp; add %l7, 1, %l7

	 .word 0xc13cc000
	 .word 0xc5ece090
	 .word 0xc1bcdc60


.global invldic_45
 invldic_45:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_45_lp, %l0, %l2
.align 0x10 
.global invldic_45_lp
invldic_45_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_45_lp; add %l7, 1, %l7

	 .word 0xee7cc000
	 .word 0xf1ecdd40
	 .word 0xe1bce140

	 .word 0xf3e4c560
	 .word 0xc56ce0e0
	 .word 0xe1bce2c0


.global invldic_46
 invldic_46:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_46_lp, %l0, %l2
.align 0x10 
.global invldic_46_lp
invldic_46_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_46_lp; add %l7, 1, %l7

	 .word 0xec7cc000
	 .word 0xc96cc000
	 .word 0xe19ce000


.global invldic_47
 invldic_47:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_47_lp, %l0, %l2
.align 0x10 
.global invldic_47_lp
invldic_47_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_47_lp; add %l7, 1, %l7

	 .word 0x81dce0db
	 .word 0xc1ecdc60
	 .word 0xe1bcdc60


.global invldic_48
 invldic_48:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_48_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 128, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_48_lp
invldic_48_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_48_lp; add %l7, 1, %l7


.global invldic_49
 invldic_49:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_49_lp, %l0, %l2
.align 0x10 
.global invldic_49_lp
invldic_49_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_49_lp; add %l7, 1, %l7


.global invldic_50
 invldic_50:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_50_lp, %l0, %l2
.align 0x10 
.global invldic_50_lp
invldic_50_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_50_lp; add %l7, 1, %l7


.global invldic_51
 invldic_51:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_51_lp, %l0, %l2
.align 0x10 
.global invldic_51_lp
invldic_51_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_51_lp; add %l7, 1, %l7


.global invldic_52
 invldic_52:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_52_lp, %l0, %l2
.align 0x10 
.global invldic_52_lp
invldic_52_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_52_lp; add %l7, 1, %l7


.global invldic_53
 invldic_53:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_53_lp, %l0, %l2
.align 0x10 
.global invldic_53_lp
invldic_53_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_53_lp; add %l7, 1, %l7

	 .word 0xf80ce023
	 .word 0xf1ece010
	 .word 0xc19ce000


.global invldic_54
 invldic_54:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_54_lp, %l0, %l2
.align 0x10 
.global invldic_54_lp
invldic_54_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_54_lp; add %l7, 1, %l7


.global invldic_55
 invldic_55:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_55_lp, %l0, %l2
.align 0x10 
.global invldic_55_lp
invldic_55_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_55_lp; add %l7, 1, %l7


.global invldic_56
 invldic_56:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_56_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 240, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_56_lp
invldic_56_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_56_lp; add %l7, 1, %l7


.global invldic_57
 invldic_57:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_57_lp, %l0, %l2
.align 0x10 
.global invldic_57_lp
invldic_57_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_57_lp; add %l7, 1, %l7

	 .word 0xec9ce000
	 .word 0xc3ece080
	 .word 0xc1bce240


.global invldic_58
 invldic_58:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_58_lp, %l0, %l2
.align 0x10 
.global invldic_58_lp
invldic_58_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_58_lp; add %l7, 1, %l7


.global invldic_59
 invldic_59:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_59_lp, %l0, %l2
.align 0x10 
.global invldic_59_lp
invldic_59_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_59_lp; add %l7, 1, %l7

	 .word 0xf00cc000
	 .word 0xc9ecc460
	 .word 0xe1bcc460


.global invldic_60
 invldic_60:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_60_lp, %l0, %l2
.align 0x10 
.global invldic_60_lp
invldic_60_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_60_lp; add %l7, 1, %l7


.global invldic_61
 invldic_61:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_61_lp, %l0, %l2
.align 0x10 
.global invldic_61_lp
invldic_61_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_61_lp; add %l7, 1, %l7


.global invldic_62
 invldic_62:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_62_lp, %l0, %l2
.align 0x10 
.global invldic_62_lp
invldic_62_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_62_lp; add %l7, 1, %l7


.global invldic_63
 invldic_63:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_63_lp, %l0, %l2
.align 0x10 
.global invldic_63_lp
invldic_63_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_63_lp; add %l7, 1, %l7


.global invldic_64
 invldic_64:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_64_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 64, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_64_lp
invldic_64_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_64_lp; add %l7, 1, %l7


.global invldic_65
 invldic_65:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_65_lp, %l0, %l2
.align 0x10 
.global invldic_65_lp
invldic_65_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_65_lp; add %l7, 1, %l7


.global invldic_66
 invldic_66:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_66_lp, %l0, %l2
.align 0x10 
.global invldic_66_lp
invldic_66_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_66_lp; add %l7, 1, %l7

	 .word 0xf5e4dd60
	 .word 0xe5ece0d0
	 .word 0xc1bcdd60


.global invldic_67
 invldic_67:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_67_lp, %l0, %l2
.align 0x10 
.global invldic_67_lp
invldic_67_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_67_lp; add %l7, 1, %l7

	 .word 0xf1e4e000
	 .word 0xc5ece0c0
	 .word 0xe19ce000


.global invldic_68
 invldic_68:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_68_lp, %l0, %l2
.align 0x10 
.global invldic_68_lp
invldic_68_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_68_lp; add %l7, 1, %l7

	 .word 0xf0ece005
	 .word 0xc7ece0e0
	 .word 0xe19cd000


.global invldic_69
 invldic_69:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_69_lp, %l0, %l2
.align 0x10 
.global invldic_69_lp
invldic_69_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_69_lp; add %l7, 1, %l7


.global invldic_70
 invldic_70:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_70_lp, %l0, %l2
.align 0x10 
.global invldic_70_lp
invldic_70_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_70_lp; add %l7, 1, %l7

	 .word 0xe1bce280
	 .word 0xdbece0c0
	 .word 0xe19ce1c0


.global invldic_71
 invldic_71:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_71_lp, %l0, %l2
.align 0x10 
.global invldic_71_lp
invldic_71_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_71_lp; add %l7, 1, %l7

	 .word 0xf87ce000
	 .word 0xe76ce050
	 .word 0xc19cd020

	 .word 0xc1bcc540
	 .word 0xc5ece070
	 .word 0xc1bce340

	 .word 0xe1bcdc40
	 .word 0xc7ecdc40
	 .word 0xe1bcdc40

	 .word 0xee7ce000
	 .word 0xeb6ce0c0
	 .word 0xe19cdc40

	 .word 0xc104e038
	 .word 0xf96cc000
	 .word 0xe1bcd100

	 .word 0xee54c000
	 .word 0xddece040
	 .word 0xc19cd120

	 .word 0xf3f4dd40
	 .word 0xc7ece080
	 .word 0xc19cdd40


.global invldic_72
 invldic_72:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_72_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 0, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_72_lp
invldic_72_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_72_lp; add %l7, 1, %l7

	 .word 0xeea4c480
	 .word 0xc76cc000
	 .word 0xc19ce340

	 .word 0xf27cc000
	 .word 0xc56ce070
	 .word 0xc1bce340


.global invldic_73
 invldic_73:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_73_lp, %l0, %l2
.align 0x10 
.global invldic_73_lp
invldic_73_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_73_lp; add %l7, 1, %l7


.global invldic_74
 invldic_74:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_74_lp, %l0, %l2
.align 0x10 
.global invldic_74_lp
invldic_74_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_74_lp; add %l7, 1, %l7

	 .word 0xc56ce020
	 .word 0xc7ecc580
	 .word 0xc1bcc580

	 .word 0x81dcc000
	 .word 0xcf6ce070
	 .word 0xc19cc480


.global invldic_75
 invldic_75:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_75_lp, %l0, %l2
.align 0x10 
.global invldic_75_lp
invldic_75_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_75_lp; add %l7, 1, %l7

	 .word 0xebe4e000
	 .word 0xffecd100
	 .word 0xe19ce380

	 .word 0xeaece001
	 .word 0xc9ece0f0
	 .word 0xc19cdd60


.global invldic_76
 invldic_76:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_76_lp, %l0, %l2
.align 0x10 
.global invldic_76_lp
invldic_76_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_76_lp; add %l7, 1, %l7


.global invldic_77
 invldic_77:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_77_lp, %l0, %l2
.align 0x10 
.global invldic_77_lp
invldic_77_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_77_lp; add %l7, 1, %l7

	 .word 0xebe4c560
	 .word 0xc3ecc560
	 .word 0xc19ce300

	 .word 0x81dce00c
	 .word 0xc5ece050
	 .word 0xe19ce380


.global invldic_78
 invldic_78:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_78_lp, %l0, %l2
.align 0x10 
.global invldic_78_lp
invldic_78_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_78_lp; add %l7, 1, %l7


.global invldic_79
 invldic_79:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_79_lp, %l0, %l2
.align 0x10 
.global invldic_79_lp
invldic_79_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_79_lp; add %l7, 1, %l7

	 .word 0xee7ce000
	 .word 0xc1ece090
	 .word 0xe19ce300


.global invldic_80
 invldic_80:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_80_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 240, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_80_lp
invldic_80_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_80_lp; add %l7, 1, %l7

	 .word 0xee7ce004
	 .word 0xd16ce0e0
	 .word 0xe19ce140


.global invldic_81
 invldic_81:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_81_lp, %l0, %l2
.align 0x10 
.global invldic_81_lp
invldic_81_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_81_lp; add %l7, 1, %l7

	 .word 0xeff4dd40
	 .word 0xc5ecdd40
	 .word 0xe19ce080

	 .word 0xf26ce005
	 .word 0xc16cc000
	 .word 0xe19ce380

	 .word 0xf8fce004
	 .word 0xdbece060
	 .word 0xe19cc540


.global invldic_82
 invldic_82:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_82_lp, %l0, %l2
.align 0x10 
.global invldic_82_lp
invldic_82_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_82_lp; add %l7, 1, %l7


.global invldic_83
 invldic_83:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_83_lp, %l0, %l2
.align 0x10 
.global invldic_83_lp
invldic_83_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_83_lp; add %l7, 1, %l7


.global invldic_84
 invldic_84:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_84_lp, %l0, %l2
.align 0x10 
.global invldic_84_lp
invldic_84_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_84_lp; add %l7, 1, %l7


.global invldic_85
 invldic_85:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_85_lp, %l0, %l2
.align 0x10 
.global invldic_85_lp
invldic_85_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_85_lp; add %l7, 1, %l7

	 .word 0x81dce0e0
	 .word 0xeb6cc000
	 .word 0xc19cd100

	 .word 0xec6ce000
	 .word 0xc7ecc580
	 .word 0xc19cc580

	 .word 0xea14e002
	 .word 0xc16ce0c0
	 .word 0xe19ce180


.global invldic_86
 invldic_86:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_86_lp, %l0, %l2
.align 0x10 
.global invldic_86_lp
invldic_86_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_86_lp; add %l7, 1, %l7

	 .word 0xea84dc40
	 .word 0xc36cc000
	 .word 0xe1bcdc40


.global invldic_87
 invldic_87:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_87_lp, %l0, %l2
.align 0x10 
.global invldic_87_lp
invldic_87_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_87_lp; add %l7, 1, %l7


.global invldic_88
 invldic_88:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_88_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 160, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_88_lp
invldic_88_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_88_lp; add %l7, 1, %l7

	 .word 0xd53ce010
	 .word 0xe36cc000
	 .word 0xe1bcdc60

	 .word 0xf6fce004
	 .word 0xc96ce0e0
	 .word 0xc19ce2c0

	 .word 0xea44e000
	 .word 0xdfecdd40
	 .word 0xe1bce0c0

	 .word 0xd924c000
	 .word 0xfb6cc000
	 .word 0xc1bcc560


.global invldic_89
 invldic_89:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_89_lp, %l0, %l2
.align 0x10 
.global invldic_89_lp
invldic_89_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_89_lp; add %l7, 1, %l7


.global invldic_90
 invldic_90:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_90_lp, %l0, %l2
.align 0x10 
.global invldic_90_lp
invldic_90_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_90_lp; add %l7, 1, %l7

	 .word 0xee7ce000
	 .word 0xcd6ce0a0
	 .word 0xc19ce300


.global invldic_91
 invldic_91:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_91_lp, %l0, %l2
.align 0x10 
.global invldic_91_lp
invldic_91_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_91_lp; add %l7, 1, %l7

	 .word 0xf8acd020
	 .word 0xe9ece050
	 .word 0xc19cd020


.global invldic_92
 invldic_92:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_92_lp, %l0, %l2
.align 0x10 
.global invldic_92_lp
invldic_92_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_92_lp; add %l7, 1, %l7

	 .word 0xf024c000
	 .word 0xefece0e0
	 .word 0xe19ce340


.global invldic_93
 invldic_93:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_93_lp, %l0, %l2
.align 0x10 
.global invldic_93_lp
invldic_93_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_93_lp; add %l7, 1, %l7

	 .word 0xc1bcdd60
	 .word 0xebece0b0
	 .word 0xe19ce100


.global invldic_94
 invldic_94:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_94_lp, %l0, %l2
.align 0x10 
.global invldic_94_lp
invldic_94_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_94_lp; add %l7, 1, %l7


.global invldic_95
 invldic_95:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_95_lp, %l0, %l2
.align 0x10 
.global invldic_95_lp
invldic_95_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_95_lp; add %l7, 1, %l7

	 .word 0xec1ce000
	 .word 0xc16ce040
	 .word 0xc1bce300

	 .word 0xe19cc580
	 .word 0xc1ece010
	 .word 0xe19cc580


.global invldic_96
 invldic_96:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_96_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 144, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_96_lp
invldic_96_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_96_lp; add %l7, 1, %l7


.global invldic_97
 invldic_97:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_97_lp, %l0, %l2
.align 0x10 
.global invldic_97_lp
invldic_97_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_97_lp; add %l7, 1, %l7

	 .word 0xc104e00e
	 .word 0xd56cc000
	 .word 0xc19ce000

	 .word 0xeaecd000
	 .word 0xf76cc000
	 .word 0xc1bce3c0


.global invldic_98
 invldic_98:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_98_lp, %l0, %l2
.align 0x10 
.global invldic_98_lp
invldic_98_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_98_lp; add %l7, 1, %l7

	 .word 0xf684d100
	 .word 0xc36cc000
	 .word 0xe19cd100

	 .word 0xec6cc000
	 .word 0xe3ecd100
	 .word 0xe19ce140


.global invldic_99
 invldic_99:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_99_lp, %l0, %l2
.align 0x10 
.global invldic_99_lp
invldic_99_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_99_lp; add %l7, 1, %l7


.global invldic_100
 invldic_100:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_100_lp, %l0, %l2
.align 0x10 
.global invldic_100_lp
invldic_100_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_100_lp; add %l7, 1, %l7


.global invldic_101
 invldic_101:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_101_lp, %l0, %l2
.align 0x10 
.global invldic_101_lp
invldic_101_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_101_lp; add %l7, 1, %l7

	 .word 0xf4fce000
	 .word 0xc36cc000
	 .word 0xc1bcc580

	 .word 0xc924c000
	 .word 0xffece0c0
	 .word 0xe19cd020


.global invldic_102
 invldic_102:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_102_lp, %l0, %l2
.align 0x10 
.global invldic_102_lp
invldic_102_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_102_lp; add %l7, 1, %l7


.global invldic_103
 invldic_103:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_103_lp, %l0, %l2
.align 0x10 
.global invldic_103_lp
invldic_103_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_103_lp; add %l7, 1, %l7


.global invldic_104
 invldic_104:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_104_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 16, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_104_lp
invldic_104_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_104_lp; add %l7, 1, %l7


.global invldic_105
 invldic_105:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_105_lp, %l0, %l2
.align 0x10 
.global invldic_105_lp
invldic_105_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_105_lp; add %l7, 1, %l7

	 .word 0xf1e4d120
	 .word 0xc76ce000
	 .word 0xc1bcd120

	 .word 0xf7e4e000
	 .word 0xfdecc580
	 .word 0xe1bce040


.global invldic_106
 invldic_106:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_106_lp, %l0, %l2
.align 0x10 
.global invldic_106_lp
invldic_106_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_106_lp; add %l7, 1, %l7


.global invldic_107
 invldic_107:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_107_lp, %l0, %l2
.align 0x10 
.global invldic_107_lp
invldic_107_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_107_lp; add %l7, 1, %l7


.global invldic_108
 invldic_108:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_108_lp, %l0, %l2
.align 0x10 
.global invldic_108_lp
invldic_108_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_108_lp; add %l7, 1, %l7


.global invldic_109
 invldic_109:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_109_lp, %l0, %l2
.align 0x10 
.global invldic_109_lp
invldic_109_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_109_lp; add %l7, 1, %l7

	 .word 0xec94dd40
	 .word 0xd36cc000
	 .word 0xe1bcdd40

	 .word 0xf894e000
	 .word 0xc1ece000
	 .word 0xe1bce080


.global invldic_110
 invldic_110:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_110_lp, %l0, %l2
.align 0x10 
.global invldic_110_lp
invldic_110_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_110_lp; add %l7, 1, %l7

	 .word 0xc11ce010
	 .word 0xc7ecd000
	 .word 0xe19cd000


.global invldic_111
 invldic_111:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_111_lp, %l0, %l2
.align 0x10 
.global invldic_111_lp
invldic_111_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_111_lp; add %l7, 1, %l7

	 .word 0xf46ce00e
	 .word 0xc3ecd000
	 .word 0xe19cd000


.global invldic_112
 invldic_112:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_112_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 192, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_112_lp
invldic_112_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_112_lp; add %l7, 1, %l7

	 .word 0xf8f4dc40
	 .word 0xc7ece060
	 .word 0xe1bce300

	 .word 0xe19cc480
	 .word 0xc5ecc480
	 .word 0xc19ce140


.global invldic_113
 invldic_113:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_113_lp, %l0, %l2
.align 0x10 
.global invldic_113_lp
invldic_113_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_113_lp; add %l7, 1, %l7


.global invldic_114
 invldic_114:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_114_lp, %l0, %l2
.align 0x10 
.global invldic_114_lp
invldic_114_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_114_lp; add %l7, 1, %l7

	 .word 0xee6cc000
	 .word 0xc36ce070
	 .word 0xe19ce000


.global invldic_115
 invldic_115:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_115_lp, %l0, %l2
.align 0x10 
.global invldic_115_lp
invldic_115_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_115_lp; add %l7, 1, %l7

	 .word 0xf9e4e000
	 .word 0xc56ce050
	 .word 0xc19cdc40


.global invldic_116
 invldic_116:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_116_lp, %l0, %l2
.align 0x10 
.global invldic_116_lp
invldic_116_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_116_lp; add %l7, 1, %l7

	 .word 0xe1bcc440
	 .word 0xcfecc440
	 .word 0xc19cc440

	 .word 0xefe4e000
	 .word 0xdd6cc000
	 .word 0xc19cc440


.global invldic_117
 invldic_117:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_117_lp, %l0, %l2
.align 0x10 
.global invldic_117_lp
invldic_117_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_117_lp; add %l7, 1, %l7


.global invldic_118
 invldic_118:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_118_lp, %l0, %l2
.align 0x10 
.global invldic_118_lp
invldic_118_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_118_lp; add %l7, 1, %l7

	 .word 0xf87cc000
	 .word 0xc56ce0a0
	 .word 0xe1bce280

	 .word 0xecfcc440
	 .word 0xffecc440
	 .word 0xe19cc440


.global invldic_119
 invldic_119:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_119_lp, %l0, %l2
.align 0x10 
.global invldic_119_lp
invldic_119_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_119_lp; add %l7, 1, %l7


.global invldic_120
 invldic_120:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_120_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 96, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_120_lp
invldic_120_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_120_lp; add %l7, 1, %l7


.global invldic_121
 invldic_121:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_121_lp, %l0, %l2
.align 0x10 
.global invldic_121_lp
invldic_121_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_121_lp; add %l7, 1, %l7

	 .word 0xecbcdc40
	 .word 0xe3ece080
	 .word 0xc19cdc40

	 .word 0xec1ce000
	 .word 0xeb6ce0a0
	 .word 0xc19cd100

	 .word 0xc104e02a
	 .word 0xc9ece090
	 .word 0xc19ce080

	 .word 0xf86cc000
	 .word 0xc76cc000
	 .word 0xe1bce1c0

	 .word 0xf3f4e000
	 .word 0xc76ce0c0
	 .word 0xe19ce180

	 .word 0xf1e4dd40
	 .word 0xd1ece050
	 .word 0xe1bcdd40


.global invldic_122
 invldic_122:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_122_lp, %l0, %l2
.align 0x10 
.global invldic_122_lp
invldic_122_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_122_lp; add %l7, 1, %l7

	 .word 0xfa7cc000
	 .word 0xc56cc000
	 .word 0xc19ce040


.global invldic_123
 invldic_123:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_123_lp, %l0, %l2
.align 0x10 
.global invldic_123_lp
invldic_123_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_123_lp; add %l7, 1, %l7


.global invldic_124
 invldic_124:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_124_lp, %l0, %l2
.align 0x10 
.global invldic_124_lp
invldic_124_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_124_lp; add %l7, 1, %l7

	 .word 0xecece02e
	 .word 0xc36ce050
	 .word 0xe1bce1c0


.global invldic_125
 invldic_125:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_125_lp, %l0, %l2
.align 0x10 
.global invldic_125_lp
invldic_125_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_125_lp; add %l7, 1, %l7

	 .word 0xc1bcd020
	 .word 0xc9ece0e0
	 .word 0xe1bcd020

	 .word 0xf8d4c440
	 .word 0xc1ece040
	 .word 0xc1bcc440


.global invldic_126
 invldic_126:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_126_lp, %l0, %l2
.align 0x10 
.global invldic_126_lp
invldic_126_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_126_lp; add %l7, 1, %l7


.global invldic_127
 invldic_127:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_127_lp, %l0, %l2
.align 0x10 
.global invldic_127_lp
invldic_127_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_127_lp; add %l7, 1, %l7


.global invldic_128
 invldic_128:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_128_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 48, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_128_lp
invldic_128_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_128_lp; add %l7, 1, %l7

	 .word 0x8143e00b
	 .word 0xc16ce020
	 .word 0xe1bce080


.global invldic_129
 invldic_129:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_129_lp, %l0, %l2
.align 0x10 
.global invldic_129_lp
invldic_129_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_129_lp; add %l7, 1, %l7


.global invldic_130
 invldic_130:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_130_lp, %l0, %l2
.align 0x10 
.global invldic_130_lp
invldic_130_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_130_lp; add %l7, 1, %l7


.global invldic_131
 invldic_131:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_131_lp, %l0, %l2
.align 0x10 
.global invldic_131_lp
invldic_131_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_131_lp; add %l7, 1, %l7

	 .word 0xede4e000
	 .word 0xf5ece0a0
	 .word 0xc1bce300


.global invldic_132
 invldic_132:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_132_lp, %l0, %l2
.align 0x10 
.global invldic_132_lp
invldic_132_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_132_lp; add %l7, 1, %l7

	 .word 0xc1bcd100
	 .word 0xc9ece080
	 .word 0xc1bcd100

	 .word 0xf5f4d000
	 .word 0xc16cc000
	 .word 0xc19cd000


.global invldic_133
 invldic_133:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_133_lp, %l0, %l2
.align 0x10 
.global invldic_133_lp
invldic_133_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_133_lp; add %l7, 1, %l7


.global invldic_134
 invldic_134:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_134_lp, %l0, %l2
.align 0x10 
.global invldic_134_lp
invldic_134_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_134_lp; add %l7, 1, %l7


.global invldic_135
 invldic_135:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_135_lp, %l0, %l2
.align 0x10 
.global invldic_135_lp
invldic_135_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_135_lp; add %l7, 1, %l7


.global invldic_136
 invldic_136:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_136_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 64, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_136_lp
invldic_136_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_136_lp; add %l7, 1, %l7


.global invldic_137
 invldic_137:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_137_lp, %l0, %l2
.align 0x10 
.global invldic_137_lp
invldic_137_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_137_lp; add %l7, 1, %l7

	 .word 0x8143e034
	 .word 0xd7ecdc40
	 .word 0xe1bce140


.global invldic_138
 invldic_138:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_138_lp, %l0, %l2
.align 0x10 
.global invldic_138_lp
invldic_138_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_138_lp; add %l7, 1, %l7


.global invldic_139
 invldic_139:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_139_lp, %l0, %l2
.align 0x10 
.global invldic_139_lp
invldic_139_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_139_lp; add %l7, 1, %l7

	 .word 0xf3f4e000
	 .word 0xe36ce080
	 .word 0xe19cdc40

	 .word 0xee44e000
	 .word 0xc1ece0f0
	 .word 0xe19ce040

	 .word 0xe19cdc40
	 .word 0xd1ecdc40
	 .word 0xe1bcdc40


.global invldic_140
 invldic_140:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_140_lp, %l0, %l2
.align 0x10 
.global invldic_140_lp
invldic_140_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_140_lp; add %l7, 1, %l7


.global invldic_141
 invldic_141:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_141_lp, %l0, %l2
.align 0x10 
.global invldic_141_lp
invldic_141_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_141_lp; add %l7, 1, %l7


.global invldic_142
 invldic_142:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_142_lp, %l0, %l2
.align 0x10 
.global invldic_142_lp
invldic_142_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_142_lp; add %l7, 1, %l7

	 .word 0xc11cc000
	 .word 0xe36cc000
	 .word 0xe19ce040


.global invldic_143
 invldic_143:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_143_lp, %l0, %l2
.align 0x10 
.global invldic_143_lp
invldic_143_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_143_lp; add %l7, 1, %l7

	 .word 0xc11ce020
	 .word 0xe7ece030
	 .word 0xc19cc560

	 .word 0xe1bce300
	 .word 0xc7ece0a0
	 .word 0xc1bcdd40


.global invldic_144
 invldic_144:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_144_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 160, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_144_lp
invldic_144_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_144_lp; add %l7, 1, %l7

	 .word 0xf40ce009
	 .word 0xdb6cc000
	 .word 0xc1bcc460


.global invldic_145
 invldic_145:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_145_lp, %l0, %l2
.align 0x10 
.global invldic_145_lp
invldic_145_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_145_lp; add %l7, 1, %l7


.global invldic_146
 invldic_146:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_146_lp, %l0, %l2
.align 0x10 
.global invldic_146_lp
invldic_146_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_146_lp; add %l7, 1, %l7


.global invldic_147
 invldic_147:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_147_lp, %l0, %l2
.align 0x10 
.global invldic_147_lp
invldic_147_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_147_lp; add %l7, 1, %l7


.global invldic_148
 invldic_148:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_148_lp, %l0, %l2
.align 0x10 
.global invldic_148_lp
invldic_148_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_148_lp; add %l7, 1, %l7


.global invldic_149
 invldic_149:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_149_lp, %l0, %l2
.align 0x10 
.global invldic_149_lp
invldic_149_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_149_lp; add %l7, 1, %l7


.global invldic_150
 invldic_150:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_150_lp, %l0, %l2
.align 0x10 
.global invldic_150_lp
invldic_150_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_150_lp; add %l7, 1, %l7


.global invldic_151
 invldic_151:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_151_lp, %l0, %l2
.align 0x10 
.global invldic_151_lp
invldic_151_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_151_lp; add %l7, 1, %l7

	 .word 0xd124e010
	 .word 0xc9ecc440
	 .word 0xc19ce040

	 .word 0xe19ce300
	 .word 0xc16ce090
	 .word 0xe19ce000


.global invldic_152
 invldic_152:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_152_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 80, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_152_lp
invldic_152_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_152_lp; add %l7, 1, %l7


.global invldic_153
 invldic_153:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_153_lp, %l0, %l2
.align 0x10 
.global invldic_153_lp
invldic_153_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_153_lp; add %l7, 1, %l7

	 .word 0xc13ce010
	 .word 0xc9ecc580
	 .word 0xe1bcc580


.global invldic_154
 invldic_154:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_154_lp, %l0, %l2
.align 0x10 
.global invldic_154_lp
invldic_154_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_154_lp; add %l7, 1, %l7


.global invldic_155
 invldic_155:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_155_lp, %l0, %l2
.align 0x10 
.global invldic_155_lp
invldic_155_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_155_lp; add %l7, 1, %l7

	 .word 0xec0ce032
	 .word 0xfd6ce0b0
	 .word 0xc1bcc480

	 .word 0xececdc60
	 .word 0xc3ecdc60
	 .word 0xe19ce240

	 .word 0xc104e01c
	 .word 0xddecdd60
	 .word 0xc1bcdd60


.global invldic_156
 invldic_156:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_156_lp, %l0, %l2
.align 0x10 
.global invldic_156_lp
invldic_156_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_156_lp; add %l7, 1, %l7

	 .word 0xd53cc000
	 .word 0xc3ecc540
	 .word 0xc1bce080


.global invldic_157
 invldic_157:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_157_lp, %l0, %l2
.align 0x10 
.global invldic_157_lp
invldic_157_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_157_lp; add %l7, 1, %l7


.global invldic_158
 invldic_158:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_158_lp, %l0, %l2
.align 0x10 
.global invldic_158_lp
invldic_158_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_158_lp; add %l7, 1, %l7


.global invldic_159
 invldic_159:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_159_lp, %l0, %l2
.align 0x10 
.global invldic_159_lp
invldic_159_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_159_lp; add %l7, 1, %l7


.global invldic_160
 invldic_160:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_160_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 64, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_160_lp
invldic_160_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_160_lp; add %l7, 1, %l7

	 .word 0xfaacc480
	 .word 0xfb6cc000
	 .word 0xc1bce040

	 .word 0xec7cc000
	 .word 0xe3ecd100
	 .word 0xe1bcd100

	 .word 0xeefcc480
	 .word 0xc5ece050
	 .word 0xc1bce140


.global invldic_161
 invldic_161:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_161_lp, %l0, %l2
.align 0x10 
.global invldic_161_lp
invldic_161_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_161_lp; add %l7, 1, %l7


.global invldic_162
 invldic_162:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_162_lp, %l0, %l2
.align 0x10 
.global invldic_162_lp
invldic_162_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_162_lp; add %l7, 1, %l7

	 .word 0xd13cc000
	 .word 0xc96ce0c0
	 .word 0xe19ce340

	 .word 0xec5ce000
	 .word 0xc3ecdc40
	 .word 0xc1bcdc40

	 .word 0xf25ce000
	 .word 0xc96ce030
	 .word 0xe1bcc480

	 .word 0xc5ece000
	 .word 0xc36cc000
	 .word 0xe19cc440

	 .word 0xc19cc480
	 .word 0xc96cc000
	 .word 0xe1bce080


.global invldic_163
 invldic_163:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_163_lp, %l0, %l2
.align 0x10 
.global invldic_163_lp
invldic_163_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_163_lp; add %l7, 1, %l7

	 .word 0xc124e004
	 .word 0xc76ce070
	 .word 0xe19cdd40

	 .word 0xf3e4c580
	 .word 0xf9ecc580
	 .word 0xc1bcc580


.global invldic_164
 invldic_164:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_164_lp, %l0, %l2
.align 0x10 
.global invldic_164_lp
invldic_164_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_164_lp; add %l7, 1, %l7


.global invldic_165
 invldic_165:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_165_lp, %l0, %l2
.align 0x10 
.global invldic_165_lp
invldic_165_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_165_lp; add %l7, 1, %l7

	 .word 0xe19ce340
	 .word 0xc56cc000
	 .word 0xe1bce200

	 .word 0xf3e4dd60
	 .word 0xefecdd60
	 .word 0xe1bcdd60


.global invldic_166
 invldic_166:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_166_lp, %l0, %l2
.align 0x10 
.global invldic_166_lp
invldic_166_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_166_lp; add %l7, 1, %l7

	 .word 0xede4e000
	 .word 0xc1ecc580
	 .word 0xe19cc580


.global invldic_167
 invldic_167:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_167_lp, %l0, %l2
.align 0x10 
.global invldic_167_lp
invldic_167_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_167_lp; add %l7, 1, %l7


.global invldic_168
 invldic_168:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_168_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 96, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_168_lp
invldic_168_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_168_lp; add %l7, 1, %l7

	 .word 0xc16ce030
	 .word 0xeb6cc000
	 .word 0xc19ce200

	 .word 0xf27cc000
	 .word 0xcdece0d0
	 .word 0xc19cd120

	 .word 0x8143c000
	 .word 0xc7ecd120
	 .word 0xe19ce380


.global invldic_169
 invldic_169:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_169_lp, %l0, %l2
.align 0x10 
.global invldic_169_lp
invldic_169_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_169_lp; add %l7, 1, %l7

	 .word 0xeefce004
	 .word 0xc56ce0d0
	 .word 0xe19cdd40


.global invldic_170
 invldic_170:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_170_lp, %l0, %l2
.align 0x10 
.global invldic_170_lp
invldic_170_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_170_lp; add %l7, 1, %l7


.global invldic_171
 invldic_171:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_171_lp, %l0, %l2
.align 0x10 
.global invldic_171_lp
invldic_171_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_171_lp; add %l7, 1, %l7


.global invldic_172
 invldic_172:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_172_lp, %l0, %l2
.align 0x10 
.global invldic_172_lp
invldic_172_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_172_lp; add %l7, 1, %l7


.global invldic_173
 invldic_173:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_173_lp, %l0, %l2
.align 0x10 
.global invldic_173_lp
invldic_173_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_173_lp; add %l7, 1, %l7


.global invldic_174
 invldic_174:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_174_lp, %l0, %l2
.align 0x10 
.global invldic_174_lp
invldic_174_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_174_lp; add %l7, 1, %l7

	 .word 0xf8ecdc60
	 .word 0xc36ce000
	 .word 0xe1bcdc60


.global invldic_175
 invldic_175:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_175_lp, %l0, %l2
.align 0x10 
.global invldic_175_lp
invldic_175_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_175_lp; add %l7, 1, %l7


.global invldic_176
 invldic_176:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_176_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 128, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_176_lp
invldic_176_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_176_lp; add %l7, 1, %l7

	 .word 0xf204e000
	 .word 0xc3ecdc40
	 .word 0xc1bce140


.global invldic_177
 invldic_177:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_177_lp, %l0, %l2
.align 0x10 
.global invldic_177_lp
invldic_177_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_177_lp; add %l7, 1, %l7

	 .word 0xfa24e000
	 .word 0xd9ece0b0
	 .word 0xe19cdc60


.global invldic_178
 invldic_178:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_178_lp, %l0, %l2
.align 0x10 
.global invldic_178_lp
invldic_178_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_178_lp; add %l7, 1, %l7


.global invldic_179
 invldic_179:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_179_lp, %l0, %l2
.align 0x10 
.global invldic_179_lp
invldic_179_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_179_lp; add %l7, 1, %l7


.global invldic_180
 invldic_180:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_180_lp, %l0, %l2
.align 0x10 
.global invldic_180_lp
invldic_180_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_180_lp; add %l7, 1, %l7

	 .word 0xf7f4dc60
	 .word 0xf16ce050
	 .word 0xc19cdc60

	 .word 0xec3ce010
	 .word 0xc16ce030
	 .word 0xc1bcc480

	 .word 0xf5f4c460
	 .word 0xef6ce050
	 .word 0xe19cc460


.global invldic_181
 invldic_181:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_181_lp, %l0, %l2
.align 0x10 
.global invldic_181_lp
invldic_181_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_181_lp; add %l7, 1, %l7

	 .word 0xfa4cc000
	 .word 0xd3ece070
	 .word 0xe19ce240


.global invldic_182
 invldic_182:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_182_lp, %l0, %l2
.align 0x10 
.global invldic_182_lp
invldic_182_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_182_lp; add %l7, 1, %l7

	 .word 0xf06ce013
	 .word 0xddece080
	 .word 0xc1bcdd40


.global invldic_183
 invldic_183:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_183_lp, %l0, %l2
.align 0x10 
.global invldic_183_lp
invldic_183_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_183_lp; add %l7, 1, %l7

	 .word 0xf06ce005
	 .word 0xc56cc000
	 .word 0xc19ce380


.global invldic_184
 invldic_184:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_184_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 112, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_184_lp
invldic_184_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_184_lp; add %l7, 1, %l7


.global invldic_185
 invldic_185:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_185_lp, %l0, %l2
.align 0x10 
.global invldic_185_lp
invldic_185_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_185_lp; add %l7, 1, %l7

	 .word 0xf3f4e000
	 .word 0xc96ce0e0
	 .word 0xc19ce300

	 .word 0xc19ce100
	 .word 0xd3ecdc40
	 .word 0xc19cdc40


.global invldic_186
 invldic_186:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_186_lp, %l0, %l2
.align 0x10 
.global invldic_186_lp
invldic_186_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_186_lp; add %l7, 1, %l7


.global invldic_187
 invldic_187:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_187_lp, %l0, %l2
.align 0x10 
.global invldic_187_lp
invldic_187_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_187_lp; add %l7, 1, %l7

	 .word 0xe19cc440
	 .word 0xd5ece030
	 .word 0xe19cc440


.global invldic_188
 invldic_188:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_188_lp, %l0, %l2
.align 0x10 
.global invldic_188_lp
invldic_188_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_188_lp; add %l7, 1, %l7

	 .word 0xf00cc000
	 .word 0xc76ce0f0
	 .word 0xc19cc460

	 .word 0x8143e064
	 .word 0xf76cc000
	 .word 0xc19ce240


.global invldic_189
 invldic_189:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_189_lp, %l0, %l2
.align 0x10 
.global invldic_189_lp
invldic_189_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_189_lp; add %l7, 1, %l7

	 .word 0xf014c000
	 .word 0xc5ece0a0
	 .word 0xe1bce000


.global invldic_190
 invldic_190:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_190_lp, %l0, %l2
.align 0x10 
.global invldic_190_lp
invldic_190_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_190_lp; add %l7, 1, %l7


.global invldic_191
 invldic_191:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_191_lp, %l0, %l2
.align 0x10 
.global invldic_191_lp
invldic_191_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_191_lp; add %l7, 1, %l7


.global invldic_192
 invldic_192:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_192_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 224, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_192_lp
invldic_192_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_192_lp; add %l7, 1, %l7


.global invldic_193
 invldic_193:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_193_lp, %l0, %l2
.align 0x10 
.global invldic_193_lp
invldic_193_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_193_lp; add %l7, 1, %l7


.global invldic_194
 invldic_194:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_194_lp, %l0, %l2
.align 0x10 
.global invldic_194_lp
invldic_194_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_194_lp; add %l7, 1, %l7


.global invldic_195
 invldic_195:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_195_lp, %l0, %l2
.align 0x10 
.global invldic_195_lp
invldic_195_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_195_lp; add %l7, 1, %l7

	 .word 0xf07cc000
	 .word 0xc36cc000
	 .word 0xc19cdd40

	 .word 0xf694e000
	 .word 0xc9ece040
	 .word 0xe19cdc60


.global invldic_196
 invldic_196:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_196_lp, %l0, %l2
.align 0x10 
.global invldic_196_lp
invldic_196_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_196_lp; add %l7, 1, %l7


.global invldic_197
 invldic_197:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_197_lp, %l0, %l2
.align 0x10 
.global invldic_197_lp
invldic_197_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_197_lp; add %l7, 1, %l7


.global invldic_198
 invldic_198:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_198_lp, %l0, %l2
.align 0x10 
.global invldic_198_lp
invldic_198_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_198_lp; add %l7, 1, %l7


.global invldic_199
 invldic_199:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_199_lp, %l0, %l2
.align 0x10 
.global invldic_199_lp
invldic_199_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_199_lp; add %l7, 1, %l7

	 .word 0xec1cc000
	 .word 0xd76ce0a0
	 .word 0xe1bce340


.global invldic_200
 invldic_200:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_200_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 96, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_200_lp
invldic_200_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_200_lp; add %l7, 1, %l7

	 .word 0xf5e4d000
	 .word 0xe3ece030
	 .word 0xc19ce300

	 .word 0xf6ece00c
	 .word 0xfb6ce000
	 .word 0xe1bcc480

	 .word 0xc324e024
	 .word 0xc16cc000
	 .word 0xe1bcc580

	 .word 0xec7cc000
	 .word 0xfd6ce000
	 .word 0xe19ce2c0

	 .word 0xf7e4c440
	 .word 0xefecc440
	 .word 0xc1bce280

	 .word 0xc96cc000
	 .word 0xef6ce090
	 .word 0xc19ce0c0


.global invldic_201
 invldic_201:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_201_lp, %l0, %l2
.align 0x10 
.global invldic_201_lp
invldic_201_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_201_lp; add %l7, 1, %l7

	 .word 0x8143c000
	 .word 0xf96cc000
	 .word 0xe1bce280


.global invldic_202
 invldic_202:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_202_lp, %l0, %l2
.align 0x10 
.global invldic_202_lp
invldic_202_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_202_lp; add %l7, 1, %l7


.global invldic_203
 invldic_203:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_203_lp, %l0, %l2
.align 0x10 
.global invldic_203_lp
invldic_203_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_203_lp; add %l7, 1, %l7


.global invldic_204
 invldic_204:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_204_lp, %l0, %l2
.align 0x10 
.global invldic_204_lp
invldic_204_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_204_lp; add %l7, 1, %l7

	 .word 0xf47ce000
	 .word 0xc3ece040
	 .word 0xe19cd000

	 .word 0xf67ce000
	 .word 0xd1ecd120
	 .word 0xc1bce380


.global invldic_205
 invldic_205:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_205_lp, %l0, %l2
.align 0x10 
.global invldic_205_lp
invldic_205_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_205_lp; add %l7, 1, %l7

	 .word 0xf26ce018
	 .word 0xc5ecc580
	 .word 0xe19ce380

	 .word 0xececc460
	 .word 0xc56ce0b0
	 .word 0xe1bcc460

	 .word 0xec9cc480
	 .word 0xf9ecc480
	 .word 0xe1bce200


.global invldic_206
 invldic_206:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_206_lp, %l0, %l2
.align 0x10 
.global invldic_206_lp
invldic_206_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_206_lp; add %l7, 1, %l7

	 .word 0xf8fcc540
	 .word 0xc7ecc540
	 .word 0xe1bcc540


.global invldic_207
 invldic_207:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_207_lp, %l0, %l2
.align 0x10 
.global invldic_207_lp
invldic_207_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_207_lp; add %l7, 1, %l7


.global invldic_208
 invldic_208:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_208_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 208, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_208_lp
invldic_208_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_208_lp; add %l7, 1, %l7

	 .word 0xc19cdc60
	 .word 0xc56ce070
	 .word 0xc1bce2c0


.global invldic_209
 invldic_209:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_209_lp, %l0, %l2
.align 0x10 
.global invldic_209_lp
invldic_209_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_209_lp; add %l7, 1, %l7


.global invldic_210
 invldic_210:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_210_lp, %l0, %l2
.align 0x10 
.global invldic_210_lp
invldic_210_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_210_lp; add %l7, 1, %l7


.global invldic_211
 invldic_211:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_211_lp, %l0, %l2
.align 0x10 
.global invldic_211_lp
invldic_211_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_211_lp; add %l7, 1, %l7

	 .word 0xfad4e002
	 .word 0xe16ce0c0
	 .word 0xc19cdd60

	 .word 0xf06cc000
	 .word 0xfb6cc000
	 .word 0xc19cdc60

	 .word 0xecece031
	 .word 0xc56cc000
	 .word 0xc1bcdd40

	 .word 0xc96cc000
	 .word 0xcdecc480
	 .word 0xe1bcc480

	 .word 0xf7f4dc60
	 .word 0xc16ce080
	 .word 0xe1bcdc60

	 .word 0xc19cdd40
	 .word 0xdd6cc000
	 .word 0xe1bce2c0

	 .word 0xeac4dd40
	 .word 0xc36cc000
	 .word 0xc1bcdd40

	 .word 0xf614e000
	 .word 0xc16cc000
	 .word 0xc19ce040


.global invldic_212
 invldic_212:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_212_lp, %l0, %l2
.align 0x10 
.global invldic_212_lp
invldic_212_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_212_lp; add %l7, 1, %l7


.global invldic_213
 invldic_213:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_213_lp, %l0, %l2
.align 0x10 
.global invldic_213_lp
invldic_213_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_213_lp; add %l7, 1, %l7

	 .word 0xec1cc000
	 .word 0xc7ecc580
	 .word 0xe19ce1c0


.global invldic_214
 invldic_214:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_214_lp, %l0, %l2
.align 0x10 
.global invldic_214_lp
invldic_214_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_214_lp; add %l7, 1, %l7


.global invldic_215
 invldic_215:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_215_lp, %l0, %l2
.align 0x10 
.global invldic_215_lp
invldic_215_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_215_lp; add %l7, 1, %l7

	 .word 0xecece018
	 .word 0xc56cc000
	 .word 0xe19ce200


.global invldic_216
 invldic_216:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_216_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 96, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_216_lp
invldic_216_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_216_lp; add %l7, 1, %l7


.global invldic_217
 invldic_217:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_217_lp, %l0, %l2
.align 0x10 
.global invldic_217_lp
invldic_217_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_217_lp; add %l7, 1, %l7

	 .word 0xf8ace004
	 .word 0xebecc560
	 .word 0xc1bce2c0

	 .word 0xf28cd100
	 .word 0xc3ecd100
	 .word 0xe1bcd100


.global invldic_218
 invldic_218:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_218_lp, %l0, %l2
.align 0x10 
.global invldic_218_lp
invldic_218_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_218_lp; add %l7, 1, %l7


.global invldic_219
 invldic_219:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_219_lp, %l0, %l2
.align 0x10 
.global invldic_219_lp
invldic_219_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_219_lp; add %l7, 1, %l7

	 .word 0xc56cc000
	 .word 0xe16cc000
	 .word 0xc19cc440


.global invldic_220
 invldic_220:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_220_lp, %l0, %l2
.align 0x10 
.global invldic_220_lp
invldic_220_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_220_lp; add %l7, 1, %l7


.global invldic_221
 invldic_221:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_221_lp, %l0, %l2
.align 0x10 
.global invldic_221_lp
invldic_221_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_221_lp; add %l7, 1, %l7

	 .word 0xf88cc540
	 .word 0xf56cc000
	 .word 0xe1bcc540

	 .word 0xf484e004
	 .word 0xc56ce090
	 .word 0xe19cd020


.global invldic_222
 invldic_222:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_222_lp, %l0, %l2
.align 0x10 
.global invldic_222_lp
invldic_222_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_222_lp; add %l7, 1, %l7

	 .word 0xee6cc000
	 .word 0xc1ecd100
	 .word 0xe1bcd100

	 .word 0xe19ce000
	 .word 0xdb6cc000
	 .word 0xc19cdc40


.global invldic_223
 invldic_223:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_223_lp, %l0, %l2
.align 0x10 
.global invldic_223_lp
invldic_223_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_223_lp; add %l7, 1, %l7

	 .word 0xc524e000
	 .word 0xc3ece020
	 .word 0xe1bcc440

	 .word 0xe19ce080
	 .word 0xc36ce020
	 .word 0xe19ce0c0


.global invldic_224
 invldic_224:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_224_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 224, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_224_lp
invldic_224_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_224_lp; add %l7, 1, %l7

	 .word 0x81dcc000
	 .word 0xeb6ce0b0
	 .word 0xc19ce3c0


.global invldic_225
 invldic_225:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_225_lp, %l0, %l2
.align 0x10 
.global invldic_225_lp
invldic_225_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_225_lp; add %l7, 1, %l7


.global invldic_226
 invldic_226:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_226_lp, %l0, %l2
.align 0x10 
.global invldic_226_lp
invldic_226_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_226_lp; add %l7, 1, %l7

	 .word 0xcd04c000
	 .word 0xc16cc000
	 .word 0xe19ce000

	 .word 0xec1ce000
	 .word 0xf16cc000
	 .word 0xe19ce0c0

	 .word 0x8143c000
	 .word 0xf76cc000
	 .word 0xc19ce000

	 .word 0xcd04c000
	 .word 0xc96cc000
	 .word 0xc1bcd020

	 .word 0xf46ce006
	 .word 0xe1ecc480
	 .word 0xc1bcc480

	 .word 0xc56cc000
	 .word 0xc9ecdc60
	 .word 0xe19cdc60


.global invldic_227
 invldic_227:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_227_lp, %l0, %l2
.align 0x10 
.global invldic_227_lp
invldic_227_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_227_lp; add %l7, 1, %l7

	 .word 0xe7ece060
	 .word 0xe3ecd100
	 .word 0xc1bce0c0


.global invldic_228
 invldic_228:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_228_lp, %l0, %l2
.align 0x10 
.global invldic_228_lp
invldic_228_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_228_lp; add %l7, 1, %l7

	 .word 0xf4b4e002
	 .word 0xc16cc000
	 .word 0xe1bcc540

	 .word 0xec3cc000
	 .word 0xdb6cc000
	 .word 0xc19cdd60


.global invldic_229
 invldic_229:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_229_lp, %l0, %l2
.align 0x10 
.global invldic_229_lp
invldic_229_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_229_lp; add %l7, 1, %l7

	 .word 0xf67cc000
	 .word 0xc5ecc560
	 .word 0xc1bcc560

	 .word 0xe1bce200
	 .word 0xf76cc000
	 .word 0xc1bcc560

	 .word 0xf874c000
	 .word 0xc3ece000
	 .word 0xe1bce380


.global invldic_230
 invldic_230:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_230_lp, %l0, %l2
.align 0x10 
.global invldic_230_lp
invldic_230_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_230_lp; add %l7, 1, %l7


.global invldic_231
 invldic_231:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_231_lp, %l0, %l2
.align 0x10 
.global invldic_231_lp
invldic_231_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_231_lp; add %l7, 1, %l7


.global invldic_232
 invldic_232:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_232_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 176, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_232_lp
invldic_232_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_232_lp; add %l7, 1, %l7

	 .word 0xdb24e018
	 .word 0xe56cc000
	 .word 0xe1bcd000


.global invldic_233
 invldic_233:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_233_lp, %l0, %l2
.align 0x10 
.global invldic_233_lp
invldic_233_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_233_lp; add %l7, 1, %l7


.global invldic_234
 invldic_234:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_234_lp, %l0, %l2
.align 0x10 
.global invldic_234_lp
invldic_234_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_234_lp; add %l7, 1, %l7


.global invldic_235
 invldic_235:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_235_lp, %l0, %l2
.align 0x10 
.global invldic_235_lp
invldic_235_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_235_lp; add %l7, 1, %l7


.global invldic_236
 invldic_236:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_236_lp, %l0, %l2
.align 0x10 
.global invldic_236_lp
invldic_236_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_236_lp; add %l7, 1, %l7

	 .word 0xc19cd000
	 .word 0xc3ecd000
	 .word 0xe1bcd000


.global invldic_237
 invldic_237:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_237_lp, %l0, %l2
.align 0x10 
.global invldic_237_lp
invldic_237_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_237_lp; add %l7, 1, %l7

	 .word 0xf1e4c440
	 .word 0xc3ecc440
	 .word 0xe1bcc440

	 .word 0xcd1cc000
	 .word 0xc76cc000
	 .word 0xe1bce340

	 .word 0xc11ce010
	 .word 0xdfecd000
	 .word 0xc1bcd000

	 .word 0xecfcdc60
	 .word 0xe5ece090
	 .word 0xe1bcdc60

	 .word 0xec3ce010
	 .word 0xfd6ce050
	 .word 0xe1bcd020


.global invldic_238
 invldic_238:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_238_lp, %l0, %l2
.align 0x10 
.global invldic_238_lp
invldic_238_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_238_lp; add %l7, 1, %l7


.global invldic_239
 invldic_239:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_239_lp, %l0, %l2
.align 0x10 
.global invldic_239_lp
invldic_239_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_239_lp; add %l7, 1, %l7

	 .word 0xf9f4d120
	 .word 0xc56cc000
	 .word 0xe1bce0c0

	 .word 0xecfce000
	 .word 0xe1ece000
	 .word 0xc1bcd020


.global invldic_240
 invldic_240:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_240_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 224, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_240_lp
invldic_240_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_240_lp; add %l7, 1, %l7


.global invldic_241
 invldic_241:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_241_lp, %l0, %l2
.align 0x10 
.global invldic_241_lp
invldic_241_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_241_lp; add %l7, 1, %l7

	 .word 0xf094e000
	 .word 0xdbece080
	 .word 0xe1bce2c0


.global invldic_242
 invldic_242:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_242_lp, %l0, %l2
.align 0x10 
.global invldic_242_lp
invldic_242_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_242_lp; add %l7, 1, %l7


.global invldic_243
 invldic_243:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_243_lp, %l0, %l2
.align 0x10 
.global invldic_243_lp
invldic_243_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_243_lp; add %l7, 1, %l7


.global invldic_244
 invldic_244:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_244_lp, %l0, %l2
.align 0x10 
.global invldic_244_lp
invldic_244_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_244_lp; add %l7, 1, %l7


.global invldic_245
 invldic_245:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_245_lp, %l0, %l2
.align 0x10 
.global invldic_245_lp
invldic_245_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_245_lp; add %l7, 1, %l7


.global invldic_246
 invldic_246:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_246_lp, %l0, %l2
.align 0x10 
.global invldic_246_lp
invldic_246_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_246_lp; add %l7, 1, %l7


.global invldic_247
 invldic_247:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_247_lp, %l0, %l2
.align 0x10 
.global invldic_247_lp
invldic_247_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_247_lp; add %l7, 1, %l7

	 .word 0xf4f4e008
	 .word 0xe1ece020
	 .word 0xe19cd000

	 .word 0xfbece060
	 .word 0xc56ce000
	 .word 0xe1bce3c0


.global invldic_248
 invldic_248:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_248_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 16, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_248_lp
invldic_248_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_248_lp; add %l7, 1, %l7


.global invldic_249
 invldic_249:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_249_lp, %l0, %l2
.align 0x10 
.global invldic_249_lp
invldic_249_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_249_lp; add %l7, 1, %l7


.global invldic_250
 invldic_250:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_250_lp, %l0, %l2
.align 0x10 
.global invldic_250_lp
invldic_250_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_250_lp; add %l7, 1, %l7


.global invldic_251
 invldic_251:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_251_lp, %l0, %l2
.align 0x10 
.global invldic_251_lp
invldic_251_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_251_lp; add %l7, 1, %l7


.global invldic_252
 invldic_252:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_252_lp, %l0, %l2
.align 0x10 
.global invldic_252_lp
invldic_252_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_252_lp; add %l7, 1, %l7

	 .word 0xf6fce004
	 .word 0xc5ecdc60
	 .word 0xc1bce340

	 .word 0xf86ce009
	 .word 0xe7ece070
	 .word 0xc19cdd60


.global invldic_253
 invldic_253:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_253_lp, %l0, %l2
.align 0x10 
.global invldic_253_lp
invldic_253_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_253_lp; add %l7, 1, %l7


.global invldic_254
 invldic_254:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_254_lp, %l0, %l2
.align 0x10 
.global invldic_254_lp
invldic_254_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_254_lp; add %l7, 1, %l7


.global invldic_255
 invldic_255:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_255_lp, %l0, %l2
.align 0x10 
.global invldic_255_lp
invldic_255_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_255_lp; add %l7, 1, %l7


.global invldic_256
 invldic_256:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_256_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 128, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_256_lp
invldic_256_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_256_lp; add %l7, 1, %l7


.global invldic_257
 invldic_257:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_257_lp, %l0, %l2
.align 0x10 
.global invldic_257_lp
invldic_257_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_257_lp; add %l7, 1, %l7

	 .word 0xf06ce002
	 .word 0xdfecdd40
	 .word 0xe19cdd40

	 .word 0xd93cc000
	 .word 0xf76ce080
	 .word 0xe1bcd000


.global invldic_258
 invldic_258:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_258_lp, %l0, %l2
.align 0x10 
.global invldic_258_lp
invldic_258_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_258_lp; add %l7, 1, %l7


.global invldic_259
 invldic_259:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_259_lp, %l0, %l2
.align 0x10 
.global invldic_259_lp
invldic_259_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_259_lp; add %l7, 1, %l7

	 .word 0xf27cc000
	 .word 0xc7ece0b0
	 .word 0xe19ce140

	 .word 0x81dce05f
	 .word 0xc1ece080
	 .word 0xc19ce240

	 .word 0xe19cdd60
	 .word 0xc3ecdd60
	 .word 0xc19cdd60

	 .word 0xf1e4dd60
	 .word 0xc7ecdd60
	 .word 0xe1bcdd60

	 .word 0xf26cc000
	 .word 0xe7ece0b0
	 .word 0xe1bce1c0

	 .word 0xefe4c580
	 .word 0xc36ce020
	 .word 0xe1bce280

	 .word 0xc13cc000
	 .word 0xc1ece030
	 .word 0xc1bcc560


.global invldic_260
 invldic_260:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_260_lp, %l0, %l2
.align 0x10 
.global invldic_260_lp
invldic_260_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_260_lp; add %l7, 1, %l7

	 .word 0xc93cc000
	 .word 0xc5ecd120
	 .word 0xc19cd120

	 .word 0xee7cc000
	 .word 0xc7ece030
	 .word 0xc19ce180


.global invldic_261
 invldic_261:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_261_lp, %l0, %l2
.align 0x10 
.global invldic_261_lp
invldic_261_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_261_lp; add %l7, 1, %l7

	 .word 0xeea4e004
	 .word 0xcb6cc000
	 .word 0xe19ce3c0


.global invldic_262
 invldic_262:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_262_lp, %l0, %l2
.align 0x10 
.global invldic_262_lp
invldic_262_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_262_lp; add %l7, 1, %l7

	 .word 0xc19cd020
	 .word 0xe3ece0d0
	 .word 0xe1bcd020

	 .word 0xf07cc000
	 .word 0xc96cc000
	 .word 0xc19ce280


.global invldic_263
 invldic_263:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_263_lp, %l0, %l2
.align 0x10 
.global invldic_263_lp
invldic_263_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_263_lp; add %l7, 1, %l7

	 .word 0xd93cc000
	 .word 0xcf6ce0f0
	 .word 0xc1bcdd60


.global invldic_264
 invldic_264:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_264_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 96, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_264_lp
invldic_264_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_264_lp; add %l7, 1, %l7


.global invldic_265
 invldic_265:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_265_lp, %l0, %l2
.align 0x10 
.global invldic_265_lp
invldic_265_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_265_lp; add %l7, 1, %l7

	 .word 0xcd24c000
	 .word 0xeb6cc000
	 .word 0xe19ce080


.global invldic_266
 invldic_266:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_266_lp, %l0, %l2
.align 0x10 
.global invldic_266_lp
invldic_266_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_266_lp; add %l7, 1, %l7

	 .word 0xf5e4dd40
	 .word 0xebece0b0
	 .word 0xe19cdd40

	 .word 0xe1bce280
	 .word 0xc96ce070
	 .word 0xe19cdd60

	 .word 0xec3ce000
	 .word 0xc3ece0b0
	 .word 0xe1bce040


.global invldic_267
 invldic_267:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_267_lp, %l0, %l2
.align 0x10 
.global invldic_267_lp
invldic_267_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_267_lp; add %l7, 1, %l7


.global invldic_268
 invldic_268:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_268_lp, %l0, %l2
.align 0x10 
.global invldic_268_lp
invldic_268_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_268_lp; add %l7, 1, %l7

	 .word 0xf494e002
	 .word 0xe56ce030
	 .word 0xc19cd120

	 .word 0xc19cd100
	 .word 0xf76ce0c0
	 .word 0xe19cd100


.global invldic_269
 invldic_269:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_269_lp, %l0, %l2
.align 0x10 
.global invldic_269_lp
invldic_269_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_269_lp; add %l7, 1, %l7


.global invldic_270
 invldic_270:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_270_lp, %l0, %l2
.align 0x10 
.global invldic_270_lp
invldic_270_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_270_lp; add %l7, 1, %l7

	 .word 0xc19cc560
	 .word 0xc16cc000
	 .word 0xe19cc560

	 .word 0xf3e4e000
	 .word 0xc3ecd020
	 .word 0xe1bce000

	 .word 0xe19ce340
	 .word 0xe7ece0e0
	 .word 0xe1bce040


.global invldic_271
 invldic_271:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_271_lp, %l0, %l2
.align 0x10 
.global invldic_271_lp
invldic_271_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_271_lp; add %l7, 1, %l7

	 .word 0xf62cc000
	 .word 0xc76cc000
	 .word 0xe1bcc560

	 .word 0xf0dcc540
	 .word 0xc7ecc540
	 .word 0xe1bce180


.global invldic_272
 invldic_272:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_272_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 64, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_272_lp
invldic_272_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_272_lp; add %l7, 1, %l7


.global invldic_273
 invldic_273:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_273_lp, %l0, %l2
.align 0x10 
.global invldic_273_lp
invldic_273_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_273_lp; add %l7, 1, %l7


.global invldic_274
 invldic_274:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_274_lp, %l0, %l2
.align 0x10 
.global invldic_274_lp
invldic_274_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_274_lp; add %l7, 1, %l7

	 .word 0xf26ce00a
	 .word 0xc7ece080
	 .word 0xe19ce3c0

	 .word 0xecbcd000
	 .word 0xc16cc000
	 .word 0xe1bcd000


.global invldic_275
 invldic_275:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_275_lp, %l0, %l2
.align 0x10 
.global invldic_275_lp
invldic_275_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_275_lp; add %l7, 1, %l7

	 .word 0xe124e008
	 .word 0xc96cc000
	 .word 0xe19cdc40

	 .word 0xc5ece0c0
	 .word 0xe36ce060
	 .word 0xe1bcdd60


.global invldic_276
 invldic_276:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_276_lp, %l0, %l2
.align 0x10 
.global invldic_276_lp
invldic_276_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_276_lp; add %l7, 1, %l7

	 .word 0xeeece033
	 .word 0xfdecd100
	 .word 0xc19ce2c0

	 .word 0xeefce004
	 .word 0xefece000
	 .word 0xe19cc440


.global invldic_277
 invldic_277:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_277_lp, %l0, %l2
.align 0x10 
.global invldic_277_lp
invldic_277_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_277_lp; add %l7, 1, %l7

	 .word 0x8143c000
	 .word 0xfbece0d0
	 .word 0xe19ce140


.global invldic_278
 invldic_278:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_278_lp, %l0, %l2
.align 0x10 
.global invldic_278_lp
invldic_278_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_278_lp; add %l7, 1, %l7

	 .word 0xec9ce000
	 .word 0xc1ece0a0
	 .word 0xe1bce300


.global invldic_279
 invldic_279:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_279_lp, %l0, %l2
.align 0x10 
.global invldic_279_lp
invldic_279_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_279_lp; add %l7, 1, %l7

	 .word 0xc51cc000
	 .word 0xd96cc000
	 .word 0xc1bcc580


.global invldic_280
 invldic_280:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_280_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 48, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_280_lp
invldic_280_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_280_lp; add %l7, 1, %l7

	 .word 0xf6b4c460
	 .word 0xfbece090
	 .word 0xc1bcc460

	 .word 0xf5e4c580
	 .word 0xcb6ce0c0
	 .word 0xe19cc580


.global invldic_281
 invldic_281:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_281_lp, %l0, %l2
.align 0x10 
.global invldic_281_lp
invldic_281_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_281_lp; add %l7, 1, %l7

	 .word 0xf204e004
	 .word 0xc16ce0a0
	 .word 0xe1bce040

	 .word 0xc3ecd000
	 .word 0xc9ecd000
	 .word 0xc19ce340

	 .word 0xee04c000
	 .word 0xd7ecdc40
	 .word 0xc19cdc40

	 .word 0xc56cc000
	 .word 0xc16cc000
	 .word 0xc1bcd100


.global invldic_282
 invldic_282:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_282_lp, %l0, %l2
.align 0x10 
.global invldic_282_lp
invldic_282_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_282_lp; add %l7, 1, %l7

	 .word 0xc3ecc460
	 .word 0xc36cc000
	 .word 0xc19ce1c0

	 .word 0xf4fce000
	 .word 0xe5ecd120
	 .word 0xc1bce200

	 .word 0xf634c000
	 .word 0xc3ece080
	 .word 0xe1bcc480


.global invldic_283
 invldic_283:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_283_lp, %l0, %l2
.align 0x10 
.global invldic_283_lp
invldic_283_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_283_lp; add %l7, 1, %l7


.global invldic_284
 invldic_284:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_284_lp, %l0, %l2
.align 0x10 
.global invldic_284_lp
invldic_284_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_284_lp; add %l7, 1, %l7

	 .word 0xf3e4c580
	 .word 0xc3ece000
	 .word 0xe19cc580

	 .word 0xe19ce340
	 .word 0xc9ecd020
	 .word 0xc19ce0c0

	 .word 0xecfce000
	 .word 0xf96cc000
	 .word 0xc1bcd120

	 .word 0xc19cd120
	 .word 0xcdece0b0
	 .word 0xc1bcd120


.global invldic_285
 invldic_285:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_285_lp, %l0, %l2
.align 0x10 
.global invldic_285_lp
invldic_285_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_285_lp; add %l7, 1, %l7

	 .word 0xc324c000
	 .word 0xc76ce060
	 .word 0xc1bcc580


.global invldic_286
 invldic_286:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_286_lp, %l0, %l2
.align 0x10 
.global invldic_286_lp
invldic_286_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_286_lp; add %l7, 1, %l7


.global invldic_287
 invldic_287:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_287_lp, %l0, %l2
.align 0x10 
.global invldic_287_lp
invldic_287_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_287_lp; add %l7, 1, %l7


.global invldic_288
 invldic_288:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_288_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 96, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_288_lp
invldic_288_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_288_lp; add %l7, 1, %l7


.global invldic_289
 invldic_289:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_289_lp, %l0, %l2
.align 0x10 
.global invldic_289_lp
invldic_289_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_289_lp; add %l7, 1, %l7


.global invldic_290
 invldic_290:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_290_lp, %l0, %l2
.align 0x10 
.global invldic_290_lp
invldic_290_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_290_lp; add %l7, 1, %l7


.global invldic_291
 invldic_291:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_291_lp, %l0, %l2
.align 0x10 
.global invldic_291_lp
invldic_291_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_291_lp; add %l7, 1, %l7


.global invldic_292
 invldic_292:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_292_lp, %l0, %l2
.align 0x10 
.global invldic_292_lp
invldic_292_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_292_lp; add %l7, 1, %l7


.global invldic_293
 invldic_293:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_293_lp, %l0, %l2
.align 0x10 
.global invldic_293_lp
invldic_293_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_293_lp; add %l7, 1, %l7

	 .word 0xe1bcdc40
	 .word 0xc3ece0f0
	 .word 0xe19cdc40


.global invldic_294
 invldic_294:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_294_lp, %l0, %l2
.align 0x10 
.global invldic_294_lp
invldic_294_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_294_lp; add %l7, 1, %l7

	 .word 0xe19cd100
	 .word 0xc5ece090
	 .word 0xe19ce0c0

	 .word 0xc19ce380
	 .word 0xc76ce0f0
	 .word 0xc19cd000

	 .word 0xf2d4e002
	 .word 0xc9ece050
	 .word 0xe19ce200


.global invldic_295
 invldic_295:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_295_lp, %l0, %l2
.align 0x10 
.global invldic_295_lp
invldic_295_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_295_lp; add %l7, 1, %l7

	 .word 0xe1bce040
	 .word 0xc56ce030
	 .word 0xc1bce200

	 .word 0xec6ce033
	 .word 0xef6ce020
	 .word 0xc19ce1c0


.global invldic_296
 invldic_296:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_296_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 64, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_296_lp
invldic_296_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_296_lp; add %l7, 1, %l7

	 .word 0xc1bcc480
	 .word 0xc9ece050
	 .word 0xc19ce340

	 .word 0x8143c000
	 .word 0xc56ce0c0
	 .word 0xc19cd100

	 .word 0xeeecc580
	 .word 0xc7ecc580
	 .word 0xe19ce240

	 .word 0xe1bce280
	 .word 0xdd6cc000
	 .word 0xc19cd000

	 .word 0xf0ecd100
	 .word 0xc5ece0e0
	 .word 0xc1bce000

	 .word 0xfaf4e008
	 .word 0xfd6ce060
	 .word 0xe1bce080


.global invldic_297
 invldic_297:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_297_lp, %l0, %l2
.align 0x10 
.global invldic_297_lp
invldic_297_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_297_lp; add %l7, 1, %l7


.global invldic_298
 invldic_298:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_298_lp, %l0, %l2
.align 0x10 
.global invldic_298_lp
invldic_298_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_298_lp; add %l7, 1, %l7


.global invldic_299
 invldic_299:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_299_lp, %l0, %l2
.align 0x10 
.global invldic_299_lp
invldic_299_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_299_lp; add %l7, 1, %l7


.global invldic_300
 invldic_300:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_300_lp, %l0, %l2
.align 0x10 
.global invldic_300_lp
invldic_300_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_300_lp; add %l7, 1, %l7

	 .word 0xf274c000
	 .word 0xc7ecc440
	 .word 0xe19ce380

	 .word 0xfa24c000
	 .word 0xc56ce0d0
	 .word 0xe19ce100


.global invldic_301
 invldic_301:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_301_lp, %l0, %l2
.align 0x10 
.global invldic_301_lp
invldic_301_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_301_lp; add %l7, 1, %l7

	 .word 0x8143c000
	 .word 0xc3ece040
	 .word 0xe19cc560


.global invldic_302
 invldic_302:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_302_lp, %l0, %l2
.align 0x10 
.global invldic_302_lp
invldic_302_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_302_lp; add %l7, 1, %l7


.global invldic_303
 invldic_303:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_303_lp, %l0, %l2
.align 0x10 
.global invldic_303_lp
invldic_303_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_303_lp; add %l7, 1, %l7

	 .word 0xc19ce180
	 .word 0xdbecdd40
	 .word 0xc19cdd40


.global invldic_304
 invldic_304:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_304_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 80, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_304_lp
invldic_304_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_304_lp; add %l7, 1, %l7

	 .word 0xc19cdd40
	 .word 0xff6cc000
	 .word 0xe1bce280

	 .word 0xdf24c000
	 .word 0xc76ce010
	 .word 0xc1bcc560

	 .word 0xf4fce000
	 .word 0xc9ece050
	 .word 0xe19ce1c0

	 .word 0xecece00a
	 .word 0xf56ce080
	 .word 0xc1bcc580


.global invldic_305
 invldic_305:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_305_lp, %l0, %l2
.align 0x10 
.global invldic_305_lp
invldic_305_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_305_lp; add %l7, 1, %l7


.global invldic_306
 invldic_306:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_306_lp, %l0, %l2
.align 0x10 
.global invldic_306_lp
invldic_306_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_306_lp; add %l7, 1, %l7


.global invldic_307
 invldic_307:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_307_lp, %l0, %l2
.align 0x10 
.global invldic_307_lp
invldic_307_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_307_lp; add %l7, 1, %l7


.global invldic_308
 invldic_308:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_308_lp, %l0, %l2
.align 0x10 
.global invldic_308_lp
invldic_308_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_308_lp; add %l7, 1, %l7


.global invldic_309
 invldic_309:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_309_lp, %l0, %l2
.align 0x10 
.global invldic_309_lp
invldic_309_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_309_lp; add %l7, 1, %l7


.global invldic_310
 invldic_310:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_310_lp, %l0, %l2
.align 0x10 
.global invldic_310_lp
invldic_310_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_310_lp; add %l7, 1, %l7

	 .word 0xe1bce140
	 .word 0xc1ece010
	 .word 0xc19cdc40

	 .word 0xe19cdc40
	 .word 0xc1ecdc40
	 .word 0xe1bce080

	 .word 0xf8ecc460
	 .word 0xc9ece0f0
	 .word 0xe19ce2c0

	 .word 0xf8ecc460
	 .word 0xc36cc000
	 .word 0xe19cc460

	 .word 0xe1bcd100
	 .word 0xc9ece010
	 .word 0xe19cd100


.global invldic_311
 invldic_311:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_311_lp, %l0, %l2
.align 0x10 
.global invldic_311_lp
invldic_311_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_311_lp; add %l7, 1, %l7


.global invldic_312
 invldic_312:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_312_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 192, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_312_lp
invldic_312_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_312_lp; add %l7, 1, %l7

	 .word 0xfacce00a
	 .word 0xeb6cc000
	 .word 0xc19ce300


.global invldic_313
 invldic_313:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_313_lp, %l0, %l2
.align 0x10 
.global invldic_313_lp
invldic_313_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_313_lp; add %l7, 1, %l7

	 .word 0xf07ce004
	 .word 0xf9ece0f0
	 .word 0xc19ce100

	 .word 0xf5f4e000
	 .word 0xc56cc000
	 .word 0xe19cd000

	 .word 0xf7f4dc60
	 .word 0xc9ecdc60
	 .word 0xc1bcdc60


.global invldic_314
 invldic_314:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_314_lp, %l0, %l2
.align 0x10 
.global invldic_314_lp
invldic_314_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_314_lp; add %l7, 1, %l7


.global invldic_315
 invldic_315:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_315_lp, %l0, %l2
.align 0x10 
.global invldic_315_lp
invldic_315_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_315_lp; add %l7, 1, %l7

	 .word 0xecbcdd60
	 .word 0xcd6cc000
	 .word 0xe19ce300

	 .word 0xf88cc440
	 .word 0xdfece0f0
	 .word 0xe1bce000


.global invldic_316
 invldic_316:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_316_lp, %l0, %l2
.align 0x10 
.global invldic_316_lp
invldic_316_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_316_lp; add %l7, 1, %l7


.global invldic_317
 invldic_317:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_317_lp, %l0, %l2
.align 0x10 
.global invldic_317_lp
invldic_317_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_317_lp; add %l7, 1, %l7


.global invldic_318
 invldic_318:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_318_lp, %l0, %l2
.align 0x10 
.global invldic_318_lp
invldic_318_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_318_lp; add %l7, 1, %l7


.global invldic_319
 invldic_319:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_319_lp, %l0, %l2
.align 0x10 
.global invldic_319_lp
invldic_319_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_319_lp; add %l7, 1, %l7


.global invldic_320
 invldic_320:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_320_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 192, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_320_lp
invldic_320_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_320_lp; add %l7, 1, %l7


.global invldic_321
 invldic_321:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_321_lp, %l0, %l2
.align 0x10 
.global invldic_321_lp
invldic_321_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_321_lp; add %l7, 1, %l7

	 .word 0xf8ace039
	 .word 0xe9ece080
	 .word 0xe1bcc440


.global invldic_322
 invldic_322:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_322_lp, %l0, %l2
.align 0x10 
.global invldic_322_lp
invldic_322_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_322_lp; add %l7, 1, %l7


.global invldic_323
 invldic_323:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_323_lp, %l0, %l2
.align 0x10 
.global invldic_323_lp
invldic_323_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_323_lp; add %l7, 1, %l7

	 .word 0xeaecc460
	 .word 0xc36cc000
	 .word 0xc19cc460


.global invldic_324
 invldic_324:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_324_lp, %l0, %l2
.align 0x10 
.global invldic_324_lp
invldic_324_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_324_lp; add %l7, 1, %l7

	 .word 0xd104c000
	 .word 0xc16cc000
	 .word 0xc19cd120

	 .word 0xf074e008
	 .word 0xcf6ce040
	 .word 0xc19cdc60

	 .word 0xe19cd120
	 .word 0xcd6ce080
	 .word 0xc1bce200

	 .word 0xf5f4e000
	 .word 0xc56ce0c0
	 .word 0xc1bcc460


.global invldic_325
 invldic_325:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_325_lp, %l0, %l2
.align 0x10 
.global invldic_325_lp
invldic_325_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_325_lp; add %l7, 1, %l7

	 .word 0xe1bce200
	 .word 0xc7ece0f0
	 .word 0xc19ce380

	 .word 0xe19cdc40
	 .word 0xed6cc000
	 .word 0xe1bcdc40

	 .word 0xc19cc460
	 .word 0xcbecc460
	 .word 0xe1bce200


.global invldic_326
 invldic_326:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_326_lp, %l0, %l2
.align 0x10 
.global invldic_326_lp
invldic_326_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_326_lp; add %l7, 1, %l7


.global invldic_327
 invldic_327:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_327_lp, %l0, %l2
.align 0x10 
.global invldic_327_lp
invldic_327_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_327_lp; add %l7, 1, %l7

	 .word 0xf0fcc560
	 .word 0xefecc560
	 .word 0xe1bce3c0

	 .word 0xf6ece026
	 .word 0xe76ce0b0
	 .word 0xe19cd120


.global invldic_328
 invldic_328:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_328_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 96, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_328_lp
invldic_328_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_328_lp; add %l7, 1, %l7

	 .word 0xc76cc000
	 .word 0xfb6ce0d0
	 .word 0xc1bce200

	 .word 0xf9e4dc60
	 .word 0xc36ce0d0
	 .word 0xc1bce080

	 .word 0xecbce010
	 .word 0xc3ece070
	 .word 0xe19ce200

	 .word 0xf2c4dc40
	 .word 0xf5ece080
	 .word 0xc19ce300


.global invldic_329
 invldic_329:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_329_lp, %l0, %l2
.align 0x10 
.global invldic_329_lp
invldic_329_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_329_lp; add %l7, 1, %l7

	 .word 0xf5e4e000
	 .word 0xc16ce080
	 .word 0xe19cd020

	 .word 0xc1bcc560
	 .word 0xcf6cc000
	 .word 0xe1bcc560


.global invldic_330
 invldic_330:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_330_lp, %l0, %l2
.align 0x10 
.global invldic_330_lp
invldic_330_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_330_lp; add %l7, 1, %l7

	 .word 0xeefce004
	 .word 0xc96ce0f0
	 .word 0xe19cdc40


.global invldic_331
 invldic_331:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_331_lp, %l0, %l2
.align 0x10 
.global invldic_331_lp
invldic_331_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_331_lp; add %l7, 1, %l7

	 .word 0xc504c000
	 .word 0xf7ecd100
	 .word 0xc1bcd100

	 .word 0xec84e000
	 .word 0xf76cc000
	 .word 0xe1bcc440

	 .word 0xf1f4e000
	 .word 0xc96ce050
	 .word 0xe1bcc580


.global invldic_332
 invldic_332:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_332_lp, %l0, %l2
.align 0x10 
.global invldic_332_lp
invldic_332_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_332_lp; add %l7, 1, %l7


.global invldic_333
 invldic_333:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_333_lp, %l0, %l2
.align 0x10 
.global invldic_333_lp
invldic_333_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_333_lp; add %l7, 1, %l7


.global invldic_334
 invldic_334:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_334_lp, %l0, %l2
.align 0x10 
.global invldic_334_lp
invldic_334_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_334_lp; add %l7, 1, %l7


.global invldic_335
 invldic_335:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_335_lp, %l0, %l2
.align 0x10 
.global invldic_335_lp
invldic_335_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_335_lp; add %l7, 1, %l7

	 .word 0xf0b4c480
	 .word 0xc5ece000
	 .word 0xe1bce180

	 .word 0xff6cc000
	 .word 0xc56ce0f0
	 .word 0xc1bce200

	 .word 0x81dcc000
	 .word 0xc16ce0d0
	 .word 0xe1bce280


.global invldic_336
 invldic_336:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_336_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 32, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_336_lp
invldic_336_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_336_lp; add %l7, 1, %l7

	 .word 0xf3f4e000
	 .word 0xcb6cc000
	 .word 0xe1bcc540


.global invldic_337
 invldic_337:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_337_lp, %l0, %l2
.align 0x10 
.global invldic_337_lp
invldic_337_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_337_lp; add %l7, 1, %l7

	 .word 0xeab4dd40
	 .word 0xc96cc000
	 .word 0xe19ce080


.global invldic_338
 invldic_338:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_338_lp, %l0, %l2
.align 0x10 
.global invldic_338_lp
invldic_338_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_338_lp; add %l7, 1, %l7


.global invldic_339
 invldic_339:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_339_lp, %l0, %l2
.align 0x10 
.global invldic_339_lp
invldic_339_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_339_lp; add %l7, 1, %l7

	 .word 0xc104e03c
	 .word 0xc7ecc460
	 .word 0xe1bce000

	 .word 0xec9ce000
	 .word 0xc9ecc440
	 .word 0xe19cc440

	 .word 0xf87cc000
	 .word 0xcbece020
	 .word 0xe1bcc580


.global invldic_340
 invldic_340:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_340_lp, %l0, %l2
.align 0x10 
.global invldic_340_lp
invldic_340_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_340_lp; add %l7, 1, %l7

	 .word 0xf4dcdd40
	 .word 0xd5ece070
	 .word 0xc19ce2c0

	 .word 0xf3e4e000
	 .word 0xc56cc000
	 .word 0xc19ce200

	 .word 0xedf4e000
	 .word 0xc7ecd000
	 .word 0xc19cd000

	 .word 0xe19cc440
	 .word 0xf3ecc440
	 .word 0xe19ce040

	 .word 0xede4e000
	 .word 0xc76cc000
	 .word 0xc19ce080

	 .word 0xec3ce010
	 .word 0xc9ece0b0
	 .word 0xc1bcc540

	 .word 0xc1bcc540
	 .word 0xc96cc000
	 .word 0xc1bcc540


.global invldic_341
 invldic_341:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_341_lp, %l0, %l2
.align 0x10 
.global invldic_341_lp
invldic_341_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_341_lp; add %l7, 1, %l7


.global invldic_342
 invldic_342:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_342_lp, %l0, %l2
.align 0x10 
.global invldic_342_lp
invldic_342_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_342_lp; add %l7, 1, %l7

	 .word 0xf7f4e000
	 .word 0xc36cc000
	 .word 0xc1bcd120


.global invldic_343
 invldic_343:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_343_lp, %l0, %l2
.align 0x10 
.global invldic_343_lp
invldic_343_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_343_lp; add %l7, 1, %l7

	 .word 0xede4c580
	 .word 0xc96ce070
	 .word 0xc19ce140

	 .word 0xc104e03e
	 .word 0xc9ece0b0
	 .word 0xc19cd020

	 .word 0xeff4e000
	 .word 0xf3ecdc60
	 .word 0xc1bce3c0


.global invldic_344
 invldic_344:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_344_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 112, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_344_lp
invldic_344_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_344_lp; add %l7, 1, %l7


.global invldic_345
 invldic_345:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_345_lp, %l0, %l2
.align 0x10 
.global invldic_345_lp
invldic_345_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_345_lp; add %l7, 1, %l7


.global invldic_346
 invldic_346:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_346_lp, %l0, %l2
.align 0x10 
.global invldic_346_lp
invldic_346_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_346_lp; add %l7, 1, %l7


.global invldic_347
 invldic_347:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_347_lp, %l0, %l2
.align 0x10 
.global invldic_347_lp
invldic_347_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_347_lp; add %l7, 1, %l7

	 .word 0xf044e004
	 .word 0xc5ece0c0
	 .word 0xe1bce240

	 .word 0xefe4e000
	 .word 0xc5ece070
	 .word 0xc19ce080


.global invldic_348
 invldic_348:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_348_lp, %l0, %l2
.align 0x10 
.global invldic_348_lp
invldic_348_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_348_lp; add %l7, 1, %l7

	 .word 0xf074e000
	 .word 0xc1ecc440
	 .word 0xe19cc440


.global invldic_349
 invldic_349:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_349_lp, %l0, %l2
.align 0x10 
.global invldic_349_lp
invldic_349_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_349_lp; add %l7, 1, %l7


.global invldic_350
 invldic_350:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_350_lp, %l0, %l2
.align 0x10 
.global invldic_350_lp
invldic_350_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_350_lp; add %l7, 1, %l7

	 .word 0xf214e000
	 .word 0xc5ece0b0
	 .word 0xe19cc540


.global invldic_351
 invldic_351:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_351_lp, %l0, %l2
.align 0x10 
.global invldic_351_lp
invldic_351_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_351_lp; add %l7, 1, %l7

	 .word 0xc1ece090
	 .word 0xc5ecc580
	 .word 0xc1bce2c0


.global invldic_352
 invldic_352:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_352_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 208, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_352_lp
invldic_352_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_352_lp; add %l7, 1, %l7


.global invldic_353
 invldic_353:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_353_lp, %l0, %l2
.align 0x10 
.global invldic_353_lp
invldic_353_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_353_lp; add %l7, 1, %l7


.global invldic_354
 invldic_354:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_354_lp, %l0, %l2
.align 0x10 
.global invldic_354_lp
invldic_354_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_354_lp; add %l7, 1, %l7

	 .word 0xedf4e000
	 .word 0xf1ecc440
	 .word 0xe19cc440


.global invldic_355
 invldic_355:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_355_lp, %l0, %l2
.align 0x10 
.global invldic_355_lp
invldic_355_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_355_lp; add %l7, 1, %l7

	 .word 0xf82ce016
	 .word 0xc9ecdc60
	 .word 0xc1bcdc60


.global invldic_356
 invldic_356:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_356_lp, %l0, %l2
.align 0x10 
.global invldic_356_lp
invldic_356_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_356_lp; add %l7, 1, %l7

	 .word 0xea14e000
	 .word 0xf36cc000
	 .word 0xe1bce200

	 .word 0xedf4c580
	 .word 0xc16ce010
	 .word 0xc1bce140

	 .word 0xede4e000
	 .word 0xc1ece050
	 .word 0xc19ce2c0


.global invldic_357
 invldic_357:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_357_lp, %l0, %l2
.align 0x10 
.global invldic_357_lp
invldic_357_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_357_lp; add %l7, 1, %l7


.global invldic_358
 invldic_358:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_358_lp, %l0, %l2
.align 0x10 
.global invldic_358_lp
invldic_358_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_358_lp; add %l7, 1, %l7


.global invldic_359
 invldic_359:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_359_lp, %l0, %l2
.align 0x10 
.global invldic_359_lp
invldic_359_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_359_lp; add %l7, 1, %l7

	 .word 0xf6cce016
	 .word 0xcdece0b0
	 .word 0xc1bce280


.global invldic_360
 invldic_360:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_360_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 144, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_360_lp
invldic_360_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_360_lp; add %l7, 1, %l7

	 .word 0xf8ece035
	 .word 0xed6cc000
	 .word 0xc1bce300


.global invldic_361
 invldic_361:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_361_lp, %l0, %l2
.align 0x10 
.global invldic_361_lp
invldic_361_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_361_lp; add %l7, 1, %l7


.global invldic_362
 invldic_362:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_362_lp, %l0, %l2
.align 0x10 
.global invldic_362_lp
invldic_362_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_362_lp; add %l7, 1, %l7


.global invldic_363
 invldic_363:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_363_lp, %l0, %l2
.align 0x10 
.global invldic_363_lp
invldic_363_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_363_lp; add %l7, 1, %l7


.global invldic_364
 invldic_364:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_364_lp, %l0, %l2
.align 0x10 
.global invldic_364_lp
invldic_364_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_364_lp; add %l7, 1, %l7

	 .word 0xc11cc000
	 .word 0xc36cc000
	 .word 0xc1bce3c0

	 .word 0xecbcc580
	 .word 0xd3ece040
	 .word 0xc1bcc580


.global invldic_365
 invldic_365:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_365_lp, %l0, %l2
.align 0x10 
.global invldic_365_lp
invldic_365_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_365_lp; add %l7, 1, %l7


.global invldic_366
 invldic_366:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_366_lp, %l0, %l2
.align 0x10 
.global invldic_366_lp
invldic_366_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_366_lp; add %l7, 1, %l7

	 .word 0xe19cc580
	 .word 0xf76cc000
	 .word 0xe1bcc580

	 .word 0xf8ece03a
	 .word 0xd1ecdc60
	 .word 0xe19ce000


.global invldic_367
 invldic_367:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_367_lp, %l0, %l2
.align 0x10 
.global invldic_367_lp
invldic_367_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_367_lp; add %l7, 1, %l7


.global invldic_368
 invldic_368:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_368_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 0, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_368_lp
invldic_368_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_368_lp; add %l7, 1, %l7


.global invldic_369
 invldic_369:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_369_lp, %l0, %l2
.align 0x10 
.global invldic_369_lp
invldic_369_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_369_lp; add %l7, 1, %l7


.global invldic_370
 invldic_370:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_370_lp, %l0, %l2
.align 0x10 
.global invldic_370_lp
invldic_370_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_370_lp; add %l7, 1, %l7


.global invldic_371
 invldic_371:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_371_lp, %l0, %l2
.align 0x10 
.global invldic_371_lp
invldic_371_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_371_lp; add %l7, 1, %l7

	 .word 0xec6ce027
	 .word 0xe56ce0b0
	 .word 0xc19cd020


.global invldic_372
 invldic_372:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_372_lp, %l0, %l2
.align 0x10 
.global invldic_372_lp
invldic_372_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_372_lp; add %l7, 1, %l7

	 .word 0xea7ce004
	 .word 0xc16cc000
	 .word 0xc19cc580


.global invldic_373
 invldic_373:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_373_lp, %l0, %l2
.align 0x10 
.global invldic_373_lp
invldic_373_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_373_lp; add %l7, 1, %l7

	 .word 0xc19cc460
	 .word 0xc96cc000
	 .word 0xc19ce180


.global invldic_374
 invldic_374:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_374_lp, %l0, %l2
.align 0x10 
.global invldic_374_lp
invldic_374_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_374_lp; add %l7, 1, %l7


.global invldic_375
 invldic_375:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_375_lp, %l0, %l2
.align 0x10 
.global invldic_375_lp
invldic_375_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_375_lp; add %l7, 1, %l7


.global invldic_376
 invldic_376:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_376_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 16, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_376_lp
invldic_376_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_376_lp; add %l7, 1, %l7


.global invldic_377
 invldic_377:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_377_lp, %l0, %l2
.align 0x10 
.global invldic_377_lp
invldic_377_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_377_lp; add %l7, 1, %l7


.global invldic_378
 invldic_378:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_378_lp, %l0, %l2
.align 0x10 
.global invldic_378_lp
invldic_378_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_378_lp; add %l7, 1, %l7


.global invldic_379
 invldic_379:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_379_lp, %l0, %l2
.align 0x10 
.global invldic_379_lp
invldic_379_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_379_lp; add %l7, 1, %l7


.global invldic_380
 invldic_380:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_380_lp, %l0, %l2
.align 0x10 
.global invldic_380_lp
invldic_380_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_380_lp; add %l7, 1, %l7


.global invldic_381
 invldic_381:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_381_lp, %l0, %l2
.align 0x10 
.global invldic_381_lp
invldic_381_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_381_lp; add %l7, 1, %l7

	 .word 0xe1bcd020
	 .word 0xfd6cc000
	 .word 0xc1bcd020


.global invldic_382
 invldic_382:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_382_lp, %l0, %l2
.align 0x10 
.global invldic_382_lp
invldic_382_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_382_lp; add %l7, 1, %l7

	 .word 0xc13ce010
	 .word 0xcfecc560
	 .word 0xc19ce0c0

	 .word 0xf494e002
	 .word 0xcfecd100
	 .word 0xe1bcd100

	 .word 0x8143c000
	 .word 0xc96ce030
	 .word 0xe19cc580

	 .word 0xc1bcdd40
	 .word 0xc16ce0a0
	 .word 0xe1bcdd40


.global invldic_383
 invldic_383:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_383_lp, %l0, %l2
.align 0x10 
.global invldic_383_lp
invldic_383_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_383_lp; add %l7, 1, %l7


.global invldic_384
 invldic_384:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_384_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 144, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_384_lp
invldic_384_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_384_lp; add %l7, 1, %l7

	 .word 0xedf4e000
	 .word 0xc36cc000
	 .word 0xe1bce100

	 .word 0xf9f4e000
	 .word 0xc76cc000
	 .word 0xe19cd020

	 .word 0xf3f4d020
	 .word 0xf16ce0b0
	 .word 0xe1bce280


.global invldic_385
 invldic_385:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_385_lp, %l0, %l2
.align 0x10 
.global invldic_385_lp
invldic_385_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_385_lp; add %l7, 1, %l7


.global invldic_386
 invldic_386:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_386_lp, %l0, %l2
.align 0x10 
.global invldic_386_lp
invldic_386_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_386_lp; add %l7, 1, %l7


.global invldic_387
 invldic_387:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_387_lp, %l0, %l2
.align 0x10 
.global invldic_387_lp
invldic_387_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_387_lp; add %l7, 1, %l7

	 .word 0xf66ce029
	 .word 0xc16ce0d0
	 .word 0xc1bcdd40

	 .word 0xc11ce010
	 .word 0xc7ece010
	 .word 0xc1bcc480

	 .word 0xc9ece000
	 .word 0xefecc440
	 .word 0xc19ce100


.global invldic_388
 invldic_388:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_388_lp, %l0, %l2
.align 0x10 
.global invldic_388_lp
invldic_388_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_388_lp; add %l7, 1, %l7

	 .word 0xf3e4c580
	 .word 0xc96cc000
	 .word 0xe1bcc580

	 .word 0xe1bcc580
	 .word 0xf9ecc580
	 .word 0xc1bce180


.global invldic_389
 invldic_389:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_389_lp, %l0, %l2
.align 0x10 
.global invldic_389_lp
invldic_389_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_389_lp; add %l7, 1, %l7

	 .word 0xebe4c460
	 .word 0xfb6cc000
	 .word 0xc19ce180


.global invldic_390
 invldic_390:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_390_lp, %l0, %l2
.align 0x10 
.global invldic_390_lp
invldic_390_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_390_lp; add %l7, 1, %l7


.global invldic_391
 invldic_391:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_391_lp, %l0, %l2
.align 0x10 
.global invldic_391_lp
invldic_391_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_391_lp; add %l7, 1, %l7


.global invldic_392
 invldic_392:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_392_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 144, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_392_lp
invldic_392_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_392_lp; add %l7, 1, %l7


.global invldic_393
 invldic_393:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_393_lp, %l0, %l2
.align 0x10 
.global invldic_393_lp
invldic_393_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_393_lp; add %l7, 1, %l7


.global invldic_394
 invldic_394:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_394_lp, %l0, %l2
.align 0x10 
.global invldic_394_lp
invldic_394_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_394_lp; add %l7, 1, %l7

	 .word 0xc1bcc580
	 .word 0xc7ecc580
	 .word 0xc1bce3c0

	 .word 0xf4fce000
	 .word 0xcbece0b0
	 .word 0xe19ce240


.global invldic_395
 invldic_395:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_395_lp, %l0, %l2
.align 0x10 
.global invldic_395_lp
invldic_395_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_395_lp; add %l7, 1, %l7


.global invldic_396
 invldic_396:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_396_lp, %l0, %l2
.align 0x10 
.global invldic_396_lp
invldic_396_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_396_lp; add %l7, 1, %l7


.global invldic_397
 invldic_397:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_397_lp, %l0, %l2
.align 0x10 
.global invldic_397_lp
invldic_397_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_397_lp; add %l7, 1, %l7

	 .word 0xebf4e000
	 .word 0xc16ce0c0
	 .word 0xe19ce280

	 .word 0xf0b4e002
	 .word 0xe36cc000
	 .word 0xc1bcc460


.global invldic_398
 invldic_398:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_398_lp, %l0, %l2
.align 0x10 
.global invldic_398_lp
invldic_398_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_398_lp; add %l7, 1, %l7

	 .word 0xf8ccd120
	 .word 0xc36cc000
	 .word 0xc19ce340

	 .word 0xf2ece02f
	 .word 0xcd6cc000
	 .word 0xe19ce180

	 .word 0xf07cc000
	 .word 0xc9ece070
	 .word 0xc19ce000


.global invldic_399
 invldic_399:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_399_lp, %l0, %l2
.align 0x10 
.global invldic_399_lp
invldic_399_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_399_lp; add %l7, 1, %l7

	 .word 0xdd3cc000
	 .word 0xc7ece060
	 .word 0xe19ce380

	 .word 0xea44e004
	 .word 0xdbece030
	 .word 0xe1bcc460


.global invldic_400
 invldic_400:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_400_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 176, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_400_lp
invldic_400_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_400_lp; add %l7, 1, %l7

	 .word 0xf7e4e000
	 .word 0xed6ce0e0
	 .word 0xc19ce0c0


.global invldic_401
 invldic_401:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_401_lp, %l0, %l2
.align 0x10 
.global invldic_401_lp
invldic_401_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_401_lp; add %l7, 1, %l7

	 .word 0xc1bcd100
	 .word 0xc3ecd100
	 .word 0xe19ce000

	 .word 0xfbecc560
	 .word 0xc96cc000
	 .word 0xc19ce3c0

	 .word 0xeca4c540
	 .word 0xd96cc000
	 .word 0xc1bce000

	 .word 0xf024c000
	 .word 0xcd6cc000
	 .word 0xc19cc580


.global invldic_402
 invldic_402:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_402_lp, %l0, %l2
.align 0x10 
.global invldic_402_lp
invldic_402_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_402_lp; add %l7, 1, %l7


.global invldic_403
 invldic_403:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_403_lp, %l0, %l2
.align 0x10 
.global invldic_403_lp
invldic_403_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_403_lp; add %l7, 1, %l7

	 .word 0xf8fcc460
	 .word 0xc9ecc460
	 .word 0xc19ce240

	 .word 0xec3ce000
	 .word 0xc36ce0d0
	 .word 0xe19ce340


.global invldic_404
 invldic_404:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_404_lp, %l0, %l2
.align 0x10 
.global invldic_404_lp
invldic_404_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_404_lp; add %l7, 1, %l7

	 .word 0xd76ce0e0
	 .word 0xc76cc000
	 .word 0xc19cc580


.global invldic_405
 invldic_405:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_405_lp, %l0, %l2
.align 0x10 
.global invldic_405_lp
invldic_405_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_405_lp; add %l7, 1, %l7


.global invldic_406
 invldic_406:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_406_lp, %l0, %l2
.align 0x10 
.global invldic_406_lp
invldic_406_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_406_lp; add %l7, 1, %l7


.global invldic_407
 invldic_407:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_407_lp, %l0, %l2
.align 0x10 
.global invldic_407_lp
invldic_407_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_407_lp; add %l7, 1, %l7


.global invldic_408
 invldic_408:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_408_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 32, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_408_lp
invldic_408_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_408_lp; add %l7, 1, %l7

	 .word 0xfa4cc000
	 .word 0xf56ce0f0
	 .word 0xc1bcdc60

	 .word 0xc36ce010
	 .word 0xcbece050
	 .word 0xe19cc480


.global invldic_409
 invldic_409:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_409_lp, %l0, %l2
.align 0x10 
.global invldic_409_lp
invldic_409_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_409_lp; add %l7, 1, %l7


.global invldic_410
 invldic_410:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_410_lp, %l0, %l2
.align 0x10 
.global invldic_410_lp
invldic_410_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_410_lp; add %l7, 1, %l7

	 .word 0xe1bce1c0
	 .word 0xc9ecc560
	 .word 0xe1bcc560

	 .word 0xeff4e000
	 .word 0xc96ce000
	 .word 0xe1bcdc60


.global invldic_411
 invldic_411:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_411_lp, %l0, %l2
.align 0x10 
.global invldic_411_lp
invldic_411_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_411_lp; add %l7, 1, %l7


.global invldic_412
 invldic_412:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_412_lp, %l0, %l2
.align 0x10 
.global invldic_412_lp
invldic_412_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_412_lp; add %l7, 1, %l7


.global invldic_413
 invldic_413:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_413_lp, %l0, %l2
.align 0x10 
.global invldic_413_lp
invldic_413_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_413_lp; add %l7, 1, %l7

	 .word 0xe19ce1c0
	 .word 0xc5ece010
	 .word 0xe1bcd020


.global invldic_414
 invldic_414:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_414_lp, %l0, %l2
.align 0x10 
.global invldic_414_lp
invldic_414_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_414_lp; add %l7, 1, %l7

	 .word 0xc53ce020
	 .word 0xd36ce060
	 .word 0xe1bce100

	 .word 0xc19cc560
	 .word 0xf16ce040
	 .word 0xc1bce300

	 .word 0xf6ecdc40
	 .word 0xc56ce0b0
	 .word 0xc1bce1c0


.global invldic_415
 invldic_415:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_415_lp, %l0, %l2
.align 0x10 
.global invldic_415_lp
invldic_415_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_415_lp; add %l7, 1, %l7

	 .word 0x81dcc000
	 .word 0xc5ece020
	 .word 0xc1bcc440


.global invldic_416
 invldic_416:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_416_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 112, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_416_lp
invldic_416_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_416_lp; add %l7, 1, %l7

	 .word 0xebf4e000
	 .word 0xc56ce0b0
	 .word 0xc1bcdd40

	 .word 0xf3f4c560
	 .word 0xc76ce090
	 .word 0xe19ce200


.global invldic_417
 invldic_417:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_417_lp, %l0, %l2
.align 0x10 
.global invldic_417_lp
invldic_417_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_417_lp; add %l7, 1, %l7

	 .word 0xf674c000
	 .word 0xc96cc000
	 .word 0xc19ce140


.global invldic_418
 invldic_418:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_418_lp, %l0, %l2
.align 0x10 
.global invldic_418_lp
invldic_418_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_418_lp; add %l7, 1, %l7

	 .word 0xf2ecd000
	 .word 0xc96ce000
	 .word 0xe1bce200

	 .word 0xfa2ce01d
	 .word 0xc7ecc480
	 .word 0xc1bce340


.global invldic_419
 invldic_419:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_419_lp, %l0, %l2
.align 0x10 
.global invldic_419_lp
invldic_419_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_419_lp; add %l7, 1, %l7


.global invldic_420
 invldic_420:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_420_lp, %l0, %l2
.align 0x10 
.global invldic_420_lp
invldic_420_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_420_lp; add %l7, 1, %l7


.global invldic_421
 invldic_421:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_421_lp, %l0, %l2
.align 0x10 
.global invldic_421_lp
invldic_421_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_421_lp; add %l7, 1, %l7

	 .word 0xf5e4e000
	 .word 0xc5ece0a0
	 .word 0xc1bce140


.global invldic_422
 invldic_422:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_422_lp, %l0, %l2
.align 0x10 
.global invldic_422_lp
invldic_422_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_422_lp; add %l7, 1, %l7

	 .word 0xf1e4e000
	 .word 0xcdece020
	 .word 0xe19ce0c0

	 .word 0x8143e03b
	 .word 0xc56cc000
	 .word 0xe19ce380

	 .word 0xc11ce020
	 .word 0xc96cc000
	 .word 0xc1bcc440

	 .word 0xf0fcc580
	 .word 0xdbece020
	 .word 0xe1bcc580


.global invldic_423
 invldic_423:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_423_lp, %l0, %l2
.align 0x10 
.global invldic_423_lp
invldic_423_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_423_lp; add %l7, 1, %l7

	 .word 0x8143c000
	 .word 0xe7ece0d0
	 .word 0xc19cd020


.global invldic_424
 invldic_424:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_424_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 192, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_424_lp
invldic_424_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_424_lp; add %l7, 1, %l7


.global invldic_425
 invldic_425:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_425_lp, %l0, %l2
.align 0x10 
.global invldic_425_lp
invldic_425_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_425_lp; add %l7, 1, %l7

	 .word 0xecece020
	 .word 0xc9ece010
	 .word 0xc1bce240


.global invldic_426
 invldic_426:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_426_lp, %l0, %l2
.align 0x10 
.global invldic_426_lp
invldic_426_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_426_lp; add %l7, 1, %l7


.global invldic_427
 invldic_427:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_427_lp, %l0, %l2
.align 0x10 
.global invldic_427_lp
invldic_427_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_427_lp; add %l7, 1, %l7

	 .word 0xea7cc000
	 .word 0xfb6cc000
	 .word 0xc1bce140


.global invldic_428
 invldic_428:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_428_lp, %l0, %l2
.align 0x10 
.global invldic_428_lp
invldic_428_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_428_lp; add %l7, 1, %l7

	 .word 0xf6fcdd40
	 .word 0xc56ce0c0
	 .word 0xc1bce300


.global invldic_429
 invldic_429:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_429_lp, %l0, %l2
.align 0x10 
.global invldic_429_lp
invldic_429_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_429_lp; add %l7, 1, %l7


.global invldic_430
 invldic_430:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_430_lp, %l0, %l2
.align 0x10 
.global invldic_430_lp
invldic_430_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_430_lp; add %l7, 1, %l7

	 .word 0xfaccd100
	 .word 0xc56ce050
	 .word 0xc1bce340

	 .word 0xfa7ce004
	 .word 0xc7ece070
	 .word 0xc1bcc440


.global invldic_431
 invldic_431:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_431_lp, %l0, %l2
.align 0x10 
.global invldic_431_lp
invldic_431_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_431_lp; add %l7, 1, %l7


.global invldic_432
 invldic_432:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_432_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 112, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_432_lp
invldic_432_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_432_lp; add %l7, 1, %l7


.global invldic_433
 invldic_433:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_433_lp, %l0, %l2
.align 0x10 
.global invldic_433_lp
invldic_433_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_433_lp; add %l7, 1, %l7


.global invldic_434
 invldic_434:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_434_lp, %l0, %l2
.align 0x10 
.global invldic_434_lp
invldic_434_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_434_lp; add %l7, 1, %l7


.global invldic_435
 invldic_435:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_435_lp, %l0, %l2
.align 0x10 
.global invldic_435_lp
invldic_435_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_435_lp; add %l7, 1, %l7


.global invldic_436
 invldic_436:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_436_lp, %l0, %l2
.align 0x10 
.global invldic_436_lp
invldic_436_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_436_lp; add %l7, 1, %l7


.global invldic_437
 invldic_437:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_437_lp, %l0, %l2
.align 0x10 
.global invldic_437_lp
invldic_437_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_437_lp; add %l7, 1, %l7

	 .word 0x81dcc000
	 .word 0xc9ecd120
	 .word 0xc19cd120


.global invldic_438
 invldic_438:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_438_lp, %l0, %l2
.align 0x10 
.global invldic_438_lp
invldic_438_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_438_lp; add %l7, 1, %l7


.global invldic_439
 invldic_439:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_439_lp, %l0, %l2
.align 0x10 
.global invldic_439_lp
invldic_439_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_439_lp; add %l7, 1, %l7

	 .word 0xdd04c000
	 .word 0xf96ce000
	 .word 0xc1bce200

	 .word 0xee6cc000
	 .word 0xc96cc000
	 .word 0xc1bce1c0

	 .word 0xfa7cc000
	 .word 0xc96ce060
	 .word 0xc19ce340

	 .word 0xf5e4e000
	 .word 0xd9ece0b0
	 .word 0xe1bcdd40


.global invldic_440
 invldic_440:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_440_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 96, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_440_lp
invldic_440_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_440_lp; add %l7, 1, %l7

	 .word 0xeaa4e000
	 .word 0xe16cc000
	 .word 0xe19cdd60

	 .word 0x81dce09a
	 .word 0xc76ce050
	 .word 0xe19ce0c0

	 .word 0xf4fcdc40
	 .word 0xc7ece020
	 .word 0xe19cdc40

	 .word 0x8143c000
	 .word 0xc7ecc540
	 .word 0xe1bcc540


.global invldic_441
 invldic_441:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_441_lp, %l0, %l2
.align 0x10 
.global invldic_441_lp
invldic_441_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_441_lp; add %l7, 1, %l7

	 .word 0xee34c000
	 .word 0xddece000
	 .word 0xc19cd020

	 .word 0xd524e010
	 .word 0xc96cc000
	 .word 0xc19ce280


.global invldic_442
 invldic_442:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_442_lp, %l0, %l2
.align 0x10 
.global invldic_442_lp
invldic_442_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_442_lp; add %l7, 1, %l7


.global invldic_443
 invldic_443:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_443_lp, %l0, %l2
.align 0x10 
.global invldic_443_lp
invldic_443_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_443_lp; add %l7, 1, %l7


.global invldic_444
 invldic_444:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_444_lp, %l0, %l2
.align 0x10 
.global invldic_444_lp
invldic_444_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_444_lp; add %l7, 1, %l7

	 .word 0xc19cc480
	 .word 0xc1ecc480
	 .word 0xe1bcc480

	 .word 0xe1bce380
	 .word 0xc3ece0e0
	 .word 0xc19cdc60

	 .word 0xd704c000
	 .word 0xedecd000
	 .word 0xe19ce280


.global invldic_445
 invldic_445:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_445_lp, %l0, %l2
.align 0x10 
.global invldic_445_lp
invldic_445_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_445_lp; add %l7, 1, %l7


.global invldic_446
 invldic_446:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_446_lp, %l0, %l2
.align 0x10 
.global invldic_446_lp
invldic_446_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_446_lp; add %l7, 1, %l7

	 .word 0xf244c000
	 .word 0xcd6ce050
	 .word 0xc1bcd020

	 .word 0xf9f4d000
	 .word 0xc3ece0f0
	 .word 0xe1bce0c0

	 .word 0x81dcc000
	 .word 0xdb6cc000
	 .word 0xc19ce140

	 .word 0xc13cc000
	 .word 0xc5ece080
	 .word 0xe19cdc60


.global invldic_447
 invldic_447:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_447_lp, %l0, %l2
.align 0x10 
.global invldic_447_lp
invldic_447_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_447_lp; add %l7, 1, %l7

	 .word 0xebe4e000
	 .word 0xf5ece020
	 .word 0xe1bcdd60

	 .word 0xc11ce030
	 .word 0xc96cc000
	 .word 0xc1bcdc60


.global invldic_448
 invldic_448:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_448_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 112, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_448_lp
invldic_448_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_448_lp; add %l7, 1, %l7

	 .word 0xec1cc000
	 .word 0xc7ecdc60
	 .word 0xc1bcdc60


.global invldic_449
 invldic_449:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_449_lp, %l0, %l2
.align 0x10 
.global invldic_449_lp
invldic_449_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_449_lp; add %l7, 1, %l7


.global invldic_450
 invldic_450:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_450_lp, %l0, %l2
.align 0x10 
.global invldic_450_lp
invldic_450_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_450_lp; add %l7, 1, %l7

	 .word 0xc104e026
	 .word 0xc5ecdd60
	 .word 0xc1bcdd60


.global invldic_451
 invldic_451:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_451_lp, %l0, %l2
.align 0x10 
.global invldic_451_lp
invldic_451_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_451_lp; add %l7, 1, %l7

	 .word 0xf874c000
	 .word 0xf1ecdd60
	 .word 0xc1bcdd60

	 .word 0xcd24c000
	 .word 0xc3ecd120
	 .word 0xc19cd120

	 .word 0xe19cc460
	 .word 0xd96ce070
	 .word 0xe1bce100

	 .word 0xf26cc000
	 .word 0xcd6cc000
	 .word 0xe1bce1c0


.global invldic_452
 invldic_452:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_452_lp, %l0, %l2
.align 0x10 
.global invldic_452_lp
invldic_452_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_452_lp; add %l7, 1, %l7


.global invldic_453
 invldic_453:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_453_lp, %l0, %l2
.align 0x10 
.global invldic_453_lp
invldic_453_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_453_lp; add %l7, 1, %l7


.global invldic_454
 invldic_454:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_454_lp, %l0, %l2
.align 0x10 
.global invldic_454_lp
invldic_454_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_454_lp; add %l7, 1, %l7

	 .word 0xf1f4dc40
	 .word 0xc96cc000
	 .word 0xc19ce2c0

	 .word 0xfaccd000
	 .word 0xdfecd000
	 .word 0xe19ce3c0


.global invldic_455
 invldic_455:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_455_lp, %l0, %l2
.align 0x10 
.global invldic_455_lp
invldic_455_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_455_lp; add %l7, 1, %l7


.global invldic_456
 invldic_456:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_456_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 240, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_456_lp
invldic_456_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_456_lp; add %l7, 1, %l7


.global invldic_457
 invldic_457:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_457_lp, %l0, %l2
.align 0x10 
.global invldic_457_lp
invldic_457_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_457_lp; add %l7, 1, %l7

	 .word 0xf634e000
	 .word 0xc3ecdd40
	 .word 0xc1bce340


.global invldic_458
 invldic_458:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_458_lp, %l0, %l2
.align 0x10 
.global invldic_458_lp
invldic_458_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_458_lp; add %l7, 1, %l7

	 .word 0x8143e032
	 .word 0xc96ce0c0
	 .word 0xe19ce3c0

	 .word 0xea44c000
	 .word 0xc3ece040
	 .word 0xe19ce0c0


.global invldic_459
 invldic_459:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_459_lp, %l0, %l2
.align 0x10 
.global invldic_459_lp
invldic_459_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_459_lp; add %l7, 1, %l7


.global invldic_460
 invldic_460:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_460_lp, %l0, %l2
.align 0x10 
.global invldic_460_lp
invldic_460_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_460_lp; add %l7, 1, %l7


.global invldic_461
 invldic_461:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_461_lp, %l0, %l2
.align 0x10 
.global invldic_461_lp
invldic_461_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_461_lp; add %l7, 1, %l7


.global invldic_462
 invldic_462:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_462_lp, %l0, %l2
.align 0x10 
.global invldic_462_lp
invldic_462_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_462_lp; add %l7, 1, %l7


.global invldic_463
 invldic_463:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_463_lp, %l0, %l2
.align 0x10 
.global invldic_463_lp
invldic_463_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_463_lp; add %l7, 1, %l7


.global invldic_464
 invldic_464:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_464_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 176, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_464_lp
invldic_464_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_464_lp; add %l7, 1, %l7


.global invldic_465
 invldic_465:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_465_lp, %l0, %l2
.align 0x10 
.global invldic_465_lp
invldic_465_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_465_lp; add %l7, 1, %l7

	 .word 0xc104e008
	 .word 0xf7ece0a0
	 .word 0xc1bcd020


.global invldic_466
 invldic_466:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_466_lp, %l0, %l2
.align 0x10 
.global invldic_466_lp
invldic_466_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_466_lp; add %l7, 1, %l7

	 .word 0xf7f4dd40
	 .word 0xc16ce080
	 .word 0xc1bce1c0


.global invldic_467
 invldic_467:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_467_lp, %l0, %l2
.align 0x10 
.global invldic_467_lp
invldic_467_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_467_lp; add %l7, 1, %l7


.global invldic_468
 invldic_468:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_468_lp, %l0, %l2
.align 0x10 
.global invldic_468_lp
invldic_468_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_468_lp; add %l7, 1, %l7


.global invldic_469
 invldic_469:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_469_lp, %l0, %l2
.align 0x10 
.global invldic_469_lp
invldic_469_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_469_lp; add %l7, 1, %l7

	 .word 0xeefcd120
	 .word 0xfd6cc000
	 .word 0xe19ce180

	 .word 0xfa04e000
	 .word 0xedecc440
	 .word 0xc19cc440

	 .word 0xe19cc560
	 .word 0xc9ecc560
	 .word 0xc19cc560


.global invldic_470
 invldic_470:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_470_lp, %l0, %l2
.align 0x10 
.global invldic_470_lp
invldic_470_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_470_lp; add %l7, 1, %l7

	 .word 0xf2ecc540
	 .word 0xfb6cc000
	 .word 0xc1bcc540


.global invldic_471
 invldic_471:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_471_lp, %l0, %l2
.align 0x10 
.global invldic_471_lp
invldic_471_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_471_lp; add %l7, 1, %l7


.global invldic_472
 invldic_472:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_472_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 32, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_472_lp
invldic_472_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_472_lp; add %l7, 1, %l7


.global invldic_473
 invldic_473:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_473_lp, %l0, %l2
.align 0x10 
.global invldic_473_lp
invldic_473_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_473_lp; add %l7, 1, %l7


.global invldic_474
 invldic_474:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_474_lp, %l0, %l2
.align 0x10 
.global invldic_474_lp
invldic_474_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_474_lp; add %l7, 1, %l7


.global invldic_475
 invldic_475:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_475_lp, %l0, %l2
.align 0x10 
.global invldic_475_lp
invldic_475_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_475_lp; add %l7, 1, %l7

	 .word 0xf2fce004
	 .word 0xc5ece0c0
	 .word 0xc1bce140


.global invldic_476
 invldic_476:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_476_lp, %l0, %l2
.align 0x10 
.global invldic_476_lp
invldic_476_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_476_lp; add %l7, 1, %l7

	 .word 0x8143c000
	 .word 0xe76cc000
	 .word 0xe1bce200


.global invldic_477
 invldic_477:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_477_lp, %l0, %l2
.align 0x10 
.global invldic_477_lp
invldic_477_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_477_lp; add %l7, 1, %l7


.global invldic_478
 invldic_478:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_478_lp, %l0, %l2
.align 0x10 
.global invldic_478_lp
invldic_478_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_478_lp; add %l7, 1, %l7

	 .word 0xdd3cc000
	 .word 0xc76ce0e0
	 .word 0xc1bcd100


.global invldic_479
 invldic_479:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_479_lp, %l0, %l2
.align 0x10 
.global invldic_479_lp
invldic_479_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_479_lp; add %l7, 1, %l7

	 .word 0xc19cd020
	 .word 0xc56cc000
	 .word 0xc1bce1c0


.global invldic_480
 invldic_480:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_480_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 64, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_480_lp
invldic_480_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_480_lp; add %l7, 1, %l7


.global invldic_481
 invldic_481:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_481_lp, %l0, %l2
.align 0x10 
.global invldic_481_lp
invldic_481_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_481_lp; add %l7, 1, %l7


.global invldic_482
 invldic_482:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_482_lp, %l0, %l2
.align 0x10 
.global invldic_482_lp
invldic_482_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_482_lp; add %l7, 1, %l7

	 .word 0xeadcc480
	 .word 0xdd6cc000
	 .word 0xe1bce380


.global invldic_483
 invldic_483:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_483_lp, %l0, %l2
.align 0x10 
.global invldic_483_lp
invldic_483_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_483_lp; add %l7, 1, %l7


.global invldic_484
 invldic_484:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_484_lp, %l0, %l2
.align 0x10 
.global invldic_484_lp
invldic_484_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_484_lp; add %l7, 1, %l7


.global invldic_485
 invldic_485:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_485_lp, %l0, %l2
.align 0x10 
.global invldic_485_lp
invldic_485_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_485_lp; add %l7, 1, %l7


.global invldic_486
 invldic_486:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_486_lp, %l0, %l2
.align 0x10 
.global invldic_486_lp
invldic_486_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_486_lp; add %l7, 1, %l7


.global invldic_487
 invldic_487:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_487_lp, %l0, %l2
.align 0x10 
.global invldic_487_lp
invldic_487_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_487_lp; add %l7, 1, %l7

	 .word 0xf3e4dd60
	 .word 0xff6ce000
	 .word 0xe19ce280


.global invldic_488
 invldic_488:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_488_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 0, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_488_lp
invldic_488_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_488_lp; add %l7, 1, %l7


.global invldic_489
 invldic_489:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_489_lp, %l0, %l2
.align 0x10 
.global invldic_489_lp
invldic_489_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_489_lp; add %l7, 1, %l7

	 .word 0xec6cc000
	 .word 0xd16cc000
	 .word 0xe1bce3c0


.global invldic_490
 invldic_490:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_490_lp, %l0, %l2
.align 0x10 
.global invldic_490_lp
invldic_490_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_490_lp; add %l7, 1, %l7

	 .word 0xf8a4e004
	 .word 0xc7ece070
	 .word 0xc1bce040

	 .word 0xebf4c540
	 .word 0xd1ecc540
	 .word 0xc1bcc540

	 .word 0xeeecc540
	 .word 0xcdece090
	 .word 0xe1bcc540

	 .word 0xc19ce180
	 .word 0xdf6ce0f0
	 .word 0xe19ce040


.global invldic_491
 invldic_491:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_491_lp, %l0, %l2
.align 0x10 
.global invldic_491_lp
invldic_491_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_491_lp; add %l7, 1, %l7


.global invldic_492
 invldic_492:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_492_lp, %l0, %l2
.align 0x10 
.global invldic_492_lp
invldic_492_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_492_lp; add %l7, 1, %l7


.global invldic_493
 invldic_493:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_493_lp, %l0, %l2
.align 0x10 
.global invldic_493_lp
invldic_493_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_493_lp; add %l7, 1, %l7


.global invldic_494
 invldic_494:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_494_lp, %l0, %l2
.align 0x10 
.global invldic_494_lp
invldic_494_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_494_lp; add %l7, 1, %l7

	 .word 0xc16ce0f0
	 .word 0xc9ece0e0
	 .word 0xe1bcd100

	 .word 0xc19cdc40
	 .word 0xd76ce050
	 .word 0xc19cdc40

	 .word 0xf3f4d120
	 .word 0xc3ecd120
	 .word 0xc19cd120

	 .word 0xf26ce008
	 .word 0xd56cc000
	 .word 0xe1bce280

	 .word 0xf634c000
	 .word 0xc5ecdd60
	 .word 0xe1bcdd60

	 .word 0xfa7ce004
	 .word 0xc96ce050
	 .word 0xc1bcc560


.global invldic_495
 invldic_495:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_495_lp, %l0, %l2
.align 0x10 
.global invldic_495_lp
invldic_495_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_495_lp; add %l7, 1, %l7

	 .word 0xc1bce280
	 .word 0xcf6cc000
	 .word 0xc1bce2c0


.global invldic_496
 invldic_496:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_496_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 160, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_496_lp
invldic_496_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_496_lp; add %l7, 1, %l7


.global invldic_497
 invldic_497:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_497_lp, %l0, %l2
.align 0x10 
.global invldic_497_lp
invldic_497_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_497_lp; add %l7, 1, %l7

	 .word 0xeca4c480
	 .word 0xe5ecc480
	 .word 0xc1bcc480

	 .word 0xc104e012
	 .word 0xc56ce080
	 .word 0xc19cd100


.global invldic_498
 invldic_498:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_498_lp, %l0, %l2
.align 0x10 
.global invldic_498_lp
invldic_498_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_498_lp; add %l7, 1, %l7


.global invldic_499
 invldic_499:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_499_lp, %l0, %l2
.align 0x10 
.global invldic_499_lp
invldic_499_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_499_lp; add %l7, 1, %l7


.global invldic_500
 invldic_500:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_500_lp, %l0, %l2
.align 0x10 
.global invldic_500_lp
invldic_500_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_500_lp; add %l7, 1, %l7

	 .word 0xf08cdd60
	 .word 0xd1ecdd60
	 .word 0xc19cdd60


.global invldic_501
 invldic_501:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_501_lp, %l0, %l2
.align 0x10 
.global invldic_501_lp
invldic_501_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_501_lp; add %l7, 1, %l7

	 .word 0xe19ce380
	 .word 0xf96cc000
	 .word 0xc1bce340

	 .word 0xedf4d100
	 .word 0xc5ece0d0
	 .word 0xe1bcd100


.global invldic_502
 invldic_502:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_502_lp, %l0, %l2
.align 0x10 
.global invldic_502_lp
invldic_502_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_502_lp; add %l7, 1, %l7

	 .word 0xecece020
	 .word 0xc36cc000
	 .word 0xe1bcdd40

	 .word 0xcd3cc000
	 .word 0xc56cc000
	 .word 0xe19ce2c0


.global invldic_503
 invldic_503:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_503_lp, %l0, %l2
.align 0x10 
.global invldic_503_lp
invldic_503_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_503_lp; add %l7, 1, %l7


.global invldic_504
 invldic_504:
	 mov 2, %l6; mov 0, %l7 
	setx invldic_504_lp, %l0, %l2
	setx self_modcode, %l0, %l1
	set 176, %l0; add %l0, %l1, %l1
.align 0x10 
.global invldic_504_lp
invldic_504_lp:
	 nop
	 ld [%l1], %o2; st %o2, [%l2]
	 add %l1, 4, %l1
	 sub %l7, %l6, %o3; brlz %o3, invldic_504_lp; add %l7, 1, %l7

	 .word 0xc19cdd40
	 .word 0xc56cc000
	 .word 0xe19cdd40

	 .word 0xea6ce031
	 .word 0xf76ce030
	 .word 0xe19ce080

	 .word 0xebe4e000
	 .word 0xd96ce070
	 .word 0xc1bcc580

	 .word 0xede4e000
	 .word 0xc1ecc460
	 .word 0xc1bce100


	 ba diag_pass 
	 nop 
diag_pass:
	 ta 0x0
	 nop

diag_fail:
	 ta 0x1 
	 nop
.data
.align 0x2000
.global user_data_start
user_data_start:

.skip 0x800
data0:
	 .word 0x0 
	 .word 0x0 
	.word	0xf12691d5
	.word	0x896c75a0
	.word	0xf43d04c5
	.word	0xfd1996e7
	.word	0xacc2e0a9
	.word	0xe388d86c
	.word	0x1a65710
	.word	0x8c36e6e1
	.word	0x7fc47066
	.word	0x7158f7f7
	.word	0x5740a0e8
	.word	0x9473f13c
	.word	0xdaee0c4a
	.word	0x131bf6da
	.word	0x17ad2a3f
	.word	0x80b55f98
	.word	0x3bad2100
	.word	0x6b1d0dd8
	.word	0x330fa084
	.word	0xd08a9964
	.word	0xa1d9a00e
	.word	0xadb19c43
	.word	0xd24e935
	.word	0xc98664ed
	.word	0x9acc2692
	.word	0x65d5a9e
	.word	0xfa5c09b8
	.word	0xaa921497
	.word	0x89235b2d
	.word	0xae349383

.skip 0x800
data1:
	 .word 0x0 
	 .word 0x0 
	.word	0x30f5386b
	.word	0x55efc469
	.word	0x38acb73e
	.word	0x9eae86c7
	.word	0x8ed86af9
	.word	0x5ee46bce
	.word	0xd4742f52
	.word	0x4a985adb
	.word	0xde15f5ee
	.word	0x384ac799
	.word	0xed416edb
	.word	0x6fb4075
	.word	0x5619118e
	.word	0xe5dc6049
	.word	0x50009b21
	.word	0xc5ceac6e
	.word	0x4fbd57e2
	.word	0x8b0e308e
	.word	0x10ffd176
	.word	0x8e79cbed
	.word	0x2bf59013
	.word	0xc432b00b
	.word	0xf9c9d4ab
	.word	0x3ab596c5
	.word	0x88c35afa
	.word	0x296b465e
	.word	0xb6f99dc9
	.word	0x8b93241b
	.word	0x242494f7
	.word	0x3b0f6a5d

.skip 0x800
data2:
	 .word 0x0 
	 .word 0x0 
	.word	0xf0e9c3fb
	.word	0xb080254c
	.word	0x61948101
	.word	0x54cff1a1
	.word	0x50ddefca
	.word	0x35dab0d
	.word	0xca0c10fd
	.word	0xf4415446
	.word	0x3373cd8d
	.word	0x975b98d2
	.word	0x214ddf54
	.word	0x78dfe8f4
	.word	0x40c331f
	.word	0x768d6a74
	.word	0xb2ffadbe
	.word	0xa34d5d1a
	.word	0x7ab46cd2
	.word	0x2253300d
	.word	0x3fdc7d64
	.word	0x1fb6ed7a
	.word	0xf222e5a2
	.word	0x56fbe426
	.word	0xc4679426
	.word	0xb84822e8
	.word	0xf4d99ead
	.word	0xd1b48014
	.word	0x103a0339
	.word	0xd0861755
	.word	0xdab429e2
	.word	0x2b29729f

.skip 0x800
data3:
	 .word 0x0 
	 .word 0x0 
	.word	0x848982f3
	.word	0x2dab870a
	.word	0xb24e1bf8
	.word	0xe7765ce3
	.word	0x1b20b7ea
	.word	0x2de3232
	.word	0xc70a29a2
	.word	0xef5a397a
	.word	0x29ee353a
	.word	0xae9a5299
	.word	0x5c516400
	.word	0x6d6451db
	.word	0xe3d0d025
	.word	0x893929ba
	.word	0xe4254858
	.word	0xd630a5fc
	.word	0xe29d18e1
	.word	0xcf43eaf6
	.word	0x31969705
	.word	0xeb10aa3e
	.word	0xa9c10cad
	.word	0xd5948621
	.word	0x4a5e25af
	.word	0x24e77f8b
	.word	0xf9a85525
	.word	0xd55a1643
	.word	0x54f420bc
	.word	0xe7cf09b7
	.word	0x7b54a8d8
	.word	0x432ef89c

.skip 0x800
data4:
	 .word 0x0 
	 .word 0x0 
	.word	0x35557006
	.word	0x898d882f
	.word	0x16c32117
	.word	0x9acacfe8
	.word	0x316e32cd
	.word	0xdb3994d0
	.word	0x96f0990d
	.word	0x20baf7e3
	.word	0x1a1b86ee
	.word	0xf3e4ad17
	.word	0xd0dc6a16
	.word	0x69302d0f
	.word	0x16260f55
	.word	0x3d02a97b
	.word	0xa90a194c
	.word	0x8e986cb3
	.word	0x1cb9edaf
	.word	0xabc6c716
	.word	0x31f7ca5f
	.word	0x48a85127
	.word	0x33f82364
	.word	0xfb15278a
	.word	0xef088ba6
	.word	0x64e76e4f
	.word	0xa1888dc3
	.word	0x1a31eb23
	.word	0x97becf7a
	.word	0x21077265
	.word	0xd5d2f17f
	.word	0xbb454937

.skip 0x800
data5:
	 .word 0x0 
	 .word 0x0 
	.word	0xa814a6c1
	.word	0x3d860efa
	.word	0x19f8c95a
	.word	0x7c5e4ad5
	.word	0x918490c8
	.word	0x3895ee3e
	.word	0x410cc20
	.word	0xf4140b9d
	.word	0x862ef455
	.word	0x6e4b387e
	.word	0xb7c05dd5
	.word	0x827fa4ec
	.word	0xf9b595fc
	.word	0xfcc6dee
	.word	0xc25e6031
	.word	0x1647273d
	.word	0x3279fb2
	.word	0x381098a8
	.word	0x648e164c
	.word	0xae1445ca
	.word	0x8dee0d9e
	.word	0x55c01af4
	.word	0xbef80f95
	.word	0xb7579879
	.word	0x96519436
	.word	0xaf5d9dc9
	.word	0x37b24e08
	.word	0x1de397f6
	.word	0xb630538a
	.word	0xb530e393

.skip 0x800
data6:
	 .word 0x0 
	 .word 0x0 
	.word	0x99481b9f
	.word	0xeaf8b81b
	.word	0xc90aebdb
	.word	0xebc58336
	.word	0xa6654309
	.word	0x580e4498
	.word	0xf5c770
	.word	0x866bcf53
	.word	0xdd2f9f99
	.word	0xc039e3d0
	.word	0x1174ada8
	.word	0xdb4a6dc9
	.word	0xd6953880
	.word	0x8cd1e400
	.word	0x1713f352
	.word	0x673637f
	.word	0x6f845b3f
	.word	0x2504b6a6
	.word	0x2bf3dc3b
	.word	0xaf57985f
	.word	0xcf666956
	.word	0xbee23e1f
	.word	0x8fb00208
	.word	0x902017a5
	.word	0x6f8d4d41
	.word	0x48f9d192
	.word	0x6555d446
	.word	0x39249059
	.word	0xbdcecaa4
	.word	0x387a1b0d

.skip 0x800
data7:
	 .word 0x0 
	 .word 0x0 
	.word	0x19ba85bf
	.word	0x782ada19
	.word	0x80881dc4
	.word	0xf6ee33ec
	.word	0xe8b1fb0e
	.word	0xb393821a
	.word	0x26f79e39
	.word	0xb685a381
	.word	0xe5ad8e75
	.word	0x9953a471
	.word	0x58158e2
	.word	0x428b23f1
	.word	0xad62bcee
	.word	0x68dc958f
	.word	0xad4ed517
	.word	0xbd88515c
	.word	0x17871080
	.word	0x5216200a
	.word	0x19097925
	.word	0x55d2a740
	.word	0x12afdbd3
	.word	0x5a985aa2
	.word	0x7241f7
	.word	0x9e20701e
	.word	0x4e399b04
	.word	0xb19e5a81
	.word	0xf190c20f
	.word	0x208a8b5e
	.word	0x90040dbd
	.word	0x92fb45c5

.align 0x2000
.global self_modcode 
self_modcode:
	 .word 0xe19ce080
	 .word 0xc1bcdf00
	 .word 0xe1bcdf20
	 .word 0xe1bcdf00
	 .word 0xc1bcdf00
	 .word 0xe19ce300
	 .word 0xc1bce040
	 .word 0xc19ce3c0
	 .word 0xe19cdf00
	 .word 0xc19ce140
	 .word 0xe1bce140
	 .word 0xc1bce340
	 .word 0xe1bce000
	 .word 0xe1bce1c0
	 .word 0xc1bce300
	 .word 0xe1bcdf00
	 .word 0xe1bce200
	 .word 0xc1bcdf00
	 .word 0xe19ce380
	 .word 0xc1bcdf20
	 .word 0xc19ce300
	 .word 0xc19ce1c0
	 .word 0xe19ce180
	 .word 0xc19ce180
	 .word 0xc19ce200
	 .word 0xc19cde20
	 .word 0xe1bcde20
	 .word 0xe1bcdf00
	 .word 0xe19ce040
	 .word 0xc19ce340
	 .word 0xe19cdf20
	 .word 0xc1bcdf20
	 .word 0xe19ce100
	 .word 0xc1bcde20
	 .word 0xe19cdf20
	 .word 0xe1bce100
	 .word 0xe19ce3c0
	 .word 0xc19cdf20
	 .word 0xc19ce100
	 .word 0xe1bce1c0
	 .word 0xc19ce380
	 .word 0xe19ce100
	 .word 0xe19cde00
	 .word 0xe19ce380
	 .word 0xe19ce180
	 .word 0xe19cde00
	 .word 0xe19cdf00
	 .word 0xc1bce0c0
	 .word 0xe1bcdf20
	 .word 0xc1bce040
	 .word 0xc19cdf00
	 .word 0xe1bcdf20
	 .word 0xe1bce0c0
	 .word 0xe1bce340
	 .word 0xe1bcdf20
	 .word 0xe1bce180
	 .word 0xe19cde00
	 .word 0xc19ce0c0
	 .word 0xc19cdf20
	 .word 0xe1bce100
	 .word 0xe19cdf20
	 .word 0xe1bcde00
	 .word 0xc19cdf20
	 .word 0xe19cdf00
	 .word 0xc1bce180
	 .word 0xc19cde00
	 .word 0xe1bcdf00
	 .word 0xe1bce340
	 .word 0xe19ce3c0
	 .word 0xe19ce340
	 .word 0xe1bce040
	 .word 0xe19ce040
	 .word 0xe19cdf00
	 .word 0xc19cdf00
	 .word 0xc1bcdf00
	 .word 0xe19cdf00
	 .word 0xc19ce380
	 .word 0xe1bcdf20
	 .word 0xe19cde00
	 .word 0xc1bce240
	 .word 0xc19cdf00
	 .word 0xc1bcdf20
	 .word 0xe19ce2c0
	 .word 0xc1bce000
	 .word 0xc19ce280
	 .word 0xc1bcde20
	 .word 0xc19cdf20
	 .word 0xe1bcdf20
	 .word 0xe19cdf20
	 .word 0xc1bce300
	 .word 0xc1bcdf20
	 .word 0xc19cdf20
	 .word 0xe19ce080
	 .word 0xc1bce180
	 .word 0xe19cdf20
	 .word 0xc19ce200
	 .word 0xe19ce100
	 .word 0xe1bcde20
	 .word 0xe1bce000
	 .word 0xe1bcdf00
	 .word 0xe1bce3c0
	 .word 0xe19cdf00
	 .word 0xe1bce080
	 .word 0xc1bcde00
	 .word 0xe19cdf00
	 .word 0xe19cde20
	 .word 0xc1bcdf20
	 .word 0xe19cde00
	 .word 0xe1bce180
	 .word 0xc1bce0c0
	 .word 0xc19ce040
	 .word 0xe1bce1c0
	 .word 0xe19ce1c0
	 .word 0xe1bcde20
	 .word 0xc19cde20
	 .word 0xc1bcdf00
	 .word 0xe1bcde20
	 .word 0xe19cdf20
	 .word 0xe1bcde00
	 .word 0xc19ce3c0
	 .word 0xe1bce140
	 .word 0xe1bce280
	 .word 0xe1bcde20
	 .word 0xc1bce0c0
	 .word 0xe19ce200
	 .word 0xe1bcdf20
	 .word 0xe1bce040
	 .word 0xc19ce200
	 .word 0xe19ce000
	 .word 0xe19ce3c0
	 .word 0xe19ce1c0
	 .word 0xc1bcdf00
	 .word 0xe1bcde20
	 .word 0xe1bce0c0
	 .word 0xc19cdf20
	 .word 0xe1bce040
	 .word 0xc1bcdf00
	 .word 0xc1bce300
	 .word 0xe19ce100
	 .word 0xc1bcde20
	 .word 0xe1bce180
	 .word 0xe19ce300
	 .word 0xe1bce340
	 .word 0xc1bcde20
	 .word 0xc1bce180
	 .word 0xe1bcde00
	 .word 0xc1bce2c0
	 .word 0xc1bce040
	 .word 0xc19cde00
	 .word 0xe1bcdf20
	 .word 0xe19cdf00
	 .word 0xc1bcdf20
	 .word 0xc1bce000
	 .word 0xe19cdf00
	 .word 0xc19ce280
	 .word 0xe1bce040
	 .word 0xc1bce100
	 .word 0xe19ce080
	 .word 0xe19ce240
	 .word 0xe1bcde00
	 .word 0xc19cde00
	 .word 0xc1bce180
	 .word 0xc19ce3c0
	 .word 0xc1bce180
	 .word 0xc19ce300
	 .word 0xc19cde00
	 .word 0xc19ce1c0
	 .word 0xc19ce040
	 .word 0xc19cde00
	 .word 0xc19ce000
	 .word 0xe19ce000
	 .word 0xc19ce140
	 .word 0xc19ce1c0
	 .word 0xe1bce3c0
	 .word 0xc1bce0c0
	 .word 0xe19cde00
	 .word 0xc1bce180
	 .word 0xe1bce180
	 .word 0xc19ce380
	 .word 0xe1bcdf00
	 .word 0xc1bce340
	 .word 0xe1bce280
	 .word 0xe19ce040
	 .word 0xc19cdf00
	 .word 0xe19cde20
	 .word 0xc19ce200
	 .word 0xc19ce140
	 .word 0xe1bcde00
	 .word 0xe19ce2c0
	 .word 0xc19ce180
	 .word 0xe1bce000
	 .word 0xe1bcde00
	 .word 0xe19cde20
	 .word 0xe1bcdf20
	 .word 0xe1bce1c0
	 .word 0xe19cde00
	 .word 0xe1bcde20
	 .word 0xe1bcde20
	 .word 0xc19ce140
	 .word 0xe19ce100
	 .word 0xe19ce140
	 .word 0xc19cdf20
	 .word 0xc1bcdf20
	 .word 0xc1bcdf00
	 .word 0xc19cdf00
	 .word 0xc19cdf00
	 .word 0xe19cdf20
	 .word 0xc1bce2c0
	 .word 0xc1bce380
	 .word 0xc1bcde20
	 .word 0xe19ce1c0
	 .word 0xe1bcde20
	 .word 0xc1bcdf20
	 .word 0xe1bcdf20
	 .word 0xc19cdf00
	 .word 0xc1bcde00
	 .word 0xe1bcde20
	 .word 0xc19cde00
	 .word 0xc1bcdf00
	 .word 0xe1bce3c0
	 .word 0xc19ce100
	 .word 0xe19cde20
	 .word 0xc1bcde00
	 .word 0xc19ce3c0
	 .word 0xe19ce180
	 .word 0xe19ce380
	 .word 0xe1bce300
	 .word 0xe1bce200
	 .word 0xc19ce340
	 .word 0xe1bce3c0
	 .word 0xc1bcde20
	 .word 0xe1bcde20
	 .word 0xe19ce0c0
	 .word 0xc1bcde20
	 .word 0xe19cde20
	 .word 0xe19ce200
	 .word 0xe19ce3c0
	 .word 0xe19ce080
	 .word 0xc19cde20
	 .word 0xc19ce300
	 .word 0xe19ce240
	 .word 0xc19ce240
	 .word 0xe19cde20
	 .word 0xe1bcde00
	 .word 0xc19ce300
	 .word 0xe19cde00
	 .word 0xc1bce080
	 .word 0xe1bcde00
	 .word 0xe19ce000
	 .word 0xc19ce200
	 .word 0xc19ce3c0
	 .word 0xc1bce340
	 .word 0xc19cdf20
	 .word 0xe1bcdf00
	 .word 0xc19ce3c0
	 .word 0xe19ce140
	 .word 0xc19cdf20
	 .word 0xc1bcde00
	 .word 0xc19ce200
	 .word 0xe1bcde20
	 .word 0xe19ce0c0
	 .word 0xc1bce040
	 .word 0xc1bcdf20
	 .word 0xe19ce280
	 .word 0xc1bcde20
	 .word 0xc1bcde20
	 .word 0xe1bce340
	 .word 0xe1bcde00
	 .word 0xc19ce040
	 .word 0xe19cde20
	 .word 0xe1bce180
	 .word 0xe19ce1c0
	 .word 0xe19ce380
	 .word 0xe1bcde00
	 .word 0xe19ce000
	 .word 0xc1bcde20
	 .word 0xc1bce1c0
	 .word 0xc19cde00
	 .word 0xe1bce040
	 .word 0xc19cde20
	 .word 0xe19cde20
	 .word 0xe19cde00
	 .word 0xe19ce0c0
	 .word 0xe1bcdf00
	 .word 0xe1bcde20
	 .word 0xe1bce1c0
	 .word 0xe19cdf20
	 .word 0xe19ce3c0
	 .word 0xe19ce000
	 .word 0xc1bce000
	 .word 0xe19cde00
	 .word 0xe1bce2c0
	 .word 0xe19cdf00
	 .word 0xc1bce040
	 .word 0xc1bcde00
	 .word 0xc19ce140
	 .word 0xe19cdf20
	 .word 0xe1bcdf00
	 .word 0xe1bce180
	 .word 0xc1bcde20
	 .word 0xc1bcdf20
	 .word 0xc19ce2c0
	 .word 0xc1bcde20
	 .word 0xc1bcdf20
	 .word 0xc19cdf00
	 .word 0xe19ce140
	 .word 0xc19ce000
	 .word 0xc19ce340
	 .word 0xc19ce280
	 .word 0xe19cde00
	 .word 0xe1bcde00
	 .word 0xe19cdf00
	 .word 0xc1bce340
	 .word 0xe1bcdf00
	 .word 0xe19ce200
	 .word 0xe19cdf20
	 .word 0xc1bcde20
	 .word 0xe1bce300
	 .word 0xc1bce380
	 .word 0xe1bce3c0
	 .word 0xe19cdf00
	 .word 0xc1bce3c0
	 .word 0xc19cde20
	 .word 0xe19cde00
	 .word 0xc1bce380
	 .word 0xe1bce200
	 .word 0xc19cdf20
	 .word 0xe19cdf00
	 .word 0xc1bce1c0
	 .word 0xc19ce2c0
	 .word 0xe19ce200
	 .word 0xe1bcdf00
	 .word 0xc1bce3c0
	 .word 0xc1bce300
	 .word 0xc1bcde00
	 .word 0xc19cdf00
	 .word 0xe1bcdf00
	 .word 0xe19ce000
	 .word 0xc1bce340
	 .word 0xe19cdf00
	 .word 0xe19ce200
	 .word 0xe1bce000
	 .word 0xc1bce340
	 .word 0xc1bcdf00
	 .word 0xc19cde20
	 .word 0xc19cde20
	 .word 0xc1bcde00
	 .word 0xe19ce280
	 .word 0xe19cdf20
	 .word 0xe19ce2c0
	 .word 0xc1bcdf00
	 .word 0xc1bce140
	 .word 0xc19cdf20
	 .word 0xc19ce280
	 .word 0xc19ce3c0
	 .word 0xc1bcde20
	 .word 0xc1bcdf00
	 .word 0xe19cdf00
	 .word 0xc19ce240
	 .word 0xe19cde00
	 .word 0xe1bce100
	 .word 0xc1bcde00
	 .word 0xe19cde20
	 .word 0xc19ce240
	 .word 0xc1bce180
	 .word 0xc1bcdf00
	 .word 0xc19ce100
	 .word 0xe1bce140
	 .word 0xe19ce040
	 .word 0xe1bcdf20
	 .word 0xc19cde00
	 .word 0xc1bce280
	 .word 0xc19ce040
	 .word 0xe19ce040
	 .word 0xe19cde20
	 .word 0xc1bcdf20
	 .word 0xe1bce3c0
	 .word 0xe19ce3c0
	 .word 0xe19ce3c0
	 .word 0xe19ce2c0
	 .word 0xc19cde20
	 .word 0xc1bcdf00
	 .word 0xc1bce180
	 .word 0xe1bcdf20
	 .word 0xc19ce300
	 .word 0xc19ce340
	 .word 0xc1bce180
	 .word 0xe19cde00
	 .word 0xc19ce300
	 .word 0xc1bce040
	 .word 0xc19cde20
	 .word 0xe19cdf00
	 .word 0xc1bce280
	 .word 0xc1bce000
	 .word 0xe1bce300
	 .word 0xe19cdf20
	 .word 0xe19cde00
	 .word 0xc19cdf20
	 .word 0xe1bcde00
	 .word 0xc1bcde20
	 .word 0xe1bce2c0
	 .word 0xe19ce100
	 .word 0xc1bcdf20
	 .word 0xe1bce0c0
	 .word 0xc19ce000
	 .word 0xe19cdf00
	 .word 0xc19cde20
	 .word 0xc1bce000
	 .word 0xc19ce080
	 .word 0xc19ce040
	 .word 0xc1bce380
	 .word 0xc19ce200
	 .word 0xc19cdf20
	 .word 0xe19ce240
	 .word 0xe19cde00
	 .word 0xe1bce340
	 .word 0xc19cde00
	 .word 0xe1bcde00
	 .word 0xc19ce240
	 .word 0xc1bce3c0
	 .word 0xc19ce3c0
	 .word 0xc1bcde20
	 .word 0xe1bce2c0
	 .word 0xe1bce1c0
	 .word 0xe1bcde00
	 .word 0xe19ce280
	 .word 0xc1bce180
	 .word 0xe1bce3c0
	 .word 0xe19ce0c0
	 .word 0xc1bce000
	 .word 0xe19cdf20
	 .word 0xc19ce300
	 .word 0xe19ce040
	 .word 0xe19ce0c0
	 .word 0xc19ce000
	 .word 0xe1bce340
	 .word 0xe19cde20
	 .word 0xc19ce0c0
	 .word 0xe19cde20
	 .word 0xc19ce240
	 .word 0xc1bce240
	 .word 0xc19ce280
	 .word 0xe19cde00
	 .word 0xe1bcde00
	 .word 0xc1bcdf00
	 .word 0xe1bcdf00
	 .word 0xc19ce380
	 .word 0xc19ce180
	 .word 0xe19cde20
	 .word 0xe1bce380
	 .word 0xe1bcde20
	 .word 0xc1bcdf20
	 .word 0xc1bce080
	 .word 0xe1bcdf00
	 .word 0xe1bcdf20
	 .word 0xe19ce380
	 .word 0xe19cde00
	 .word 0xc19ce000
	 .word 0xc1bce3c0
	 .word 0xc19cde20
	 .word 0xc19cdf20
	 .word 0xe19cdf00
	 .word 0xc1bcdf00
	 .word 0xc1bce280
	 .word 0xc19cdf20
	 .word 0xc19ce180
	 .word 0xc19ce200
	 .word 0xe1bce0c0
	 .word 0xc19cde00
	 .word 0xc1bcdf20
	 .word 0xe19cde20
	 .word 0xe19ce2c0
	 .word 0xc1bcde20
	 .word 0xe1bce140
	 .word 0xe1bce300
	 .word 0xc1bce100
	 .word 0xe1bcde20
	 .word 0xe19ce340
	 .word 0xe1bce100
	 .word 0xe1bcdf00
	 .word 0xe1bcdf00
	 .word 0xe1bce240
	 .word 0xe1bcdf20
	 .word 0xe19cde00
	 .word 0xe19ce040
	 .word 0xc1bcdf00
	 .word 0xc1bcdf00
	 .word 0xc19cdf20
	 .word 0xe1bce140
	 .word 0xc1bcdf20
	 .word 0xc19cdf20
	 .word 0xe19ce2c0
	 .word 0xe1bce040
	 .word 0xc1bcdf20
	 .word 0xe1bce340
	 .word 0xe19cde20
	 .word 0xc19cde00
	 .word 0xc1bcde00
	 .word 0xc1bcde20
	 .word 0xe19cdf20
	 .word 0xe19ce040
	 .word 0xe1bcdf00
	 .word 0xc19cde20
	 .word 0xe1bce280
	 .word 0xc1bce080
	 .word 0xe1bce380
	 .word 0xe1bce080
	 .word 0xe19cdf20
	 .word 0xc1bce180
	 .word 0xe1bcdf20
	 .word 0xe19ce200
	 .word 0xe19ce140
	 .word 0xe19cde20
	 .word 0xc19cdf20
	 .word 0xe1bce240
	 .word 0xe1bce080
	 .word 0xc19ce240
	 .word 0xc1bcde20
	 .word 0xc19ce0c0
	 .word 0xc1bce3c0
	 .word 0xe1bcdf20
	 .word 0xc1bcde00
	 .word 0xc19cde00
	 .word 0xc1bcde00
	 .word 0xe1bcdf00
	 .word 0xe1bcde00
	 .word 0xc19ce240
	 .word 0xc19ce180
	 .word 0xe1bcde00
	 .word 0xe1bcdf00
	 .word 0xc19ce2c0
	 .word 0xc19cdf00
	 .word 0xc19ce040
	 .word 0xc19ce040
	 .word 0xc1bcdf00
	 .word 0xc19cde00
	 .word 0xc19cdf00
	 .word 0xe1bcde20
	 .word 0xe19cdf00
	 .word 0xc19cde00
	 .word 0xe1bcde20
	 .word 0xc19cdf20
	 .word 0xc19ce300
	 .word 0xc1bcdf20
	 .word 0xc19cde00
	 .word 0xe1bcdf00
	 .word 0xc19cdf00
	 .word 0xc1bce180
	 .word 0xc19cde00
	 .word 0xe1bce340
	 .word 0xc19ce2c0
	 .word 0xe1bcde20
	 .word 0xc1bce1c0
	 .word 0xc19ce200
	 .word 0xc1bce000
	 .word 0xc19ce1c0
	 .word 0xe19ce3c0
	 .word 0xe19ce3c0
	 .word 0xe1bce1c0
	 .word 0xc1bce080
	 .word 0xc19cdf00
	 .word 0xe1bce300
	 .word 0xe19ce180
	 .word 0xe1bcde20
	 .word 0xc19cdf20
	 .word 0xc1bce000
	 .word 0xe1bce100
	 .word 0xc1bce180
	 .word 0xc1bcdf00
	 .word 0xc19cde20
	 .word 0xc19cdf20
	 .word 0xc19cdf00
	 .word 0xe1bce200
	 .word 0xe19ce080
	 .word 0xe19cdf20
	 .word 0xc19ce240
	 .word 0xc1bcde20
	 .word 0xe1bcdf20
	 .word 0xe19ce300
	 .word 0xe19ce200
	 .word 0xc1bce300
	 .word 0xc19ce0c0
	 .word 0xe19cde20
	 .word 0xe1bce140
	 .word 0xc19ce200
	 .word 0xc1bce240
	 .word 0xe19cdf20
	 .word 0xe19ce3c0
	 .word 0xe1bce380
	 .word 0xc1bcde00
	 .word 0xe1bce1c0
	 .word 0xc19cdf00
	 .word 0xc19cde20
	 .word 0xe19ce0c0
	 .word 0xc1bcdf20
	 .word 0xc19ce040
	 .word 0xe1bce100
	 .word 0xc19ce340
	 .word 0xe19cde20
	 .word 0xc1bcdf20
	 .word 0xe19cde00
	 .word 0xe19cde00
	 .word 0xe19ce2c0
	 .word 0xc19cde00
	 .word 0xe19cdf00
	 .word 0xe19ce180
	 .word 0xe19cde20
	 .word 0xe1bce080
	 .word 0xe19ce040
	 .word 0xe19ce0c0
	 .word 0xe1bcde20
	 .word 0xe1bce000
	 .word 0xc19ce1c0
	 .word 0xc19ce100
	 .word 0xe19cdf20
	 .word 0xc19cdf20
	 .word 0xc1bce340
	 .word 0xe19cdf20
	 .word 0xc19ce280
	 .word 0xc1bce000
	 .word 0xe19cde00
	 .word 0xe1bce1c0
	 .word 0xe19cdf00
	 .word 0xc19cde20
	 .word 0xc19ce100
	 .word 0xe19ce200
	 .word 0xe19cdf00
	 .word 0xe1bcdf00
	 .word 0xe19ce280
	 .word 0xe1bcdf20
	 .word 0xe19ce340
	 .word 0xc19cdf20
	 .word 0xe1bce200
	 .word 0xe1bcdf00
	 .word 0xe1bce380
	 .word 0xe19ce0c0
	 .word 0xc19cde20
	 .word 0xe1bce0c0
	 .word 0xe19cdf00
	 .word 0xe19ce180
	 .word 0xe1bcde00
	 .word 0xe19cde00
	 .word 0xe19ce100
	 .word 0xe1bce1c0
	 .word 0xe1bcdf20
	 .word 0xe1bce240
	 .word 0xe19cdf00
	 .word 0xc1bce1c0
	 .word 0xc19ce3c0
	 .word 0xc19cdf00
	 .word 0xc1bce300
	 .word 0xc1bce1c0
	 .word 0xc19cdf20
	 .word 0xe1bcdf20
	 .word 0xe1bce380
	 .word 0xe19ce240
	 .word 0xe19cde20
	 .word 0xe1bcdf00
	 .word 0xe19ce3c0
	 .word 0xe1bcdf20
	 .word 0xc1bcde20
	 .word 0xc1bce000
	 .word 0xe19cdf00
	 .word 0xe19cdf20
	 .word 0xc1bce000
	 .word 0xe19cdf20
	 .word 0xe19cde00
	 .word 0xc19ce280
	 .word 0xe19cde20
	 .word 0xc19ce0c0
	 .word 0xe1bcde00
	 .word 0xe1bcde20
	 .word 0xe1bce2c0
	 .word 0xe1bce180
	 .word 0xc1bce240
	 .word 0xe1bce180
	 .word 0xe19ce000
	 .word 0xc19ce100
	 .word 0xc1bce3c0
	 .word 0xe1bcdf20
	 .word 0xc19cdf00
	 .word 0xe1bcde00
	 .word 0xe19cde20
	 .word 0xc19cde00
	 .word 0xc1bcdf20
	 .word 0xc1bce000
	 .word 0xe19cde00
	 .word 0xc19ce200
	 .word 0xc19ce340
	 .word 0xe19ce180
	 .word 0xe1bce000
	 .word 0xc19ce380
	 .word 0xe1bce180
	 .word 0xe19ce000
	 .word 0xc19ce100
	 .word 0xc19cdf00
	 .word 0xe1bce100
	 .word 0xe19cde00
	 .word 0xc19cdf20
	 .word 0xe19cde20
	 .word 0xc1bcdf00
	 .word 0xc1bce180
	 .word 0xe19ce3c0
	 .word 0xe1bcdf20
	 .word 0xe1bce1c0
	 .word 0xc1bce080
	 .word 0xc19ce380
	 .word 0xe19cdf20
	 .word 0xe19cde20
	 .word 0xe1bcde00
	 .word 0xc19cdf20
	 .word 0xc1bcdf00
	 .word 0xe1bcdf00
	 .word 0xc1bcde20
	 .word 0xe1bce080
	 .word 0xe19ce380
	 .word 0xe19ce300
	 .word 0xe19cde20
	 .word 0xc19cdf00
	 .word 0xe19cdf20
	 .word 0xe19cde00
	 .word 0xe1bce180
	 .word 0xc1bcdf20
	 .word 0xc19ce100
	 .word 0xe19cde00
	 .word 0xe1bce380
	 .word 0xc1bcdf20
	 .word 0xe19ce000
	 .word 0xe1bcdf00
	 .word 0xe19ce000
	 .word 0xc1bce340
	 .word 0xe19cde20
	 .word 0xc1bcde00
	 .word 0xc1bce300
	 .word 0xc1bcde20
	 .word 0xe19ce1c0
	 .word 0xe19cdf20
	 .word 0xe1bce200
	 .word 0xc19cde00
	 .word 0xc1bce140
	 .word 0xe1bcde20
	 .word 0xe19ce240
	 .word 0xc1bce240
	 .word 0xe1bcde20
	 .word 0xc19ce100
	 .word 0xc1bcdf20
	 .word 0xc19cde20
	 .word 0xc19ce180
	 .word 0xe19cdf00
	 .word 0xc1bce2c0
	 .word 0xc1bce240
	 .word 0xe19cde00
	 .word 0xe1bce180
	 .word 0xe19ce280
	 .word 0xc1bce1c0
	 .word 0xc1bcde20
	 .word 0xc19cde20
	 .word 0xe1bcde00
	 .word 0xe1bcdf20
	 .word 0xc19cde00
	 .word 0xc1bcdf00
	 .word 0xe19ce100
	 .word 0xe1bce1c0
	 .word 0xe19ce340
	 .word 0xe19cde00
	 .word 0xc19cde00
	 .word 0xc1bce180
	 .word 0xe1bcdf20
	 .word 0xc1bcde00
	 .word 0xc1bce300
	 .word 0xe1bce380
	 .word 0xe1bce080
	 .word 0xe1bce1c0
	 .word 0xe1bce380
	 .word 0xe19cdf00
	 .word 0xe19ce040
	 .word 0xe1bce340
	 .word 0xe1bce140
	 .word 0xc19cde00
	 .word 0xe1bcde20
	 .word 0xc1bce280
	 .word 0xe1bcdf20
	 .word 0xe1bcde20
	 .word 0xc19cdf20
	 .word 0xc19cdf20
	 .word 0xc19cdf20
	 .word 0xc19cde20
	 .word 0xe19cde20
	 .word 0xe19ce080
	 .word 0xc19ce3c0
	 .word 0xe1bce200
	 .word 0xe1bcde20
	 .word 0xe1bce2c0
	 .word 0xc19ce200
	 .word 0xc19ce200
	 .word 0xe19ce340
	 .word 0xe19ce3c0
	 .word 0xc19ce180
	 .word 0xc1bce280
	 .word 0xc1bcdf20
	 .word 0xc1bcde00
	 .word 0xe19ce1c0
	 .word 0xc1bce340
	 .word 0xe1bcde20
	 .word 0xe1bce0c0
	 .word 0xc1bce240
	 .word 0xe19ce280
	 .word 0xc1bcdf20
	 .word 0xe19ce080
	 .word 0xc1bce380
	 .word 0xc19ce000
	 .word 0xe1bce200
	 .word 0xe1bcdf20
	 .word 0xe1bce240
	 .word 0xe19ce280
	 .word 0xc19cdf20
	 .word 0xe19ce140
	 .word 0xc1bcdf00
	 .word 0xe1bcde00
	 .word 0xc1bce300
	 .word 0xc1bcde20
	 .word 0xe1bcde20
	 .word 0xe19cde20
	 .word 0xc19ce0c0
	 .word 0xe19ce240
	 .word 0xc19cde00
	 .word 0xc1bce040
	 .word 0xc19cde20
	 .word 0xe19ce2c0
	 .word 0xc19cdf00
	 .word 0xe1bcdf20
	 .word 0xe1bce300
	 .word 0xe1bce380
	 .word 0xe1bcde20
	 .word 0xc1bcdf20
	 .word 0xe19ce000
	 .word 0xe1bcdf20
	 .word 0xc1bcdf20
	 .word 0xc19ce280
	 .word 0xc1bcdf00
	 .word 0xe19cde20
	 .word 0xc19ce200
	 .word 0xc1bcdf20
	 .word 0xc1bcdf20
	 .word 0xc19cde20
	 .word 0xe19cde00
	 .word 0xc19ce140
	 .word 0xe1bce040
	 .word 0xe1bce340
	 .word 0xc1bcde20
	 .word 0xe19ce080
	 .word 0xe1bce0c0
	 .word 0xe19cdf00
	 .word 0xe1bcdf00
	 .word 0xe19cde00
	 .word 0xc19ce040
	 .word 0xc19cde20
	 .word 0xc19ce200
	 .word 0xc1bcdf00
	 .word 0xe1bce340
	 .word 0xc1bce0c0
	 .word 0xc1bce2c0
	 .word 0xc1bcdf00
	 .word 0xe19cde00
	 .word 0xe1bcdf00
	 .word 0xe19cdf00
	 .word 0xe1bcdf00
	 .word 0xc19ce1c0
	 .word 0xc1bcdf20
	 .word 0xe19cde00
	 .word 0xc1bce000
	 .word 0xc19ce200
	 .word 0xe19cde20
	 .word 0xc1bcdf00
	 .word 0xe19cdf00
	 .word 0xe19cde20
	 .word 0xc1bcdf00
	 .word 0xc1bcdf20
	 .word 0xc19ce300
	 .word 0xc1bce3c0
	 .word 0xe1bcdf20
	 .word 0xc1bcde20
	 .word 0xe1bce240
	 .word 0xe1bcde00
	 .word 0xe1bcdf20
	 .word 0xe19cde00
	 .word 0xc1bce140
	 .word 0xc19ce180
	 .word 0xe19ce280
	 .word 0xe19cde00
	 .word 0xe19cde00
	 .word 0xc1bcde20
	 .word 0xc1bcde20
	 .word 0xc1bcdf00
	 .word 0xc19cdf00
	 .word 0xe19ce3c0
	 .word 0xe1bcde20
	 .word 0xe1bcde20
	 .word 0xe19cde00
	 .word 0xc19ce380
	 .word 0xc19ce2c0
	 .word 0xc1bce340
	 .word 0xe19ce180
	 .word 0xc19cde20
	 .word 0xe1bcde20
	 .word 0xe19cde20
	 .word 0xe19cdf00
	 .word 0xe19ce380
	 .word 0xc1bcde20
	 .word 0xe19ce380
	 .word 0xe1bcde00
	 .word 0xe1bce200
	 .word 0xe1bce140
	 .word 0xe19cdf00
	 .word 0xe1bcde20
	 .word 0xe19cdf00
	 .word 0xe19ce380
	 .word 0xc19cde00
	 .word 0xc1bcdf00
	 .word 0xe19cde20
	 .word 0xe19ce300
	 .word 0xc19cde00
	 .word 0xc1bce040
	 .word 0xe1bce240
	 .word 0xc1bce040
	 .word 0xe19ce280
	 .word 0xe1bcdf20
	 .word 0xc1bce140
	 .word 0xe19cde00
	 .word 0xc19cde00
	 .word 0xe1bce040
	 .word 0xc19cdf20
	 .word 0xe1bce000
	 .word 0xe19cdf00
	 .word 0xc1bcde00
	 .word 0xe19ce340
	 .word 0xe19cdf00
	 .word 0xc19ce280
	 .word 0xe19ce1c0
	 .word 0xc19cde00
	 .word 0xc1bcdf20
	 .word 0xc19ce180
	 .word 0xc19ce340
	 .word 0xe1bce0c0
	 .word 0xc1bce340
	 .word 0xc1bcde20
	 .word 0xc1bcde00
	 .word 0xe1bce140
	 .word 0xe1bce080
	 .word 0xe19ce1c0
	 .word 0xc1bcde20
	 .word 0xc19ce080
	 .word 0xe19ce0c0
	 .word 0xc19cdf00
	 .word 0xe19ce380
	 .word 0xc19ce000
	 .word 0xc19cde00
	 .word 0xe19cde00
	 .word 0xc1bcdf00
	 .word 0xc19ce180
	 .word 0xc1bcdf20
	 .word 0xc1bcdf20
	 .word 0xe1bcde20
	 .word 0xc1bcdf20
	 .word 0xc1bcde20
	 .word 0xc1bcde20
	 .word 0xe1bcde20
	 .word 0xe19ce3c0
	 .word 0xc1bce040
	 .word 0xe19ce1c0
	 .word 0xe19cde00
	 .word 0xc1bce100
	 .word 0xc1bcde00
	 .word 0xc19ce240
	 .word 0xe1bce140
	 .word 0xe1bcdf20
	 .word 0xc1bcdf20
	 .word 0xc19ce0c0
	 .word 0xe1bce240
	 .word 0xe19ce100
	 .word 0xe19cdf20
	 .word 0xc19cde20
	 .word 0xc1bce3c0
	 .word 0xe1bce280
	 .word 0xc1bcde20
	 .word 0xc1bcde00
	 .word 0xc19ce300
	 .word 0xe1bce380
	 .word 0xc1bce200
	 .word 0xe1bcde20
	 .word 0xc19cdf20
	 .word 0xe19cde20
	 .word 0xe19cde00
	 .word 0xe19ce380
	 .word 0xc19ce3c0
	 .word 0xe19ce240
	 .word 0xe19ce140
	 .word 0xc1bce380
	 .word 0xe1bcde00
	 .word 0xe1bcde20
	 .word 0xc1bce000
	 .word 0xe19cde00
	 .word 0xc1bce200
	 .word 0xe19cdf00
	 .word 0xc19cdf00
	 .word 0xc1bce300
	 .word 0xe1bce1c0
	 .word 0xe1bcde00
	 .word 0xc1bce080
	 .word 0xc1bce240
	 .word 0xe1bcdf20
	 .word 0xe1bce280
	 .word 0xc19ce300
	 .word 0xc1bcde00
	 .word 0xe1bce0c0
	 .word 0xc19ce140
	 .word 0xc1bcde00
	 .word 0xc1bcde20
	 .word 0xc19ce140
	 .word 0xc1bcdf00
	 .word 0xc1bce040
	 .word 0xc19ce1c0
	 .word 0xe19ce000
	 .word 0xc1bcdf20
	 .word 0xe19cde00
	 .word 0xe19ce100
	 .word 0xc19ce280
	 .word 0xc19ce2c0
	 .word 0xe1bcdf20
	 .word 0xe1bcde20
	 .word 0xe1bce380
	 .word 0xe19ce200
	 .word 0xc19cde20
	 .word 0xc1bce3c0
	 .word 0xe19cde20
	 .word 0xe1bcde00
	 .word 0xe19cdf00
	 .word 0xe19cde20
	 .word 0xe1bcdf00
	 .word 0xe1bcde20
	 .word 0xc1bce140
	 .word 0xc1bce100
	 .word 0xc19cdf20
	 .word 0xc19cdf20
	 .word 0xc1bce000
	 .word 0xe19ce140
	 .word 0xc1bcde00
	 .word 0xc1bce100
	 .word 0xe19ce180
	 .word 0xe1bcde00
	 .word 0xe1bce1c0
	 .word 0xe19ce140
	 .word 0xc19cdf20
	 .word 0xc1bcde00
	 .word 0xe19ce1c0
	 .word 0xc19ce100
	 .word 0xe19ce340
	 .word 0xe1bce240
	 .word 0xc1bcdf20
	 .word 0xc19cdf20
	 .word 0xc19cdf00
	 .word 0xe19cde00
	 .word 0xc19ce080
	 .word 0xe19ce240
	 .word 0xe19cde00
	 .word 0xc19cde20
	 .word 0xe1bce340
	 .word 0xe19ce300
	 .word 0xe19ce200
	 .word 0xe19cde20
	 .word 0xe19ce140
	 .word 0xc19ce2c0
	 .word 0xc1bce3c0
	 .word 0xe1bce340
	 .word 0xe19cdf00
	 .word 0xe19cdf20
	 .word 0xc1bce180
	 .word 0xe1bce040
	 .word 0xe1bce180
	 .word 0xc19ce100
	 .word 0xc1bcde00
	 .word 0xe1bce080
	 .word 0xc1bce340
	 .word 0xe1bce200
	 .word 0xe19ce2c0
	 .word 0xc19ce000
	 .word 0xe19ce380
	 .word 0xe1bcde20
	 .word 0xc19cdf20
	 .word 0xe1bcde00
	 .word 0xe19cde20
	 .word 0xe1bce280
	 .word 0xc1bcde00
	 .word 0xe1bce2c0
	 .word 0xe1bcde20
	 .word 0xc19cde00
	 .word 0xe19cde00
	 .word 0xc19cde00
	 .word 0xc1bce3c0
	 .word 0xe19ce100
	 .word 0xe19ce180
	 .word 0xe19ce280
	 .word 0xe1bce380
	 .word 0xc1bce380
	 .word 0xc19ce100
	 .word 0xc1bce240
	 .word 0xc1bcde20
	 .word 0xc1bcde00
	 .word 0xe19ce100
	 .word 0xc19cde00
	 .word 0xc19cdf20
	 .word 0xe1bcdf20
	 .word 0xe1bcde00
	 .word 0xe19ce240
	 .word 0xc1bce2c0
	 .word 0xe19ce280
	 .word 0xe19ce200
	 .word 0xc1bce080
	 .word 0xc1bce080
	 .word 0xe1bce200
	 .word 0xc1bcde20
	 .word 0xe1bcde20
	 .word 0xc1bce080
	 .word 0xc1bce000
	 .word 0xc1bce380
	 .word 0xc19cdf00
	 .word 0xe19ce3c0
	 .word 0xc19cde00
	 .word 0xe1bcde20
	 .word 0xe19ce0c0
	 .word 0xe1bce140
	 .word 0xe19cdf00
	 .word 0xc19ce040
	 .word 0xe19ce0c0
	 .word 0xe1bcde20
	 .word 0xe19cde20
	 .word 0xc1bcdf00
	 .word 0xe1bce1c0
	 .word 0xc19ce140
	 .word 0xc19cde00
	 .word 0xc1bce3c0
	 .word 0xc1bce0c0
	 .word 0xe19ce240
	 .word 0xe19ce040
	 .word 0xc1bcdf00
	 .word 0xc19cdf20
	 .word 0xc19cdf20
	 .word 0xc19ce240
	 .word 0xe1bcde00
	 .word 0xc1bce380
	 .word 0xe1bcdf00
	 .word 0xe1bce200
	 .word 0xc19cdf20
	 .word 0xc1bcde20
	 .word 0xc19cde20
	 .word 0xc1bce000
	 .word 0xe19ce3c0
	 .word 0xe1bcdf20
	 .word 0xc19cdf00
	 .word 0xe19cdf00
	 .word 0xc1bce180
	 .word 0xc19cde20
	 .word 0xe19ce240
	 .word 0xe19ce180
	 .word 0xe19cde00
	 .word 0xe1bcdf20
	 .word 0xc1bce040
	 .word 0xe19ce2c0
	 .word 0xe19ce3c0
	 .word 0xc19ce040
	 .word 0xe19ce200
	 .word 0xc19ce2c0
	 .word 0xc1bcde00
	 .word 0xc1bce3c0
	 .word 0xc19ce1c0
	 .word 0xc1bce380
	 .word 0xc19ce040
	 .word 0xc19ce240
	 .word 0xc1bce200
	 .word 0xc19cde00
	 .word 0xc1bce3c0
	 .word 0xe19cde20
	 .word 0xc1bcde20
	 .word 0xc1bce380
	 .word 0xc1bcdf20
	 .word 0xe19cdf20
	 .word 0xe1bcde20
	 .word 0xe19cdf20
	 .word 0xe1bcde00
	 .word 0xc1bcdf20
	 .word 0xe1bce2c0
	 .word 0xc19ce2c0
	 .word 0xe19ce200
	 .word 0xc1bce1c0
	 .word 0xc1bcdf00
	 .word 0xe19ce000
	 .word 0xe1bce2c0
	 .word 0xe19ce200
	 .word 0xe1bce380
	 .word 0xc19cdf00
	 .word 0xc1bcde00
	 .word 0xc1bce100
	 .word 0xc19cdf00
	 .word 0xe19ce1c0
	 .word 0xc1bcde00
	 .word 0xc19ce3c0
	 .word 0xe19ce2c0
	 .word 0xc19ce200
	 .word 0xe1bcdf20
	 .word 0xe19cdf00
	 .word 0xc19cdf20
	 .word 0xe1bcde00
	 .word 0xc19cde00
	 .word 0xe1bcdf00
	 .word 0xe1bce180
	 .word 0xe19cde00
	 .word 0xe1bcde00
	 .word 0xe19ce3c0
	 .word 0xc19cdf00
	 .word 0xc19ce0c0
	 .word 0xe1bce280
	 .word 0xc1bcde20
	 .word 0xe1bce3c0
	 .word 0xc19cdf00
	 .word 0xc1bce340
	 .word 0xc1bce2c0
	 .word 0xc19ce3c0
	 .word 0xc1bcdf20
	 .word 0xc19ce200
	 .word 0xc19ce300
	 .word 0xc19cde20
	 .word 0xe19cdf00
	 .word 0xc1bce3c0
	 .word 0xc19cdf20
	 .word 0xc19ce280
	 .word 0xe1bce0c0
	 .word 0xe19cdf20
	 .word 0xc1bce340
	 .word 0xe1bce2c0
	 .word 0xc1bce0c0
	 .word 0xe1bce280
	 .word 0xe1bcde00
	 .word 0xe19ce3c0
	 .word 0xc1bcde00
	 .word 0xe1bcde00
	 .word 0xe19cdf00
	 .word 0xe1bce180
	 .word 0xc19ce140
	 .word 0xc19cde00
	 .word 0xc19cdf00
	 .word 0xc1bce280
	 .word 0xe19ce340
	 .word 0xc19ce2c0
	 .word 0xe1bcde00
	 .word 0xe1bce040
	 .word 0xe19cdf00
	 .word 0xc1bcdf20
	 .word 0xe19cde20
	 .word 0xc19ce240
	 .word 0xc1bce2c0
	 .word 0xc1bce080
	 .word 0xe1bce200
	 .word 0xc1bce380
	 .word 0xc19ce280
	 .word 0xc19ce340
	 .word 0xc1bcde20
	 .word 0xc19cdf00
	 .word 0xc19ce340
	 .word 0xe1bce080
	 .word 0xc1bce040
	 .word 0xc1bcdf20
	 .word 0xe1bce300
	 .word 0xe1bce0c0
	 .word 0xc19cde00
	 .word 0xe1bcdf20
	 .word 0xe1bce040
	 .word 0xc19ce1c0
	 .word 0xe19ce380
	 .word 0xc19cdf20
	 .word 0xe1bcdf00
	 .word 0xe19cdf00
	 .word 0xc1bce380
	 .word 0xe19ce1c0
	 .word 0xc19cdf20
	 .word 0xc19ce3c0
	 .word 0xc1bcde00
	 .word 0xe1bce200
	 .word 0xc19ce140
	 .word 0xc1bcdf00
	 .word 0xc19ce2c0
	 .word 0xc19ce3c0
	 .word 0xc19cdf00
	 .word 0xc1bce340
	 .word 0xe1bce380
	 .word 0xc19ce0c0
	 .word 0xc19ce340
	 .word 0xe1bcde00
	 .word 0xc19ce300
	 .word 0xc19ce380
	 .word 0xc1bcdf00
	 .word 0xc19cdf20
	 .word 0xc19cde00
	 .word 0xc19cde00
	 .word 0xc19cde20
	 .word 0xe19ce000
	 .word 0xc1bcdf20
	 .word 0xc1bce380
	 .word 0xe19ce180
	 .word 0xc1bce3c0
	 .word 0xe19cde00
	 .word 0xe19ce280
	 .word 0xe19ce180
	 .word 0xe19ce180
	 .word 0xe19ce380
	 .word 0xc19ce380
	 .word 0xe1bce180
	 .word 0xc1bcdf20
	 .word 0xe1bcdf00
	 .word 0xc19ce340
	 .word 0xe1bce1c0
	 .word 0xc19ce380
	 .word 0xe1bcde20
	 .word 0xc1bcdf00
	 .word 0xc19cdf20
	 .word 0xc19cdf20
	 .word 0xc19ce340
	 .word 0xe19cdf00
	 .word 0xc1bce1c0
	 .word 0xe1bcdf00
	 .word 0xc1bcde00
	 .word 0xc1bcdf20
	 .word 0xe19cde20
	 .word 0xc19ce380
	 .word 0xc1bce080
	 .word 0xc19ce200
	 .word 0xc19ce380
	 .word 0xe19cdf00
	 .word 0xe1bcdf00
	 .word 0xc1bce280
	 .word 0xe19cde00
	 .word 0xe1bcdf20
	 .word 0xe19ce0c0
	 .word 0xc19ce000
	 .word 0xc19ce140
	 .word 0xe1bce380
	 .word 0xc1bce300
	 .word 0xe1bce000
	 .word 0xc19ce380
	 .word 0xe1bcde00
	 .word 0xc19ce040
	 .word 0xe19cde00
	 .word 0xc19cdf00
	 .word 0xe19ce240
	 .word 0xc1bce140
	 .word 0xe19ce2c0
	 .word 0xc1bcde00
	 .word 0xe19ce140
	 .word 0xc1bcde00
	 .word 0xc1bce140
	 .word 0xc19cde00
	 .word 0xe1bce300
	 .word 0xc1bcde00
	 .word 0xe1bcdf00
	 .word 0xc1bcde00
	 .word 0xe19ce140
	 .word 0xc19ce000
	 .word 0xc19cde20
	 .word 0xc1bce040
	 .word 0xe1bcdf20
	 .word 0xc1bce2c0
	 .word 0xe19cdf00
	 .word 0xe19cdf00
	 .word 0xe1bcdf20
	 .word 0xc19ce0c0
	 .word 0xc19cde00
	 .word 0xe1bcdf20
	 .word 0xe19cdf00
	 .word 0xc19ce380
	 .word 0xe19ce000
	 .word 0xc19ce300
	 .word 0xc19ce2c0
	 .word 0xe19ce200
	 .word 0xc19ce280
	 .word 0xe19ce300
	 .word 0xc19cde20
	 .word 0xc1bce280
	 .word 0xe1bcde20
	 .word 0xe1bcdf20
	 .word 0xc1bcdf20
	 .word 0xc1bcdf20
	 .word 0xc1bce000
	 .word 0xc1bce200
	 .word 0xc19ce140
	 .word 0xc1bcdf00
	 .word 0xc1bce340
	 .word 0xe19cde00
	 .word 0xc1bce280
	 .word 0xc1bce3c0
	 .word 0xc19ce200
	 .word 0xc19cde00
	 .word 0xc1bcdf20
	 .word 0xe19ce040
	 .word 0xc1bce240
	 .word 0xc1bcdf00
	 .word 0xe19ce040
	 .word 0xe1bce380
	 .word 0xe19cde00
	 .word 0xe1bce140
	 .word 0xc19cdf20
	 .word 0xe1bcde20
	 .word 0xc1bcde00
	 .word 0xc19cde00
	 .word 0xc19cdf00
	 .word 0xe1bcdf00
	 .word 0xc19cde00
	 .word 0xc1bcde00
	 .word 0xe1bcde00
	 .word 0xc1bce2c0
	 .word 0xe19cdf20
	 .word 0xc1bce340
	 .word 0xc1bcde00
	 .word 0xc19cdf20
	 .word 0xc1bce380
	 .word 0xc19cdf20
	 .word 0xc1bce180
	 .word 0xe19cde00
	 .word 0xe1bcdf20
	 .word 0xe19cde00
	 .word 0xe19ce3c0
	 .word 0xe19ce380
	 .word 0xc19cdf20
	 .word 0xc19cdf20
	 .word 0xe19ce080
	 .word 0xe19cdf00
	 .word 0xe1bce040
	 .word 0xc1bce140
	 .word 0xc1bcdf20
	 .word 0xc1bcde00
	 .word 0xc1bce000
	 .word 0xc1bce0c0
	 .word 0xe1bcdf20
	 .word 0xe1bcdf20
	 .word 0xc1bce140
	 .word 0xe1bce2c0
	 .word 0xc1bce280
	 .word 0xc19ce080
	 .word 0xc1bcde00
	 .word 0xe1bce380
	 .word 0xc1bcde00
	 .word 0xc1bcdf20
	 .word 0xc1bce200
	 .word 0xe19ce0c0
	 .word 0xe19ce240
	 .word 0xc19cdf00
	 .word 0xe1bcdf20
	 .word 0xe1bcde20
	 .word 0xc1bcde00
	 .word 0xc19cde00
	 .word 0xc19cde00
	 .word 0xc19ce2c0
	 .word 0xe19cdf20
	 .word 0xe19ce040
	 .word 0xe19ce100
	 .word 0xe1bce3c0
	 .word 0xc19ce000
	 .word 0xc19ce100
	 .word 0xe19cdf20
	 .word 0xe1bcde00
	 .word 0xc19cdf20
	 .word 0xc1bce300
	 .word 0xe19ce340
	 .word 0xc1bcde20
	 .word 0xe19ce300
	 .word 0xc1bce180
	 .word 0xc1bce0c0
	 .word 0xc1bcde00
	 .word 0xe1bce180
	 .word 0xc1bce140
	 .word 0xc1bcdf20
	 .word 0xe1bce1c0
	 .word 0xc1bcdf00
	 .word 0xc1bce2c0
	 .word 0xe19ce040
	 .word 0xe1bcde20
	 .word 0xc1bce0c0
	 .word 0xe1bcdf20
	 .word 0xc1bce140
	 .word 0xc1bcde20
	 .word 0xe1bcdf00
	 .word 0xc1bce300
	 .word 0xc19ce180
	 .word 0xc1bcde20
	 .word 0xe19ce3c0
	 .word 0xc1bcde00
	 .word 0xc19ce300
	 .word 0xe19ce3c0
	 .word 0xc19cdf20
	 .word 0xe1bcdf20
	 .word 0xc1bce300
	 .word 0xe19ce000
	 .word 0xe19ce000
	 .word 0xe1bcdf00
	 .word 0xe19cdf20
	 .word 0xc19cdf20
	 .word 0xe1bcde20
	 .word 0xe1bcde00
	 .word 0xc1bce300
	 .word 0xe1bcde20
	 .word 0xc19cdf00
	 .word 0xe19ce0c0
	 .word 0xc19ce280
	 .word 0xe1bcdf00
	 .word 0xe1bce340
	 .word 0xe1bce380
	 .word 0xc1bce3c0
	 .word 0xc1bcdf20
	 .word 0xe1bcde00
	 .word 0xc19ce1c0
	 .word 0xc1bce3c0
	 .word 0xe1bcdf00
	 .word 0xc19ce300
	 .word 0xe1bce300
	 .word 0xc1bcde20
	 .word 0xe1bcdf00
	 .word 0xe19ce0c0
	 .word 0xc1bce100
	 .word 0xe19cdf00
	 .word 0xe1bcde00
	 .word 0xe19ce280
	 .word 0xc1bce040
	 .word 0xe19cde00
	 .word 0xe19ce000
	 .word 0xc19cdf20
	 .word 0xe19ce040
	 .word 0xc1bcde20
	 .word 0xe19cdf00
	 .word 0xc19ce340
	 .word 0xc1bcdf20
	 .word 0xc1bcde00
	 .word 0xc1bcdf20
	 .word 0xe1bcde20
	 .word 0xc19cdf00
	 .word 0xc1bce040
	 .word 0xe1bce000
	 .word 0xc1bcde20
	 .word 0xe1bce340
	 .word 0xc1bce340
	 .word 0xe1bce040
	 .word 0xe1bcdf20
	 .word 0xe19ce080
	 .word 0xe1bce380
	 .word 0xc19cde00
	 .word 0xe1bcdf20
	 .word 0xc1bcde00
	 .word 0xc1bce040
	 .word 0xe19ce100
	 .word 0xe1bce180
	 .word 0xc19ce040
	 .word 0xc1bce000
	 .word 0xc19cde00
	 .word 0xc19cde20
	 .word 0xe19ce0c0
	 .word 0xc19ce300
	 .word 0xc19cde20
	 .word 0xe1bcdf00
	 .word 0xe19cdf20
	 .word 0xc19ce040
	 .word 0xe1bce1c0
	 .word 0xe19cdf20
	 .word 0xe1bcdf20
	 .word 0xe1bce380
	 .word 0xe1bcde00
	 .word 0xe19cde20
	 .word 0xc1bce1c0
	 .word 0xc19ce280
	 .word 0xe19cde20
	 .word 0xc19ce100
	 .word 0xe1bce380
	 .word 0xe19ce100
	 .word 0xc19cde00
	 .word 0xc1bce140
	 .word 0xe19cdf00
	 .word 0xe19ce040
	 .word 0xc19cdf20
	 .word 0xc19ce2c0
	 .word 0xe19cdf00
	 .word 0xc19ce200
	 .word 0xe19cde00
	 .word 0xe1bcdf00
	 .word 0xe19ce0c0
	 .word 0xe19ce380
	 .word 0xc19ce080
	 .word 0xe19cdf20
	 .word 0xe19cde00
	 .word 0xc19cdf20
	 .word 0xc1bcde00
	 .word 0xc1bcdf00
	 .word 0xc19ce2c0
	 .word 0xe1bcde20
	 .word 0xe1bcdf00
	 .word 0xc1bcdf00
	 .word 0xe19ce000
	 .word 0xc1bce200
	 .word 0xc19cdf00
	 .word 0xe1bce000
	 .word 0xe1bcdf20
	 .word 0xe19cde00
	 .word 0xc19cdf00
	 .word 0xc1bce0c0
	 .word 0xe19cdf20
	 .word 0xe1bce080
	 .word 0xe19cde00
	 .word 0xc19ce340
	 .word 0xc1bcde20
	 .word 0xe19ce380
	 .word 0xe1bce340
	 .word 0xe19cdf20
	 .word 0xe19ce280
	 .word 0xc1bce240
	 .word 0xc1bce2c0
	 .word 0xe1bcdf00
	 .word 0xc19cde20
	 .word 0xc19ce0c0
	 .word 0xe1bce340
	 .word 0xc19cdf00
	 .word 0xc1bce100
	 .word 0xc1bce2c0
	 .word 0xe19cdf20
	 .word 0xc1bce180
	 .word 0xc1bce040
	 .word 0xc1bcdf00
	 .word 0xc1bce380
	 .word 0xe19cde00
	 .word 0xc19ce380
	 .word 0xe19cde20
	 .word 0xc1bce340
	 .word 0xe1bcde20
	 .word 0xc19ce200
	 .word 0xc1bce380
	 .word 0xe1bce040
	 .word 0xe1bcde00
	 .word 0xe19cde00
	 .word 0xc19cde20
	 .word 0xe19cde00
	 .word 0xc19cdf20
	 .word 0xe19ce180
	 .word 0xe1bcde20
	 .word 0xc19ce1c0
	 .word 0xc1bce140
	 .word 0xe19cde20
	 .word 0xc19ce3c0
	 .word 0xc19cdf00
	 .word 0xc19cde20
	 .word 0xc19ce040
	 .word 0xe1bcdf00
	 .word 0xc1bcde20
	 .word 0xe19ce000
	 .word 0xe19ce280
	 .word 0xc1bce2c0
	 .word 0xc1bcde00
	 .word 0xc1bce2c0
	 .word 0xe1bcde20
	 .word 0xc19cdf00
	 .word 0xc19ce280
	 .word 0xe1bcde00
	 .word 0xe19cde00
	 .word 0xe1bce000
	 .word 0xc19cdf00
	 .word 0xe19cdf00
	 .word 0xc19cde00
	 .word 0xe19cde00
	 .word 0xe1bcde20
	 .word 0xc1bcde20
	 .word 0xe1bcdf00
	 .word 0xc1bce200
	 .word 0xc19cde20
	 .word 0xe1bcde20
	 .word 0xe19cdf20
	 .word 0xe1bce380
	 .word 0xe1bcde00
	 .word 0xe1bcdf20
	 .word 0xe19cde20
	 .word 0xe1bcdf20
	 .word 0xe1bcde20
	 .word 0xc1bce040
	 .word 0xe19ce180
	 .word 0xc19ce380
	 .word 0xc1bce280
	 .word 0xe19cde20
	 .word 0xe19cdf20
	 .word 0xc1bcdf20
	 .word 0xc19cde20
	 .word 0xc19cde20
	 .word 0xe19cde20
	 .word 0xe19cde00
	 .word 0xe19cdf20
	 .word 0xc1bce180
	 .word 0xe1bcdf20
	 .word 0xe19cde00
	 .word 0xc19cdf00
	 .word 0xc1bce180
	 .word 0xc1bce1c0
	 .word 0xc1bce180
	 .word 0xc1bcdf20
	 .word 0xe19cde20
	 .word 0xc1bce100
	 .word 0xc19ce200
	 .word 0xe1bce240
	 .word 0xe19cdf20
	 .word 0xe1bcde00
	 .word 0xe19ce300
	 .word 0xe1bcde20
	 .word 0xe1bce280
	 .word 0xc19ce180
	 .word 0xe1bcdf20
	 .word 0xc1bcdf00
	 .word 0xe19cdf00
	 .word 0xe19ce240
	 .word 0xc19cdf00
	 .word 0xe19cde20
	 .word 0xc1bce200
	 .word 0xc19ce180
	 .word 0xc19ce3c0
	 .word 0xe1bce240
	 .word 0xe1bce080
	 .word 0xc1bce100
	 .word 0xc19cdf20
	 .word 0xe1bce0c0
	 .word 0xc1bce180
	 .word 0xe1bce380
	 .word 0xe1bce300
	 .word 0xc1bcdf00
	 .word 0xe19cde20
	 .word 0xc19ce040
	 .word 0xe19ce380
	 .word 0xc1bcde20
	 .word 0xc1bcde20
	 .word 0xc1bce140
	 .word 0xc19cdf20
	 .word 0xc1bce140
	 .word 0xe19ce380
	 .word 0xe1bce180
	 .word 0xc19ce300
	 .word 0xe1bce240
	 .word 0xc1bcde00
	 .word 0xc1bce200
	 .word 0xe1bce0c0
	 .word 0xc1bce140
	 .word 0xe19ce3c0
	 .word 0xc1bcde20
	 .word 0xe1bce040
	 .word 0xe1bce000
	 .word 0xe19ce200
	 .word 0xc19cde00
	 .word 0xc1bce300
	 .word 0xe1bce240
	 .word 0xc19cdf00
	 .word 0xc1bce180
	 .word 0xc19cde00
	 .word 0xc19cde20
	 .word 0xc1bcdf00
	 .word 0xe1bcdf00
	 .word 0xe19cde20
	 .word 0xc1bcde00
	 .word 0xc1bce200
	 .word 0xc19cdf00
	 .word 0xc1bcde00
	 .word 0xc19cde20
	 .word 0xc1bce040
	 .word 0xc1bcdf00
	 .word 0xc1bce1c0
	 .word 0xc19cde20
	 .word 0xc19ce3c0
	 .word 0xc1bcde20
	 .word 0xc19cdf00
	 .word 0xc19ce100
	 .word 0xc1bce340
	 .word 0xe19ce140
	 .word 0xe19cde00
	 .word 0xe1bce180
	 .word 0xc1bce040
	 .word 0xe19ce340
	 .word 0xc1bce240
	 .word 0xe1bce340
	 .word 0xc1bcde00
	 .word 0xc1bcde20
	 .word 0xc1bce000
	 .word 0xe19cdf00
	 .word 0xc1bcde20
	 .word 0xc19cde00
	 .word 0xe1bcde00
	 .word 0xc1bcdf20
	 .word 0xc1bcde00
	 .word 0xe1bce000
	 .word 0xc1bce380
	 .word 0xe19ce3c0
	 .word 0xc19cdf20
	 .word 0xc19ce180
	 .word 0xc1bce340
	 .word 0xe1bce200
	 .word 0xe19cdf00
	 .word 0xc19cde20
	 .word 0xc19cdf00
	 .word 0xe19cdf20
	 .word 0xe1bcde00
	 .word 0xe1bce200
	 .word 0xe19cde00
	 .word 0xe19cde00
	 .word 0xc19cdf00
	 .word 0xc19cde20
	 .word 0xc1bcde20
	 .word 0xc1bcdf00
	 .word 0xc1bce240
	 .word 0xe19ce3c0
	 .word 0xc19ce340
	 .word 0xc1bcdf20
	 .word 0xe1bcde00
	 .word 0xc1bce1c0
	 .word 0xe19ce140
	 .word 0xe1bcde00
	 .word 0xc1bce000
	 .word 0xe19ce3c0
	 .word 0xe1bcdf00
	 .word 0xe1bcde00
	 .word 0xc1bce140
	 .word 0xe19ce3c0
	 .word 0xc1bce080
	 .word 0xc1bcdf00
	 .word 0xe1bce1c0
	 .word 0xe1bcde00
	 .word 0xc19ce300
	 .word 0xc1bce280
	 .word 0xc19ce1c0
	 .word 0xc1bce040
	 .word 0xe19cde00
	 .word 0xc1bcde00
	 .word 0xe1bce380
	 .word 0xe19cde00
	 .word 0xc1bcdf20
	 .word 0xe19ce100
	 .word 0xc1bcdf20
	 .word 0xe19ce300
	 .word 0xc1bce240
	 .word 0xe19ce080
	 .word 0xe1bce240
	 .word 0xc1bce080
	 .word 0xc1bce100
	 .word 0xc1bcde00
	 .word 0xc19cde00
	 .word 0xc19ce180
	 .word 0xc19cde20
	 .word 0xc1bce080
	 .word 0xe1bce3c0
	 .word 0xe1bcde20
	 .word 0xe1bcde20
	 .word 0xc19ce080
	 .word 0xc19ce100
	 .word 0xc19ce000
	 .word 0xc1bce2c0
	 .word 0xe19cdf00
	 .word 0xe1bcdf20
	 .word 0xe1bce180
	 .word 0xe1bce040
	 .word 0xe1bcde20
	 .word 0xe1bce140
	 .word 0xc1bcdf00
	 .word 0xe1bce040
	 .word 0xe19cde00
	 .word 0xc1bcde00
	 .word 0xc19ce340
	 .word 0xc1bce080
	 .word 0xe19ce0c0
	 .word 0xe1bcde00
	 .word 0xe19cdf20
	 .word 0xe19cde20
	 .word 0xe1bcde20
	 .word 0xc1bce240
	 .word 0xc1bce000
	 .word 0xe1bcde00
	 .word 0xe19ce0c0
	 .word 0xe1bce100
	 .word 0xc1bce300
	 .word 0xe19cde20
	 .word 0xe1bce380
	 .word 0xe19cdf20
	 .word 0xc19ce280
	 .word 0xc1bce280
	 .word 0xc1bcdf00
	 .word 0xe1bcde00
	 .word 0xc19cde00
	 .word 0xc1bcdf20
	 .word 0xe1bce280
	 .word 0xe19ce1c0
	 .word 0xc1bcde20
	 .word 0xc19cdf00
	 .word 0xc19cdf00
	 .word 0xe19ce000
	 .word 0xe19ce080
	 .word 0xe19ce300
	 .word 0xc19cdf20
	 .word 0xc19ce040
	 .word 0xe19ce100
	 .word 0xc19ce100
	 .word 0xc1bce2c0
	 .word 0xc1bce0c0
	 .word 0xe1bcde20
	 .word 0xc19cdf00
	 .word 0xc19ce0c0
	 .word 0xc1bce240
	 .word 0xe1bce180
	 .word 0xe1bcdf20
	 .word 0xc19ce300
	 .word 0xe19cde20
	 .word 0xe1bcde20
	 .word 0xe1bcdf00
	 .word 0xc19cdf20
	 .word 0xe1bcdf00
	 .word 0xe1bcde20
	 .word 0xc1bcde20
	 .word 0xc19cdf00
	 .word 0xe1bce000
	 .word 0xc1bcde20
	 .word 0xc1bcdf20
	 .word 0xc19cde00
	 .word 0xc1bce180
	 .word 0xe1bcde00
	 .word 0xe19cde00
	 .word 0xe1bcdf00
	 .word 0xc19cdf20
	 .word 0xe1bce140
	 .word 0xc1bcdf20
	 .word 0xc19ce240
	 .word 0xc1bce240
	 .word 0xc19ce240
	 .word 0xc19cde00
	 .word 0xc1bce000
	 .word 0xe1bce200
	 .word 0xe1bce180
	 .word 0xc1bce2c0
	 .word 0xe19cdf00
	 .word 0xc1bcdf00
	 .word 0xc19ce200
	 .word 0xc1bce200
	 .word 0xc1bce0c0
	 .word 0xe19cde00
	 .word 0xc1bce300
	 .word 0xe19ce100
	 .word 0xe19ce140
	 .word 0xe19cdf20
	 .word 0xc19cde20
	 .word 0xc1bce200
	 .word 0xe19cdf00
	 .word 0xe1bce200
	 .word 0xe19cde00
	 .word 0xe19ce300
	 .word 0xc1bce300
	 .word 0xc19cde20
	 .word 0xe1bcde20
	 .word 0xc19ce2c0
	 .word 0xe19cdf00
	 .word 0xe1bce000
	 .word 0xc19cdf00
	 .word 0xe1bce080
	 .word 0xe1bcde20
	 .word 0xc1bce080
	 .word 0xc19cdf00
	 .word 0xe1bcdf00
	 .word 0xc19ce040
	 .word 0xc19ce080
	 .word 0xe1bcde00
	 .word 0xe19cde20
	 .word 0xe19ce340
	 .word 0xe1bce180
	 .word 0xc19cde20
	 .word 0xc1bcde20
	 .word 0xe1bcde00
	 .word 0xe19cde00
	 .word 0xc19cdf20
	 .word 0xc1bcdf20
	 .word 0xc19cdf20
	 .word 0xe19ce100
	 .word 0xe1bcdf20
	 .word 0xe19cdf20
	 .word 0xc19cdf20
	 .word 0xe1bce3c0
	 .word 0xc19ce300
	 .word 0xc19ce200
	 .word 0xe1bce280
	 .word 0xc1bcdf20
	 .word 0xc19cdf00
	 .word 0xe19cdf20
	 .word 0xe19ce300
	 .word 0xe1bcde20
	 .word 0xe1bcde00
	 .word 0xe19ce100
	 .word 0xe19ce100
	 .word 0xc19ce080
	 .word 0xe19ce200
	 .word 0xc19ce140
	 .word 0xe1bce100
	 .word 0xc19cdf20
	 .word 0xc1bcdf20
	 .word 0xe1bcde20
	 .word 0xe19cde20
	 .word 0xe1bce2c0
	 .word 0xc1bcde00
	 .word 0xe1bce340
	 .word 0xc19ce180
	 .word 0xe1bce040
	 .word 0xe1bcdf00
	 .word 0xc1bce080
	 .word 0xe1bcdf20
	 .word 0xe1bce040
	 .word 0xe1bce040
	 .word 0xe1bcdf00
	 .word 0xe1bcdf20
	 .word 0xe19ce200
	 .word 0xe1bce200
	 .word 0xc1bce080
	 .word 0xc19ce280
	 .word 0xc1bce000
	 .word 0xe1bce0c0
	 .word 0xe1bcde00
	 .word 0xe1bcdf20
	 .word 0xc19cdf00
	 .word 0xc1bcdf00
	 .word 0xe1bce080
	 .word 0xe19cdf20
	 .word 0xe19cdf00
	 .word 0xc1bcdf20
	 .word 0xe19ce180
	 .word 0xe19ce2c0
	 .word 0xc19cde00
	 .word 0xc1bcdf00
	 .word 0xe19cdf00
	 .word 0xc19ce200
	 .word 0xe1bcde20
	 .word 0xc1bce240
	 .word 0xc1bce340
	 .word 0xe19ce080
	 .word 0xc19ce100
	 .word 0xe1bce300
	 .word 0xc19cde20
	 .word 0xe19ce3c0
	 .word 0xe1bcde00
	 .word 0xc19cde00
	 .word 0xc19ce380
	 .word 0xe1bce0c0
	 .word 0xe1bce380
	 .word 0xe1bce200
	 .word 0xc19cdf20
	 .word 0xe1bce300
	 .word 0xe19cde20
	 .word 0xe19cdf20
	 .word 0xc1bce300
	 .word 0xc1bcdf20
	 .word 0xe19cde20
	 .word 0xc1bce300
	 .word 0xe19ce080
	 .word 0xe1bce0c0
	 .word 0xc1bce2c0
	 .word 0xc19ce200
	 .word 0xe19ce000
	 .word 0xe19ce200
	 .word 0xe1bcdf20
	 .word 0xe19cdf00
	 .word 0xc1bce180
	 .word 0xe1bce100
	 .word 0xe1bce000
	 .word 0xe19ce000
	 .word 0xc1bce3c0
	 .word 0xe1bce2c0
	 .word 0xc19cdf20
	 .word 0xc1bce040
	 .word 0xc19ce0c0
	 .word 0xc19ce380
	 .word 0xe19ce300
	 .word 0xe1bce380
	 .word 0xe1bcdf20
	 .word 0xc1bcde20
	 .word 0xc1bcdf00
	 .word 0xe19ce000
	 .word 0xc19ce380
	 .word 0xe1bcdf00
	 .word 0xc19ce080
	 .word 0xc19cdf00
	 .word 0xc19cdf20
	 .word 0xe19ce180
	 .word 0xe19ce0c0
	 .word 0xc1bcdf00
	 .word 0xe19cde00
	 .word 0xe19cde00
	 .word 0xe19cde00
	 .word 0xc1bcdf20
	 .word 0xe1bce2c0
	 .word 0xe19ce380
	 .word 0xc1bce200
	 .word 0xe1bcdf20
	 .word 0xe19ce080
	 .word 0xe1bce340
	 .word 0xc1bcde00
	 .word 0xe19cde00
	 .word 0xc1bcde00
	 .word 0xe1bce3c0
	 .word 0xe19ce240
	 .word 0xe19cdf20
	 .word 0xc19cde20
	 .word 0xc19ce0c0
	 .word 0xc1bcdf20
	 .word 0xe1bcde20
	 .word 0xc19ce0c0
	 .word 0xe1bce300
	 .word 0xe19cdf20
	 .word 0xc1bcdf00
	 .word 0xe19cde00
	 .word 0xc19cde20
	 .word 0xe1bce380
	 .word 0xe1bce0c0
	 .word 0xe1bce300
	 .word 0xe1bcdf20
	 .word 0xc1bce100
	 .word 0xc1bce300
	 .word 0xc1bcdf00
	 .word 0xe19cde00
	 .word 0xe19ce2c0
	 .word 0xe19ce040
	 .word 0xc19ce000
	 .word 0xc1bce380
	 .word 0xc19cde20
	 .word 0xc19ce240
	 .word 0xc1bce3c0
	 .word 0xe19ce300
	 .word 0xc1bcdf00
	 .word 0xe19ce2c0
	 .word 0xc19ce2c0
	 .word 0xc19ce140
	 .word 0xe1bcde20
	 .word 0xe19ce3c0
	 .word 0xc1bce080
	 .word 0xc1bcdf00
	 .word 0xc19cdf00
	 .word 0xe19ce180
	 .word 0xe19cdf20
	 .word 0xe1bce100
	 .word 0xc1bcde20
	 .word 0xc1bce080
	 .word 0xc19cdf20
	 .word 0xe19ce200
	 .word 0xc19ce2c0
	 .word 0xc19ce0c0
	 .word 0xc1bcdf00
	 .word 0xe19ce080
	 .word 0xc19ce140
	 .word 0xe19ce380
	 .word 0xe19cde20
	 .word 0xe1bce0c0
	 .word 0xc1bce000
	 .word 0xe19ce280
	 .word 0xe1bce080
	 .word 0xe19cdf00
	 .word 0xc1bce040
	 .word 0xc19ce140
	 .word 0xc1bce1c0
	 .word 0xe1bce100
	 .word 0xc19cdf00
	 .word 0xc19cdf00
	 .word 0xe1bce280
	 .word 0xc19cdf00
	 .word 0xe1bcde00
	 .word 0xe19cde20
	 .word 0xe19cdf00
	 .word 0xe1bce240
	 .word 0xe19ce000
	 .word 0xe1bcdf00
	 .word 0xe1bce100
	 .word 0xe19cdf20
	 .word 0xe19ce200
	 .word 0xc1bce0c0
	 .word 0xe1bce0c0
	 .word 0xe1bce100
	 .word 0xe19cde20
	 .word 0xc19ce100
	 .word 0xc19ce000
	 .word 0xe19cdf20
	 .word 0xc1bce0c0
	 .word 0xe1bce3c0
	 .word 0xc1bcdf20
	 .word 0xe19ce000
	 .word 0xc19cde00
	 .word 0xc1bcdf00
	 .word 0xe1bcde20
	 .word 0xc19ce3c0
	 .word 0xc19ce200
	 .word 0xe1bce3c0
	 .word 0xc1bcde20
	 .word 0xe1bce000
	 .word 0xe1bce1c0
	 .word 0xc19ce200
	 .word 0xe19cdf20
	 .word 0xc19cdf20
	 .word 0xe1bce2c0
	 .word 0xe1bcde20
	 .word 0xe1bcdf00
	 .word 0xc19ce3c0
	 .word 0xc1bcdf00
	 .word 0xe19cde00
	 .word 0xc1bcde00
	 .word 0xc1bce300
	 .word 0xc19cdf20
	 .word 0xc19ce340
	 .word 0xc19cde20
	 .word 0xe1bce140
	 .word 0xe1bcde20
	 .word 0xe19ce000
	 .word 0xe1bce080
	 .word 0xc1bce180
	 .word 0xe1bcdf20
	 .word 0xc1bce0c0
	 .word 0xe1bce040
	 .word 0xe19ce180
	 .word 0xc1bce100
	 .word 0xc19cdf00
	 .word 0xe19cde00
	 .word 0xe19cde20
	 .word 0xe1bcdf20
	 .word 0xc19cde20
	 .word 0xc1bcdf00
	 .word 0xe19cdf00
	 .word 0xc1bcde00
	 .word 0xc1bcdf20
	 .word 0xc1bcdf00
	 .word 0xc19ce280
	 .word 0xe19cde00
	 .word 0xe19ce280
	 .word 0xc19cde20
	 .word 0xe1bcdf00
	 .word 0xe19cdf00
	 .word 0xe1bce000
	 .word 0xe19cdf20
	 .word 0xe19ce100
	 .word 0xc19ce280
	 .word 0xc19ce340
	 .word 0xe1bcdf00
	 .word 0xc19cde00
	 .word 0xe1bce1c0
	 .word 0xc1bcde20
	 .word 0xc1bce2c0
	 .word 0xe1bcde00
	 .word 0xc19ce140
	 .word 0xc1bcde00
	 .word 0xc1bce000
	 .word 0xe19ce040
	 .word 0xc19ce240
	 .word 0xe1bcdf00
	 .word 0xe1bce180
	 .word 0xc19ce180
	 .word 0xe19ce040
	 .word 0xc1bcde00
	 .word 0xc1bcdf20
	 .word 0xc1bcdf00
	 .word 0xe1bcde20
	 .word 0xe19ce200
	 .word 0xc19ce300
	 .word 0xc1bcdf20
	 .word 0xc19cde00
	 .word 0xc1bcde00
	 .word 0xc19cdf20
	 .word 0xe1bcde20
	 .word 0xe19ce380
	 .word 0xc19ce240
	 .word 0xe19cdf00
	 .word 0xc1bce040
	 .word 0xe1bcdf00
	 .word 0xc19cde20
	 .word 0xc1bce1c0
	 .word 0xe19ce240
	 .word 0xc19ce0c0
	 .word 0xc19ce040
	 .word 0xc19cde00
	 .word 0xe1bcdf20
	 .word 0xc19ce200
	 .word 0xc1bce340
	 .word 0xe19cde00
	 .word 0xe19ce100
	 .word 0xc1bcdf00
	 .word 0xc19cde20
	 .word 0xc19ce2c0
	 .word 0xe1bce100
	 .word 0xe1bcde20
	 .word 0xe19ce040
	 .word 0xe1bce300
	 .word 0xc19ce100
	 .word 0xe1bcde20
	 .word 0xe19cde20
	 .word 0xe1bce100
	 .word 0xc1bcdf00
	 .word 0xe19cde20
	 .word 0xe19cde20
	 .word 0xe1bcdf20
	 .word 0xe19ce240
	 .word 0xe1bcde20
	 .word 0xe1bce200
	 .word 0xc1bce0c0
	 .word 0xc19cdf20
	 .word 0xc1bcde20
	 .word 0xc19ce0c0
	 .word 0xc19ce200
	 .word 0xc1bcdf00
	 .word 0xc1bcdf00
	 .word 0xc1bce240
	 .word 0xe1bce100
	 .word 0xe1bcde20
	 .word 0xc19ce180
	 .word 0xe1bcdf20
	 .word 0xc1bce100
	 .word 0xe1bce380
	 .word 0xc1bce2c0
	 .word 0xe1bcde20
	 .word 0xc19ce280
	 .word 0xc1bce100
	 .word 0xc19ce100
	 .word 0xc19cdf20
	 .word 0xc19ce2c0
	 .word 0xc19cde00
	 .word 0xe1bcdf20
	 .word 0xe19cdf20
	 .word 0xe19ce3c0
	 .word 0xe1bce300
	 .word 0xc1bcde20
	 .word 0xe1bcdf00
	 .word 0xc1bce200
	 .word 0xc1bce300
	 .word 0xe19ce0c0
	 .word 0xe19ce0c0
	 .word 0xe19ce180
	 .word 0xe19cde20
	 .word 0xe19ce280
	 .word 0xe1bce280
	 .word 0xe1bcde20
	 .word 0xc1bcdf20
	 .word 0xc1bcdf00
	 .word 0xe1bcdf00
	 .word 0xc19ce280
	 .word 0xe1bcdf00
	 .word 0xe1bcde00
	 .word 0xc19ce300
	 .word 0xc1bcdf00
	 .word 0xe1bce000
	 .word 0xe19cde00
	 .word 0xc19ce0c0
	 .word 0xc1bcde00
	 .word 0xc19ce100
	 .word 0xc1bcde00
	 .word 0xe19ce380
	 .word 0xe1bce140
	 .word 0xe1bce040
	 .word 0xc19cdf20
	 .word 0xc1bcde00
	 .word 0xc19ce300
	 .word 0xc1bce040
	 .word 0xe19cde20
	 .word 0xc1bcdf00
	 .word 0xc1bce140
	 .word 0xe1bce300
	 .word 0xe19cdf00
	 .word 0xc19ce340
	 .word 0xc1bce0c0
	 .word 0xe1bcde20
	 .word 0xe1bcde20
	 .word 0xe1bce080
	 .word 0xe1bcdf20
	 .word 0xc19cde00
	 .word 0xc19cdf20
	 .word 0xc19cdf00
	 .word 0xe19ce100
	 .word 0xe1bcdf20
	 .word 0xe19cde20
	 .word 0xe1bcde00
	 .word 0xe1bcdf20
	 .word 0xc1bce240
	 .word 0xe19cde20
	 .word 0xe1bcde20
	 .word 0xc1bce200
	 .word 0xe1bcde00
	 .word 0xc19cdf00
	 .word 0xe19cdf20
	 .word 0xe19ce080
	 .word 0xe19ce100
	 .word 0xe19cde00
	 .word 0xc1bcdf20
	 .word 0xc19ce380
	 .word 0xc1bce280
	 .word 0xe1bce180
	 .word 0xc19ce080
	 .word 0xc19ce280
	 .word 0xc19ce3c0
	 .word 0xe19ce300
	 .word 0xc19cdf00
	 .word 0xc19ce2c0
	 .word 0xc1bcde20
	 .word 0xc1bcdf00
	 .word 0xc1bce1c0
	 .word 0xe19ce2c0
	 .word 0xe1bce200
	 .word 0xc1bce080
	 .word 0xe19cdf00
	 .word 0xc19ce040
	 .word 0xc1bcdf00
	 .word 0xc19ce040
	 .word 0xe1bce240
	 .word 0xe1bce200
	 .word 0xc1bcde20
	 .word 0xc19ce100
	 .word 0xc19ce280
	 .word 0xc19cdf00
	 .word 0xe1bcde20
	 .word 0xc1bce2c0
	 .word 0xe19ce3c0
	 .word 0xe1bce3c0
	 .word 0xc19ce2c0
	 .word 0xe1bcde00
	 .word 0xc19ce3c0
	 .word 0xc19ce3c0
	 .word 0xe19ce2c0
	 .word 0xe19cdf00
	 .word 0xe1bce3c0
	 .word 0xe19cdf00
	 .word 0xe19ce300
	 .word 0xe19cde00
	 .word 0xe1bcde00
	 .word 0xe1bce000
	 .word 0xe19cde00
	 .word 0xe1bce280
	 .word 0xc19cdf00
	 .word 0xe1bce140
	 .word 0xc19ce300
	 .word 0xe19cde00
	 .word 0xc1bce200
	 .word 0xc1bcde20
	 .word 0xe19cde20
	 .word 0xc19ce140
	 .word 0xc19ce280
	 .word 0xe19ce000
	 .word 0xe1bce080
	 .word 0xe1bcdf00
	 .word 0xc1bcde00
	 .word 0xe19cdf00
	 .word 0xe19cde20
	 .word 0xe19ce0c0
	 .word 0xe1bcdf00
	 .word 0xc19ce300
	 .word 0xc1bcde00
	 .word 0xc1bcde00
	 .word 0xc1bce0c0
	 .word 0xc19ce200
	 .word 0xc19ce180
	 .word 0xc19cde00
	 .word 0xc19ce280
	 .word 0xc19cdf00
	 .word 0xe19cde00
	 .word 0xc1bce380
	 .word 0xc1bcdf20
	 .word 0xc1bcde20
	 .word 0xe19ce1c0
	 .word 0xe19cdf00
	 .word 0xc1bcdf00
	 .word 0xe19ce140
	 .word 0xc19ce380
	 .word 0xc19cde20
	 .word 0xc19ce1c0
	 .word 0xc19cdf20
	 .word 0xc1bcdf00
	 .word 0xe1bcdf20
	 .word 0xc19ce280
	 .word 0xe19ce3c0
	 .word 0xe19cdf20
	 .word 0xc19ce140
	 .word 0xe19cdf00
	 .word 0xe19cde20
	 .word 0xc19ce200
	 .word 0xc19ce200
	 .word 0xe1bcdf00
	 .word 0xc19ce3c0
	 .word 0xe1bce340
	 .word 0xe1bcde00
	 .word 0xe1bce1c0
	 .word 0xc19cdf00
	 .word 0xe1bce040
	 .word 0xe1bce240
	 .word 0xc1bcdf20
	 .word 0xc1bce300
	 .word 0xe1bcde20
	 .word 0xc19cdf00
	 .word 0xc19ce3c0
	 .word 0xc1bcdf20
	 .word 0xe19ce240
	 .word 0xe1bcde00
	 .word 0xc19ce200
	 .word 0xc1bce0c0
	 .word 0xe19ce180
	 .word 0xe19ce240
	 .word 0xc19ce340
	 .word 0xe1bcdf20
	 .word 0xc19ce040
	 .word 0xe1bce3c0
	 .word 0xc19cde00
	 .word 0xe1bce380
	 .word 0xc1bce1c0
	 .word 0xc19cdf00
	 .word 0xc1bcdf20
	 .word 0xe1bce180
	 .word 0xc19ce240
	 .word 0xc19cde00
	 .word 0xc19cdf00
	 .word 0xc1bcde00
	 .word 0xe19ce100
	 .word 0xc1bcde20
	 .word 0xe1bce000
	 .word 0xc19cde00
	 .word 0xe19ce2c0
	 .word 0xc1bce080
	 .word 0xe19ce240
	 .word 0xc19ce1c0
	 .word 0xe1bce2c0
	 .word 0xc1bce180
	 .word 0xe1bcde20
	 .word 0xe19ce0c0
	 .word 0xc19cdf20
	 .word 0xc19cdf00
	 .word 0xe1bce3c0
	 .word 0xc1bcde20
	 .word 0xc1bce100
	 .word 0xe19ce380
	 .word 0xe1bcde00
	 .word 0xe1bcde20
	 .word 0xc1bcdf00
	 .word 0xe19ce300
	 .word 0xe19cdf20
	 .word 0xc19cde20
	 .word 0xe19cde00
	 .word 0xc1bce2c0
	 .word 0xe1bce140
	 .word 0xe19cde00
	 .word 0xc19cdf20
	 .word 0xe19cde00
	 .word 0xe19ce1c0
	 .word 0xe1bcde20
	 .word 0xe19cde20
	 .word 0xc1bcde00
	 .word 0xe19cde00
	 .word 0xc19cdf00
	 .word 0xc1bce3c0
	 .word 0xe1bcdf00
	 .word 0xc19cdf00
	 .word 0xc1bce300
	 .word 0xc1bce280
	 .word 0xe1bcde00
	 .word 0xc1bcdf20
	 .word 0xe1bcde00
	 .word 0xe1bcde00
	 .word 0xe19ce100
	 .word 0xc1bce040
	 .word 0xe19cdf20
	 .word 0xe1bce1c0
	 .word 0xe1bcde20
	 .word 0xe1bcdf20
	 .word 0xe1bcde20
	 .word 0xe1bce040
	 .word 0xc19ce200
	 .word 0xc1bcdf00
	 .word 0xc19cde00
	 .word 0xc19cdf00
	 .word 0xe19ce080
	 .word 0xe1bce240
	 .word 0xc1bce280
	 .word 0xc19ce040
	 .word 0xc19cdf20
	 .word 0xc1bce280
	 .word 0xc19ce240
	 .word 0xc19cde00
	 .word 0xc19cdf20
	 .word 0xc1bce040
	 .word 0xe19ce1c0
	 .word 0xe1bcdf00
	 .word 0xe19cde00
	 .word 0xc1bce080
	 .word 0xc1bcdf00
	 .word 0xc19cde00
	 .word 0xe1bcdf00
	 .word 0xc1bcdf00
	 .word 0xc1bcdf00
	 .word 0xc19ce1c0
	 .word 0xe1bcdf00
	 .word 0xc1bcde20
	 .word 0xe1bcdf00
	 .word 0xc19cde00
	 .word 0xe19cdf20
	 .word 0xe19cdf00
	 .word 0xe1bcdf00
	 .word 0xc1bce080
	 .word 0xe19ce300
	 .word 0xc1bce040
	 .word 0xc1bce100
	 .word 0xe19cde20
	 .word 0xe1bce1c0
	 .word 0xc1bcdf20
	 .word 0xe19cde20
	 .word 0xc19ce180
	 .word 0xe19cdf20
	 .word 0xc1bcde00
	 .word 0xe19cde00
	 .word 0xc1bce040
	 .word 0xc1bcde00
	 .word 0xe1bcdf00
	 .word 0xe19ce000
	 .word 0xe19cde00
	 .word 0xe1bce280
	 .word 0xc19ce2c0
	 .word 0xe19cdf00
	 .word 0xc1bcde00
	 .word 0xe19ce000
	 .word 0xc19ce080
	 .word 0xc19cdf00
	 .word 0xe1bcdf20
	 .word 0xe1bce280
	 .word 0xc19ce280
	 .word 0xe19ce2c0
	 .word 0xc1bce280
	 .word 0xc1bce3c0
	 .word 0xc19ce380
	 .word 0xc1bcdf00
	 .word 0xc1bce300
	 .word 0xe1bce380
	 .word 0xe1bce2c0
	 .word 0xe1bcdf00
	 .word 0xc19ce040
	 .word 0xe19ce240
	 .word 0xe1bcde00
	 .word 0xc1bce000
	 .word 0xe1bcde20
	 .word 0xe1bcdf00
	 .word 0xe1bce280
	 .word 0xe19cdf00
	 .word 0xe1bce040
	 .word 0xc1bcde00
	 .word 0xc19ce240
	 .word 0xe19ce340
	 .word 0xe1bce100
	 .word 0xc19cdf20
	 .word 0xc19ce140
	 .word 0xc1bce000
	 .word 0xe1bce100
	 .word 0xe1bce080
	 .word 0xc1bce080
	 .word 0xe1bcdf00
	 .word 0xe1bcdf00
	 .word 0xe19cdf00
	 .word 0xe1bce240
	 .word 0xe19cdf00
	 .word 0xc1bcde00
	 .word 0xe1bce140
	 .word 0xe19cde00
	 .word 0xe1bcde00
	 .word 0xc19cdf20
	 .word 0xe1bcde20
	 .word 0xc19cde00
	 .word 0xc1bce000
	 .word 0xe1bce280
	 .word 0xc1bce280
	 .word 0xe19ce040
	 .word 0xe1bcdf20
	 .word 0xc1bcde20
	 .word 0xc1bcde00
	 .word 0xc19ce000
	 .word 0xe19ce140
	 .word 0xe19cde20
	 .word 0xe19ce200
	 .word 0xc19cde00
	 .word 0xe19cdf20
	 .word 0xc19ce340
	 .word 0xe1bcdf20
	 .word 0xe19ce300
	 .word 0xe19ce300
	 .word 0xc1bce3c0
	 .word 0xe1bcde20
	 .word 0xc1bcdf00
	 .word 0xc19ce240
	 .word 0xc19ce380
	 .word 0xe1bce3c0
	 .word 0xe19ce2c0
	 .word 0xe19cde20
	 .word 0xe1bce300
	 .word 0xe19ce2c0
	 .word 0xc1bce3c0
	 .word 0xe1bce0c0
	 .word 0xc1bcdf00
	 .word 0xc19ce140
	 .word 0xe19ce380
	 .word 0xc1bce1c0
	 .word 0xc19cdf00
	 .word 0xe1bcde00
	 .word 0xe19ce180
	 .word 0xe1bcde20
	 .word 0xc19cdf00
	 .word 0xc19ce240
	 .word 0xc19ce180
	 .word 0xe19cde20
	 .word 0xc1bce1c0
	 .word 0xe19ce040
	 .word 0xe19ce200
	 .word 0xc1bcdf00
	 .word 0xe19cde00
	 .word 0xe19ce040
	 .word 0xc19cde20
	 .word 0xc1bce380
	 .word 0xc19cdf20
	 .word 0xe19cde20
	 .word 0xc1bcdf00
	 .word 0xc19cdf20
	 .word 0xc19ce200
	 .word 0xc19cdf20
	 .word 0xe1bcde20
	 .word 0xe1bcdf20
	 .word 0xe1bce380
	 .word 0xe1bce280
	 .word 0xe1bcde20
	 .word 0xe1bcde00
	 .word 0xe19ce180
	 .word 0xe19ce2c0
	 .word 0xe19cdf20
	 .word 0xc1bce000
	 .word 0xe1bce240
	 .word 0xc19cde20
	 .word 0xc19cde20
	 .word 0xc1bce140
	 .word 0xe1bce280
	 .word 0xe19ce000
	 .word 0xc19ce180
	 .word 0xe19ce3c0
	 .word 0xe19cde20
	 .word 0xe19cde00
	 .word 0xc19cde00
	 .word 0xe1bcdf20
	 .word 0xc19ce080
	 .word 0xe1bcde20
	 .word 0xc1bce240
	 .word 0xc1bce080
	 .word 0xe1bcdf20
	 .word 0xc1bcdf20
	 .word 0xc19cdf00
	 .word 0xc1bcdf00
	 .word 0xc19cde00
	 .word 0xe19ce280
	 .word 0xc1bcdf00
	 .word 0xe1bcdf20
	 .word 0xe1bcdf20
	 .word 0xc19cde00
	 .word 0xe1bce0c0
	 .word 0xe19ce1c0
	 .word 0xc19cde00
	 .word 0xe1bcde00
	 .word 0xe19ce1c0
	 .word 0xc19cde20
	 .word 0xc1bce240
	 .word 0xc1bcde20
	 .word 0xc19cdf20
	 .word 0xe19cde00
	 .word 0xc1bce180
	 .word 0xc1bce2c0
	 .word 0xc19ce340
	 .word 0xe1bcde20
	 .word 0xe1bce040
	 .word 0xc1bcdf00
	 .word 0xe19ce0c0
	 .word 0xc1bce040
	 .word 0xe1bce180
	 .word 0xc1bce380
	 .word 0xe19ce200
	 .word 0xc19ce2c0
	 .word 0xc1bce000
	 .word 0xc19cde00
	 .word 0xe19ce040
	 .word 0xe1bcdf20
	 .word 0xc1bcdf00
	 .word 0xc1bcdf00
	 .word 0xe1bce2c0
	 .word 0xe19cdf00
	 .word 0xe19cde20
	 .word 0xe1bce340
	 .word 0xe19cde20
	 .word 0xc19ce3c0
	 .word 0xc19ce340
	 .word 0xc1bcdf20
	 .word 0xc19ce2c0
	 .word 0xc19cdf00
	 .word 0xc1bcdf20
	 .word 0xe19cdf20
	 .word 0xc1bcde00
	 .word 0xe19cde20
	 .word 0xe19cde20
	 .word 0xc19ce180
	 .word 0xc19ce3c0
	 .word 0xe1bcdf20
	 .word 0xc19ce0c0
	 .word 0xc19ce180
	 .word 0xe1bcde20
	 .word 0xe19cdf00
	 .word 0xe19ce280
	 .word 0xe1bcde20
	 .word 0xc1bce040
	 .word 0xc1bcde00
	 .word 0xc1bce080
	 .word 0xc1bcdf00
	 .word 0xe19cde00
	 .word 0xe1bcde20
	 .word 0xe19ce240
	 .word 0xc1bce200
	 .word 0xc19ce3c0
	 .word 0xe1bce140
	 .word 0xe19ce2c0
	 .word 0xe1bce240
	 .word 0xc1bce300
	 .word 0xe19ce2c0
	 .word 0xe19ce300
	 .word 0xe19cdf20
	 .word 0xe19cdf20
	 .word 0xe19cde20
	 .word 0xe19ce300
	 .word 0xc19ce3c0
	 .word 0xe19ce340
	 .word 0xc1bce000
	 .word 0xe1bcdf00
	 .word 0xe1bce280
	 .word 0xe19ce040
	 .word 0xe19ce100
	 .word 0xc1bcdf00
	 .word 0xc1bcde00
	 .word 0xe1bce180
	 .word 0xc19ce0c0
	 .word 0xe19cdf20
	 .word 0xe1bce3c0
	 .word 0xc1bce2c0
	 .word 0xe19ce100
	 .word 0xe19ce380
	 .word 0xc1bcdf20
	 .word 0xe19cde20
	 .word 0xe1bce200
	 .word 0xe19ce0c0
	 .word 0xe1bce340
	 .word 0xe19cde00
	 .word 0xe1bce380
	 .word 0xe1bcde00
	 .word 0xc1bcdf20
	 .word 0xc1bcdf00
	 .word 0xe19cdf00
	 .word 0xe19ce000
	 .word 0xe1bce300
	 .word 0xc1bcde20
	 .word 0xe19cdf20
	 .word 0xe19cde00
	 .word 0xc1bcdf20
	 .word 0xc1bcdf20
	 .word 0xe19ce140
	 .word 0xc19cdf00
	 .word 0xe1bce040
	 .word 0xe19ce240
	 .word 0xc19cde20
	 .word 0xe19ce380
	 .word 0xe19cde00
	 .word 0xc1bce180
	 .word 0xc19ce3c0
	 .word 0xe19cdf00
	 .word 0xe1bce140
	 .word 0xe1bcdf00
	 .word 0xc19ce000
	 .word 0xc1bcde20
	 .word 0xe1bce1c0
	 .word 0xe19ce000
	 .word 0xc1bce280
	 .word 0xc19cdf20
	 .word 0xe19cdf00
	 .word 0xc19ce340
	 .word 0xe1bcdf00
	 .word 0xc19cde00
	 .word 0xc19ce080
	 .word 0xc1bce300
	 .word 0xc1bcde20
	 .word 0xe1bcdf00
	 .word 0xc1bce280
	 .word 0xe1bcde20
	 .word 0xc19cde00
	 .word 0xe1bce340
	 .word 0xc1bce2c0
	 .word 0xe1bcdf00
	 .word 0xe19cdf00
	 .word 0xc1bce040
	 .word 0xc1bce040
	 .word 0xe19ce100
	 .word 0xc19ce180
	 .word 0xc19ce080
	 .word 0xe1bce180
	 .word 0xe19cdf20
	 .word 0xe1bce340
	 .word 0xe19ce140
	 .word 0xe1bcdf00
	 .word 0xe19ce340
	 .word 0xe19cdf00
	 .word 0xe1bce380
	 .word 0xe19cde20
	 .word 0xc1bce180
	 .word 0xe19cde00
	 .word 0xc1bcde00
	 .word 0xe19ce040
	 .word 0xe19ce2c0
	 .word 0xc1bce3c0
	 .word 0xc1bcdf20
	 .word 0xe1bcdf00
	 .word 0xc19cdf00
	 .word 0xc19ce080
	 .word 0xc19ce080
	 .word 0xe19ce000
	 .word 0xc19cdf00
	 .word 0xe1bce180
	 .word 0xe19cde20
	 .word 0xc19ce380
	 .word 0xc19cdf20
	 .word 0xc19cdf00
	 .word 0xc19ce1c0
	 .word 0xe19ce0c0
	 .word 0xc1bce300
	 .word 0xc19cdf20
	 .word 0xc1bcdf00
	 .word 0xe19ce0c0
	 .word 0xc1bcde00
	 .word 0xc19cdf20
	 .word 0xe19cdf00
	 .word 0xc19cde00
	 .word 0xe1bcdf00
	 .word 0xc19cdf00
	 .word 0xe1bcde00
	 .word 0xc19cdf00
	 .word 0xe19cdf20
	 .word 0xe19cde00
	 .word 0xc19ce140
	 .word 0xc1bce380
	 .word 0xc19ce000
	 .word 0xc19cdf20
	 .word 0xe19cde00
	 .word 0xc1bce140
	 .word 0xc1bce0c0
	 .word 0xc1bce0c0
	 .word 0xc19cde00
	 .word 0xc1bce1c0
	 .word 0xc1bce200
	 .word 0xe1bce240
	 .word 0xc19cde00
	 .word 0xe19cde00
	 .word 0xe1bce280
	 .word 0xc1bce380
	 .word 0xe19cdf20
	 .word 0xe1bce0c0
	 .word 0xe19cdf20
	 .word 0xc19cdf20
	 .word 0xc1bcde20
	 .word 0xe19cdf20
	 .word 0xe1bcdf00
	 .word 0xe19ce040
	 .word 0xc1bce280
	 .word 0xe1bcdf20
	 .word 0xe19ce0c0
	 .word 0xe19ce380
	 .word 0xc19cdf20
	 .word 0xc19cde00
	 .word 0xe19cde20
	 .word 0xc19cde00
	 .word 0xc1bcde20
	 .word 0xc19cde20
	 .word 0xc19cdf20
	 .word 0xc1bcde20
	 .word 0xe19ce000
	 .word 0xe1bcdf20
	 .word 0xc19cde20
	 .word 0xc19cde20
	 .word 0xe19cde20
	 .word 0xe1bcdf00
	 .word 0xc19cde20
	 .word 0xc1bcdf20
	 .word 0xc19ce280
	 .word 0xc1bce280
	 .word 0xe19ce040
	 .word 0xc1bcdf20
	 .word 0xe19ce3c0
	 .word 0xc1bce240
	 .word 0xe19ce240
	 .word 0xc1bcdf20
	 .word 0xc1bce240
	 .word 0xe19ce140
	 .word 0xe19ce3c0
	 .word 0xe19ce180
	 .word 0xe1bce080
	 .word 0xe19ce300
	 .word 0xe1bcdf00
	 .word 0xe19ce3c0
	 .word 0xe19cdf00
	 .word 0xc1bcdf20
	 .word 0xc1bce200
	 .word 0xc19cdf00
	 .word 0xc1bcdf20
	 .word 0xc19ce3c0
	 .word 0xc19ce340
	 .word 0xc19cdf20
	 .word 0xc1bce0c0
	 .word 0xe19ce000
	 .word 0xe1bcde00
	 .word 0xc1bce240
	 .word 0xc19cdf20
	 .word 0xc19cde20
	 .word 0xc1bcde20
	 .word 0xe19cdf20
	 .word 0xc19ce380
	 .word 0xc19cde20
	 .word 0xc1bce080
	 .word 0xe1bcde00
	 .word 0xc19ce2c0
	 .word 0xc1bcdf20
	 .word 0xe19cde00
	 .word 0xc19cde00
	 .word 0xe1bce380
	 .word 0xc19cde20
	 .word 0xe19ce140
	 .word 0xc19ce180
	 .word 0xe1bcdf00
	 .word 0xe19cdf20
	 .word 0xc19cdf20
	 .word 0xe19ce240
	 .word 0xc1bcde20
	 .word 0xc1bcde20
	 .word 0xc19cdf00
	 .word 0xc19cdf00
	 .word 0xc19cde20
	 .word 0xe1bce040
	 .word 0xe19cdf00
	 .word 0xe1bce100
	 .word 0xc19cde20
	 .word 0xc1bce300
	 .word 0xc19ce280
	 .word 0xc19ce080
	 .word 0xe19cde00
	 .word 0xc1bcdf20
	 .word 0xc1bce200
	 .word 0xe1bce280
	 .word 0xc19cde20
	 .word 0xe19ce000
	 .word 0xc19cde20
	 .word 0xc19ce180
	 .word 0xc19ce2c0
	 .word 0xe19ce180
	 .word 0xc1bcde20
	 .word 0xe1bcde20
	 .word 0xe1bcde00
	 .word 0xe19cdf20
	 .word 0xe1bcdf00
	 .word 0xe19cde20
	 .word 0xe19cdf00
	 .word 0xc1bcdf00
	 .word 0xc19ce240
	 .word 0xc1bce1c0
	 .word 0xc1bce080
	 .word 0xc19ce2c0
	 .word 0xc1bcde00
	 .word 0xc19ce0c0
	 .word 0xe1bce380
	 .word 0xe1bce280
	 .word 0xc1bcdf00
	 .word 0xc1bce240
	 .word 0xe19ce3c0
	 .word 0xc19cdf20
	 .word 0xe1bce1c0
	 .word 0xe1bcde00
	 .word 0xe1bce080
	 .word 0xc1bce080
	 .word 0xe1bcde00
	 .word 0xc1bce180
	 .word 0xc19ce200
	 .word 0xc19cdf00
	 .word 0xc19cde00
	 .word 0xc19cde00
	 .word 0xc19ce200
	 .word 0xc1bce340
	 .word 0xe19cdf20
	 .word 0xc19ce140
	 .word 0xe19ce340
	 .word 0xc19ce240
	 .word 0xe1bcdf20
	 .word 0xc1bcde00
	 .word 0xe19ce280
	 .word 0xc1bcdf00
	 .word 0xe19ce040
	 .word 0xe19ce2c0
	 .word 0xc1bcdf00
	 .word 0xe1bcde00
	 .word 0xe19ce300
	 .word 0xc19cde00
	 .word 0xe19cde00
	 .word 0xc19cde00
	 .word 0xc1bcdf00
	 .word 0xe19cde00
	 .word 0xe1bcde20
	 .word 0xe19cde20
	 .word 0xc1bcde00
	 .word 0xe1bce100
	 .word 0xc19cde00
	 .word 0xc1bce380
	 .word 0xe19ce280
	 .word 0xc19cdf20
	 .word 0xe1bcde00
	 .word 0xe1bcdf20
	 .word 0xe19cde20
	 .word 0xe19ce040
	 .word 0xe19ce000
	 .word 0xe19cde20
	 .word 0xe19ce380
	 .word 0xe19cdf00
	 .word 0xe1bce040
	 .word 0xc19cdf20
	 .word 0xc19ce040
	 .word 0xc1bcde20
	 .word 0xc1bcde20
	 .word 0xe19ce380
	 .word 0xc19cdf20
	 .word 0xe19cde20
	 .word 0xc1bcde00
	 .word 0xe1bcde20
	 .word 0xe1bce240
	 .word 0xc1bce100
	 .word 0xc1bce300
	 .word 0xe1bcdf00
	 .word 0xc1bce000
	 .word 0xe19cde20
	 .word 0xc1bcdf20
	 .word 0xc19cdf20
	 .word 0xe19cde00
	 .word 0xe19ce000
	 .word 0xc19cde20
	 .word 0xc19cdf00
	 .word 0xc19cdf00
	 .word 0xc1bce380
	 .word 0xe19cde20
	 .word 0xc1bcde00
	 .word 0xc19cdf00
	 .word 0xe1bcdf00
	 .word 0xc1bce100
	 .word 0xc19ce080
	 .word 0xc19ce340
	 .word 0xe1bce2c0
	 .word 0xe19cdf20
	 .word 0xc19ce100
	 .word 0xc1bce140
	 .word 0xe1bcdf20
	 .word 0xc19cde00
	 .word 0xe1bcde00
	 .word 0xe1bce340
	 .word 0xc19cde20
	 .word 0xc1bce240
	 .word 0xe1bcde20
	 .word 0xe19cde20
	 .word 0xe1bce080
	 .word 0xe1bcdf20
	 .word 0xe19ce000
	 .word 0xe1bcde20
	 .word 0xc1bcde20
	 .word 0xc1bcde00
	 .word 0xe19ce300
	 .word 0xe19ce180
	 .word 0xe1bcde20
	 .word 0xe19cde00
	 .word 0xc1bce240
	 .word 0xc1bce1c0
	 .word 0xe1bce0c0
	 .word 0xc19ce380
	 .word 0xe1bce240
	 .word 0xc1bce0c0
	 .word 0xc19ce040
	 .word 0xe19ce1c0
	 .word 0xc19cde20
	 .word 0xc19cde20
	 .word 0xe19cde20
	 .word 0xe19ce340
	 .word 0xc1bce2c0
	 .word 0xe1bce280
	 .word 0xc19cde00
	 .word 0xc1bce3c0
	 .word 0xc19ce3c0
	 .word 0xc19ce000
	 .word 0xe19cde00
	 .word 0xe19ce0c0
	 .word 0xc1bcdf20
	 .word 0xc1bcdf00
	 .word 0xc19cde00
	 .word 0xe1bcdf20
	 .word 0xe1bce380
	 .word 0xe1bcde20
	 .word 0xe19ce1c0
	 .word 0xe19cde00
	 .word 0xe19ce340
	 .word 0xc19ce000
	 .word 0xc1bce380
	 .word 0xc19cdf20
	 .word 0xc19cde00
	 .word 0xc1bcdf20
	 .word 0xe1bce040
	 .word 0xe19ce300
	 .word 0xc19cde00
	 .word 0xe19ce100
	 .word 0xe19ce240
	 .word 0xc19cdf00
	 .word 0xe19cdf00
	 .word 0xc19ce280
	 .word 0xe1bcdf20
	 .word 0xe1bcdf00
	 .word 0xe1bcdf00
	 .word 0xe1bcde20
	 .word 0xe1bcdf00
	 .word 0xe1bce0c0
	 .word 0xc19ce1c0
	 .word 0xe1bcdf00
	 .word 0xe19cde20
	 .word 0xc1bce340
	 .word 0xc19ce140
	 .word 0xe19ce040
	 .word 0xe19cde20
	 .word 0xe1bcdf00
	 .word 0xe19cdf20
	 .word 0xc1bcde00
	 .word 0xc1bce180
	 .word 0xc1bce240
	 .word 0xe19ce040
	 .word 0xe19cdf20
	 .word 0xc19cde00
	 .word 0xc19cdf20
	 .word 0xe19cde20
	 .word 0xc19ce300
	 .word 0xe19ce340
	 .word 0xe1bce340
	 .word 0xc19cdf00
	 .word 0xc1bcdf00
	 .word 0xe19ce340
	 .word 0xc1bcde20
	 .word 0xc1bcdf20
	 .word 0xc19ce380
	 .word 0xe19cde00
	 .word 0xe19ce100
	 .word 0xc1bce280
	 .word 0xc1bcde00
	 .word 0xc1bce0c0
	 .word 0xe1bce000
	 .word 0xc1bce3c0
	 .word 0xc1bce040
	 .word 0xc1bcde20
	 .word 0xc19cde20
	 .word 0xc1bcde00
	 .word 0xe1bce040
	 .word 0xc1bce100
	 .word 0xe1bcde20
	 .word 0xc19ce240
	 .word 0xe19ce040
	 .word 0xc1bcde00
	 .word 0xc19ce200
	 .word 0xe19cde20
	 .word 0xc1bcde20
	 .word 0xe1bcdf00
	 .word 0xe19ce3c0
	 .word 0xe19cde20
	 .word 0xe1bce140
	 .word 0xc19cdf20
	 .word 0xc1bce2c0
	 .word 0xc1bce1c0
	 .word 0xe1bce340
	 .word 0xe19cdf00
	 .word 0xc19ce340
	 .word 0xc1bcde00
	 .word 0xe1bce100
	 .word 0xc1bcdf20
	 .word 0xe1bce080
	 .word 0xc19ce000
	 .word 0xc1bce1c0
	 .word 0xc1bce080
	 .word 0xc1bcde00
	 .word 0xe1bce0c0
	 .word 0xc19cdf00
	 .word 0xe19ce100
	 .word 0xe1bce240
	 .word 0xe1bce2c0
	 .word 0xc1bcde20
	 .word 0xc19cdf00
	 .word 0xc19ce340
	 .word 0xc1bcde00
	 .word 0xc1bce0c0
	 .word 0xc1bce280
	 .word 0xc1bcdf00
	 .word 0xe1bcde00
	 .word 0xc19ce380
	 .word 0xe19ce140
	 .word 0xe19cdf20
	 .word 0xe1bce240
	 .word 0xe1bce380
	 .word 0xe1bcdf00
	 .word 0xe1bce380
	 .word 0xc19cdf20
	 .word 0xc19cde00
	 .word 0xc1bce380
	 .word 0xc1bcdf20
	 .word 0xc19cdf00
	 .word 0xc19ce240
	 .word 0xc19ce000
	 .word 0xc1bcdf20
	 .word 0xe19ce040
	 .word 0xc1bce100
	 .word 0xe19cde00
	 .word 0xe1bce000
	 .word 0xc1bcde20
	 .word 0xc1bcdf00
	 .word 0xc19ce140
	 .word 0xe1bcdf20
	 .word 0xe1bcde00
	 .word 0xe19cdf20
	 .word 0xc19cdf00
	 .word 0xe19ce000
	 .word 0xc19ce240
	 .word 0xc1bce100
	 .word 0xe1bcde20
	 .word 0xc19ce380
	 .word 0xc1bcde20
	 .word 0xe19ce2c0
	 .word 0xe1bcdf00
	 .word 0xc1bcdf00
	 .word 0xe1bcdf20
	 .word 0xe1bce280
	 .word 0xc19ce1c0
	 .word 0xe19ce180
	 .word 0xc1bce240
	 .word 0xc19cde00
	 .word 0xe1bce1c0
	 .word 0xe1bcde20
	 .word 0xc19ce140
	 .word 0xc19cdf20
	 .word 0xc1bcdf20
	 .word 0xc19cde00
	 .word 0xc19cdf00
	 .word 0xc19cdf20
	 .word 0xc19cde20
	 .word 0xc19cde20
	 .word 0xc1bcde20
	 .word 0xc1bce340
	 .word 0xc19cde00
	 .word 0xe19cdf00
	 .word 0xc1bcde20
	 .word 0xe19ce0c0
	 .word 0xe1bce040
	 .word 0xc1bce300
	 .word 0xc1bcde20
	 .word 0xe19ce040
	 .word 0xc1bcdf20
	 .word 0xc19cde20
	 .word 0xc1bce180
	 .word 0xc19cde00
	 .word 0xc1bce040
	 .word 0xc19ce3c0
	 .word 0xe1bce100
	 .word 0xe19cdf20
	 .word 0xc1bcdf20
	 .word 0xc19cdf20
	 .word 0xc19cde00
	 .word 0xc1bce340
	 .word 0xe19cde00
	 .word 0xc1bce0c0
	 .word 0xc1bcde00
	 .word 0xe19cde20
	 .word 0xc19ce180
	 .word 0xe1bce0c0
	 .word 0xc19ce080
	 .word 0xe19ce140
	 .word 0xc19cdf00
	 .word 0xe1bce040
	 .word 0xe19ce300
	 .word 0xe19ce340
	 .word 0xc19cde00
	 .word 0xe19ce140
	 .word 0xe19ce280
	 .word 0xe1bce300
	 .word 0xc1bcdf20
	 .word 0xc19cdf20
	 .word 0xc19cdf20
	 .word 0xc19ce140
	 .word 0xc1bcdf00
	 .word 0xe1bcdf20
	 .word 0xe19ce140
	 .word 0xe1bce1c0
	 .word 0xe1bcdf00
	 .word 0xe1bce200
	 .word 0xc19ce3c0
	 .word 0xc1bcdf00
	 .word 0xe1bce340
	 .word 0xc1bcde00
	 .word 0xe1bce140
	 .word 0xc19cde20
	 .word 0xc1bcdf20
	 .word 0xc1bce300
	 .word 0xc19ce380
	 .word 0xe19ce3c0
	 .word 0xe1bcdf20
	 .word 0xc19cde00
	 .word 0xe1bce000
	 .word 0xc19cdf20
	 .word 0xe1bcdf20
	 .word 0xe19cde00
	 .word 0xe19ce240
	 .word 0xe19ce000
	 .word 0xe19ce380
	 .word 0xc1bce080
	 .word 0xc19ce280
	 .word 0xe1bce000
	 .word 0xc1bcdf20
	 .word 0xe1bce040
	 .word 0xe1bcde20
	 .word 0xc19cde00
	 .word 0xe1bce100
	 .word 0xe19ce2c0
	 .word 0xc1bcde20
	 .word 0xe19cdf00
	 .word 0xe1bce200
	 .word 0xe19ce0c0
	 .word 0xe19ce180
	 .word 0xc19cdf20
	 .word 0xc1bce1c0
	 .word 0xc19ce200
	 .word 0xc19ce380
	 .word 0xe1bcdf20
	 .word 0xe1bce080
	 .word 0xc1bce280
	 .word 0xe1bcde20
	 .word 0xc1bce080
	 .word 0xe19cde00
	 .word 0xc1bcde00
	 .word 0xe1bce240
	 .word 0xe1bce040
	 .word 0xe19ce100
	 .word 0xc19ce280
	 .word 0xc1bce0c0
	 .word 0xe19cdf20
	 .word 0xe19cdf00
	 .word 0xe1bcde20
	 .word 0xc19ce200
	 .word 0xe19ce380
	 .word 0xe1bce0c0
	 .word 0xc1bce380
	 .word 0xe19cdf20
	 .word 0xe1bcde20
	 .word 0xe1bcdf00
	 .word 0xe1bce080
	 .word 0xc19ce380
	 .word 0xe1bcde20
	 .word 0xe1bcdf20
	 .word 0xe1bce100
	 .word 0xe1bcde00
	 .word 0xc1bce3c0
	 .word 0xc1bce1c0
	 .word 0xe1bcdf20
	 .word 0xc19cde00
	 .word 0xe1bcde00
	 .word 0xc19ce0c0
	 .word 0xe1bce340
	 .word 0xc19ce100
	 .word 0xe1bcdf00
	 .word 0xc1bce3c0
	 .word 0xc19cdf00
	 .word 0xe19cdf20
	 .word 0xc19ce380
	 .word 0xe1bce2c0
	 .word 0xe1bcde20
	 .word 0xe19cde20
	 .word 0xe19cde20
	 .word 0xe1bce040
	 .word 0xe19cdf00
	 .word 0xc1bcde00
	 .word 0xe19cdf20
	 .word 0xc19ce340
	 .word 0xe1bcdf20
	 .word 0xe1bcdf20
	 .word 0xe19cde20
	 .word 0xe1bce000
	 .word 0xc19ce1c0
	 .word 0xc19cde00
	 .word 0xe19cde20
	 .word 0xe1bcdf20
	 .word 0xe1bce200
	 .word 0xe1bce380
	 .word 0xc1bce2c0
	 .word 0xe1bcdf20
	 .word 0xe1bcdf20
	 .word 0xe19cde00
	 .word 0xc1bce100
	 .word 0xc19ce2c0
	 .word 0xc1bce3c0
	 .word 0xc19ce140
	 .word 0xc1bcdf00
	 .word 0xc19cdf20
	 .word 0xe1bcdf20
	 .word 0xc19ce100
	 .word 0xc19ce040
	 .word 0xc1bce080
	 .word 0xe1bcdf00
	 .word 0xc19cdf20
	 .word 0xe19cde20
	 .word 0xc1bcde00
	 .word 0xe19ce3c0
	 .word 0xe19cdf00
	 .word 0xc19ce2c0
	 .word 0xc19cdf20
	 .word 0xe1bcdf20
	 .word 0xe1bcde20
	 .word 0xe19cde00
	 .word 0xc19ce140
	 .word 0xe1bcdf00
	 .word 0xe1bce080
	 .word 0xe1bcde00
	 .word 0xc19ce300
	 .word 0xc19ce2c0
	 .word 0xe1bce300
	 .word 0xe1bcde00
	 .word 0xe1bce240
	 .word 0xe19ce200
	 .word 0xe1bcde20
	 .word 0xc1bcde00
	 .word 0xe19cde00
	 .word 0xe1bce2c0
	 .word 0xc19ce200
	 .word 0xe19ce380
	 .word 0xe19ce040
	 .word 0xe1bce200
	 .word 0xe19cdf00
	 .word 0xc19cde00
	 .word 0xe1bcdf00
	 .word 0xe1bcdf00
	 .word 0xc1bce140
	 .word 0xc19cdf00
	 .word 0xe19ce380
	 .word 0xe1bce080
	 .word 0xe19cde20
	 .word 0xe19cdf00
	 .word 0xe19ce280
	 .word 0xc1bcdf00
	 .word 0xe1bcdf00
	 .word 0xc19cde20
	 .word 0xc1bcde00
	 .word 0xc19cde20
	 .word 0xc19ce380
	 .word 0xc1bce280
	 .word 0xc1bcdf20
	 .word 0xc19cdf20
	 .word 0xc19cdf20
	 .word 0xe1bce280
	 .word 0xe19cde20
	 .word 0xe1bce0c0
	 .word 0xe19ce180
	 .word 0xc1bce000
	 .word 0xe1bcdf20
	 .word 0xc1bcdf00
	 .word 0xc19cdf20
	 .word 0xe1bcde00
	 .word 0xc1bce2c0
	 .word 0xc19cde20
	 .word 0xc1bcde20
	 .word 0xe19ce200
	 .word 0xe19cdf20
	 .word 0xc1bcde00
	 .word 0xe1bcde20
	 .word 0xe1bcdf20
	 .word 0xc19cde00
	 .word 0xe19ce100
	 .word 0xc1bcdf00
	 .word 0xc19cde00
	 .word 0xe19cdf00
	 .word 0xc1bce2c0
	 .word 0xc19ce0c0
	 .word 0xe1bcde20
	 .word 0xe1bce100
	 .word 0xc19cdf00
	 .word 0xc1bce280
	 .word 0xc1bce040
	 .word 0xc19cdf00
	 .word 0xe1bcde20
	 .word 0xc19ce200
	 .word 0xe19cde20
	 .word 0xe19ce2c0
	 .word 0xe19cde20
	 .word 0xe19ce000
	 .word 0xe1bce040
	 .word 0xc19ce2c0
	 .word 0xe1bcde00
	 .word 0xc1bcdf20
	 .word 0xc19ce1c0
	 .word 0xc1bce1c0
	 .word 0xe19cde00
	 .word 0xe19cde20
	 .word 0xc19ce280
	 .word 0xc19ce2c0
	 .word 0xc1bce280
	 .word 0xe1bcde00
	 .word 0xc1bcde00
	 .word 0xc19cdf00
	 .word 0xe19ce0c0
	 .word 0xc19cde20
	 .word 0xe1bce1c0
	 .word 0xc1bce2c0
	 .word 0xe1bcdf20
	 .word 0xc1bce240
	 .word 0xc19cde00
	 .word 0xc19ce1c0
	 .word 0xc1bcde00
	 .word 0xe1bce240
	 .word 0xe19cdf20
	 .word 0xe1bce240
	 .word 0xe1bcde20
	 .word 0xc19ce000
	 .word 0xe1bce140
	 .word 0xc19ce3c0
	 .word 0xe19ce280
	 .word 0xe19cdf00
	 .word 0xc19ce200
	 .word 0xc19cde00
	 .word 0xc1bce340
	 .word 0xe19cdf00
	 .word 0xe1bcde20
	 .word 0xc19ce1c0
	 .word 0xe19cde20
	 .word 0xe1bce200
	 .word 0xe19ce300
	 .word 0xc1bcde00
	 .word 0xe1bcde20
	 .word 0xc19cde00
	 .word 0xe19cdf00
	 .word 0xe1bce340
	 .word 0xc1bcde00
	 .word 0xe19ce200
	 .word 0xe1bcde20
	 .word 0xc19cde20
	 .word 0xe1bce040
	 .word 0xc19ce2c0
	 .word 0xc19ce040
	 .word 0xe19cde20
	 .word 0xe19cdf00
	 .word 0xc1bce000
	 .word 0xe1bcdf20
	 .word 0xc19cdf20
	 .word 0xc19cdf00
	 .word 0xc19cdf20
	 .word 0xe19ce040
	 .word 0xe19cde20
	 .word 0xe1bcde20
	 .word 0xc1bcdf00
	 .word 0xc19ce380
	 .word 0xc1bcde20
	 .word 0xe19ce1c0
	 .word 0xc19ce1c0
	 .word 0xe19cdf00
	 .word 0xe1bce200
	 .word 0xe1bcde00
	 .word 0xc19cde20
	 .word 0xe19cdf00
	 .word 0xe19cdf00
	 .word 0xe19ce000
	 .word 0xc1bcdf20
	 .word 0xc1bce080
	 .word 0xe1bce200
	 .word 0xe1bce2c0
	 .word 0xc19cdf20
	 .word 0xe1bcdf20
	 .word 0xe1bce200
	 .word 0xe19cde20
	 .word 0xc1bcdf20
	 .word 0xe19cde20
	 .word 0xc1bcde00
	 .word 0xe1bcdf00
	 .word 0xc19ce3c0
	 .word 0xc1bce0c0
	 .word 0xe19cdf20
	 .word 0xc19cdf20
	 .word 0xc19ce080
	 .word 0xe1bce1c0
	 .word 0xc1bce3c0
	 .word 0xe1bce100
	 .word 0xc1bce100
	 .word 0xc1bcde00
	 .word 0xe1bcdf20
	 .word 0xc19cdf20
	 .word 0xe19cde20
	 .word 0xc19ce000
	 .word 0xe1bcdf00
	 .word 0xe1bce280
	 .word 0xe1bce000
	 .word 0xc1bcdf20
	 .word 0xe1bcdf20
	 .word 0xe1bce2c0
	 .word 0xc1bcde00
	 .word 0xe1bcde00
	 .word 0xc19cde00
	 .word 0xc19cde20
	 .word 0xc1bce100
	 .word 0xc1bce340
	 .word 0xe1bce240
	 .word 0xc1bcde00
	 .word 0xc19ce280
	 .word 0xe19cde00
	 .word 0xe19cde00
	 .word 0xe19ce380
	 .word 0xe1bcdf20
	 .word 0xe19ce0c0
	 .word 0xc19ce3c0
	 .word 0xe1bcde00
	 .word 0xc19ce280
	 .word 0xc1bcdf20
	 .word 0xc1bcde00
	 .word 0xe1bce2c0
	 .word 0xe19cde20
	 .word 0xe19cdf00
	 .word 0xc1bcdf20
	 .word 0xe1bcde20
	 .word 0xc19cde20
	 .word 0xc19ce340
	 .word 0xe1bce040
	 .word 0xe19cde00
	 .word 0xc1bcdf00
	 .word 0xe19ce380
	 .word 0xe1bcdf00
	 .word 0xe19cde00
	 .word 0xc19ce180
	 .word 0xe1bcde00
	 .word 0xc19cde20
	 .word 0xe19cde20
	 .word 0xc1bcdf00
	 .word 0xc1bcde00
	 .word 0xe1bcdf20
	 .word 0xe1bcde20
	 .word 0xe19cdf00
	 .word 0xc19ce140
	 .word 0xc1bce300
	 .word 0xc1bce100
	 .word 0xe19ce0c0
	 .word 0xc19cde20
	 .word 0xc1bcdf00
	 .word 0xc19ce240
	 .word 0xc19cdf20
	 .word 0xe1bce240
	 .word 0xe19cde20
	 .word 0xc19cde00
	 .word 0xe19cdf00
	 .word 0xe19cde20
	 .word 0xc1bce380
	 .word 0xe1bcdf20
	 .word 0xe19ce1c0
	 .word 0xe1bce200
	 .word 0xe1bce040
	 .word 0xc1bcdf20
	 .word 0xc19ce080
	 .word 0xc19ce240
	 .word 0xc1bcdf00
	 .word 0xe1bce340
	 .word 0xe19cde00
	 .word 0xc1bcde00
	 .word 0xc1bce140
	 .word 0xc19ce340
	 .word 0xe1bcde00
	 .word 0xe1bce1c0
	 .word 0xe19cde20
	 .word 0xc1bce2c0
	 .word 0xc19ce300
	 .word 0xe19cdf00
	 .word 0xc1bce040
	 .word 0xe1bce200
	 .word 0xc19ce1c0
	 .word 0xc19cde00
	 .word 0xe19cde20
	 .word 0xe1bce3c0
	 .word 0xe19cde20
	 .word 0xc1bce080
	 .word 0xe1bce040
	 .word 0xc19ce0c0
	 .word 0xc1bce240
	 .word 0xe1bcde00
	 .word 0xc19cde20
	 .word 0xe1bce000
	 .word 0xe19cdf20
	 .word 0xc1bce380
	 .word 0xe1bcdf20
	 .word 0xc1bce000
	 .word 0xe19cdf00
	 .word 0xe19ce340
	 .word 0xe1bce140
	 .word 0xc1bcdf00
	 .word 0xc19cde00
	 .word 0xe1bcdf00
	 .word 0xc1bcdf20
	 .word 0xe1bce140
	 .word 0xe19cde00
	 .word 0xe1bcde00
	 .word 0xe19cdf00
	 .word 0xe19ce1c0
	 .word 0xe19cdf00
	 .word 0xe19ce080
	 .word 0xe19cdf00
	 .word 0xc1bce3c0
	 .word 0xe19cde00
	 .word 0xe19ce340
	 .word 0xe1bcdf00
	 .word 0xc1bce2c0
	 .word 0xc19ce280
	 .word 0xc1bce040
	 .word 0xc19ce240
	 .word 0xe19cdf20
	 .word 0xc19ce140
	 .word 0xe19ce3c0
	 .word 0xc19cdf20
	 .word 0xc1bcdf20
	 .word 0xc19cde00
	 .word 0xe19cde00
	 .word 0xc19ce280
	 .word 0xe19ce140
	 .word 0xc19ce2c0
	 .word 0xc19cde00
	 .word 0xe1bcde20
	 .word 0xc1bcdf20
	 .word 0xc19cde20
	 .word 0xc1bcdf20
	 .word 0xe1bce240
	 .word 0xe19cdf00
	 .word 0xc19ce200
	 .word 0xc19cde00
	 .word 0xc19ce1c0
	 .word 0xc19ce380
	 .word 0xe1bce100
	 .word 0xe1bce200
	 .word 0xc19cdf20
	 .word 0xe1bce040
	 .word 0xc1bce0c0
	 .word 0xc19cdf20
	 .word 0xc1bce240
	 .word 0xe19cde00
	 .word 0xe19ce200
	 .word 0xc19ce180
	 .word 0xc1bce040
	 .word 0xc19cdf00
	 .word 0xe1bce100
	 .word 0xe1bcdf20
	 .word 0xe19ce280
	 .word 0xc1bcde20
	 .word 0xc19cde00
	 .word 0xc19cdf20
	 .word 0xe19cde00
	 .word 0xe1bcde00
	 .word 0xc1bcde00
	 .word 0xc1bcde00
	 .word 0xc19ce180
	 .word 0xe1bce040
	 .word 0xc19ce200
	 .word 0xe1bce240
	 .word 0xe1bcdf00
	 .word 0xe19ce1c0
	 .word 0xc1bcde00
	 .word 0xe1bce1c0
	 .word 0xe1bce140
	 .word 0xe1bcde20
	 .word 0xe1bce300
	 .word 0xc1bce3c0
	 .word 0xc1bce080
	 .word 0xc1bcdf00
	 .word 0xe19cde00
	 .word 0xc1bce300
	 .word 0xc19cdf00
	 .word 0xe1bcdf20
	 .word 0xc1bce080
	 .word 0xc1bce0c0
	 .word 0xc19ce180
	 .word 0xe1bcde20
	 .word 0xe19cde20
	 .word 0xe19cde00
	 .word 0xe19ce140
	 .word 0xe19cde20
	 .word 0xc19cde20
	 .word 0xe19cde20
	 .word 0xc1bcde20
	 .word 0xc19cdf20
	 .word 0xe19ce1c0
	 .word 0xe19ce100
	 .word 0xc19cde00
	 .word 0xc1bcdf00
	 .word 0xc1bce280
	 .word 0xc1bce040
	 .word 0xe1bcde00
	 .word 0xc19cdf20
	 .word 0xe1bce000
	 .word 0xe19cdf00
	 .word 0xe1bcdf00
	 .word 0xe19ce080
	 .word 0xe19cdf20
	 .word 0xc1bce280
	 .word 0xc1bce380
	 .word 0xc1bce080
	 .word 0xe19ce3c0
	 .word 0xe19ce000
	 .word 0xe1bcdf00
	 .word 0xc19ce180
	 .word 0xe19ce300
	 .word 0xe1bce2c0
	 .word 0xc1bce000
	 .word 0xe1bcdf20
	 .word 0xe1bcdf00
	 .word 0xe19ce300
	 .word 0xe19ce280
	 .word 0xe19cdf20
	 .word 0xc19ce280
	 .word 0xc1bcdf20
	 .word 0xc1bcde00
	 .word 0xc19cde20
	 .word 0xc19cdf20
	 .word 0xe19ce200
	 .word 0xc1bcde20
	 .word 0xe19ce380
	 .word 0xe19cdf00
	 .word 0xe1bcdf20
	 .word 0xc19ce040
	 .word 0xe1bce040
	 .word 0xc1bcdf00
	 .word 0xe19cdf20
	 .word 0xc1bcde00
	 .word 0xc19ce300
	 .word 0xe1bce0c0
	 .word 0xe1bcde20
	 .word 0xc19ce200
	 .word 0xc19cde00
	 .word 0xe19ce000
	 .word 0xc1bcde00
	 .word 0xe19ce080
	 .word 0xe1bcde00
	 .word 0xe1bce340
	 .word 0xe1bce280
	 .word 0xc19cdf20
	 .word 0xe19ce0c0
	 .word 0xe1bce340
	 .word 0xc19cdf00
	 .word 0xc1bce040
	 .word 0xe19ce380
	 .word 0xc1bce140
	 .word 0xc1bce300
	 .word 0xe1bcde20
	 .word 0xc19cdf00
	 .word 0xe19ce300
	 .word 0xe19cdf20
	 .word 0xe19cde00
	 .word 0xe1bce000
	 .word 0xe1bce2c0
	 .word 0xc1bce1c0
	 .word 0xe1bcde20
	 .word 0xc19cdf00
	 .word 0xc19ce200
	 .word 0xc1bce080
	 .word 0xe1bce180
	 .word 0xc1bcde20
	 .word 0xe1bce340
	 .word 0xe19ce140
	 .word 0xe19cdf00
	 .word 0xc19ce380
	 .word 0xc19ce340
	 .word 0xc19cde00
	 .word 0xc19ce100
	 .word 0xc1bce0c0
	 .word 0xc19ce080
	 .word 0xc19cdf00
	 .word 0xc19ce240
	 .word 0xc1bcdf00
	 .word 0xc1bce380
	 .word 0xe19cdf20
	 .word 0xc1bce240
	 .word 0xc19cde20
	 .word 0xe1bcde20
	 .word 0xe1bce0c0
	 .word 0xc19ce1c0
	 .word 0xc19cde00
	 .word 0xc1bcdf20
	 .word 0xe1bce340
	 .word 0xe1bcdf20
	 .word 0xc19ce080
	 .word 0xe19ce2c0
	 .word 0xc1bce2c0
	 .word 0xe1bcdf00
	 .word 0xc1bce180
	 .word 0xc1bcdf20
	 .word 0xc19cdf20
	 .word 0xe1bcde20
	 .word 0xe19ce240
	 .word 0xe1bce140
	 .word 0xc1bce180
	 .word 0xe19ce240
	 .word 0xc1bce240
	 .word 0xc1bcde00
	 .word 0xe1bce180
	 .word 0xc1bce040
	 .word 0xe1bcde00
	 .word 0xc1bce0c0
	 .word 0xc1bcdf00
	 .word 0xe1bce3c0
	 .word 0xe19ce080
	 .word 0xe19cdf20
	 .word 0xc19cde00
	 .word 0xe19ce0c0
	 .word 0xe19cde20
	 .word 0xe19cdf20
	 .word 0xe1bce240
	 .word 0xc19cde20
	 .word 0xc19cde00
	 .word 0xe1bce200
	 .word 0xc19cde00
	 .word 0xe19ce140
	 .word 0xc19cdf20
	 .word 0xc1bcdf20
	 .word 0xe1bce140
	 .word 0xc19ce140
	 .word 0xe1bce0c0
	 .word 0xc19cde20
	 .word 0xe1bce0c0
	 .word 0xe1bcde20
	 .word 0xe1bcdf00
	 .word 0xc19ce100
	 .word 0xe19ce000
	 .word 0xc19cdf00
	 .word 0xe1bce2c0
	 .word 0xc19cdf20
	 .word 0xc1bcdf20
	 .word 0xe19cde00
	 .word 0xc19ce2c0
	 .word 0xe1bce000
	 .word 0xc19ce200
	 .word 0xc19ce180
	 .word 0xc1bcde20
	 .word 0xc1bce200
	 .word 0xc19ce2c0
	 .word 0xe1bcdf00
	 .word 0xe1bcdf00
	 .word 0xe1bcde00
	 .word 0xe19cdf20
	 .word 0xe19ce280
	 .word 0xc19ce3c0
	 .word 0xc19cdf00
	 .word 0xe1bce280
	 .word 0xc19cde20
	 .word 0xe19cdf20
	 .word 0xc1bce0c0
	 .word 0xe19cde20
	 .word 0xe19ce300
	 .word 0xe19cde00
	 .word 0xc19cdf00
	 .word 0xe19cde00
	 .word 0xc1bcdf00
	 .word 0xe1bcde00
	 .word 0xc1bce240
	 .word 0xe19cde20
	 .word 0xe1bce180
	 .word 0xc1bce080
	 .word 0xe19cdf20
	 .word 0xc19ce2c0
	 .word 0xc1bcde00
	 .word 0xc19ce000
	 .word 0xc19ce2c0
	 .word 0xe1bcde00
	 .word 0xc19cdf20
	 .word 0xe19cde00
	 .word 0xe1bce100
	 .word 0xc19cde20
	 .word 0xc19cde00
	 .word 0xc1bcdf00
	 .word 0xe19cdf00
	 .word 0xc1bcde00
	 .word 0xe19cde00
	 .word 0xc1bcdf00
	 .word 0xc1bce380
	 .word 0xe1bce380
	 .word 0xc1bce080
	 .word 0xc1bcdf00
	 .word 0xe1bce380
	 .word 0xe1bce300
	 .word 0xc19cdf00
	 .word 0xe19cdf20
	 .word 0xe19ce200
	 .word 0xc1bce040
	 .word 0xe1bce040
	 .word 0xe1bcde00

.align 0x2000
.global spu_data_src 
spu_data_src:
	 .word 0x6e5987f
	 .word 0x5385fff4
	 .word 0x5bf3f536
	 .word 0x8a56fd69
	 .word 0xef24dee4
	 .word 0xb2835f3b
	 .word 0x2ff773bb
	 .word 0x27632451
	 .word 0x55bbab21
	 .word 0x8293cd8f
	 .word 0xaf3e3071
	 .word 0xd38a9e69
	 .word 0x255c9d0f
	 .word 0xeab29f32
	 .word 0x9381cafc
	 .word 0x1dcef4e9
	 .word 0xe92a0ea5
	 .word 0xf31aae56
	 .word 0x1d8c5d7e
	 .word 0x6c132cb1
	 .word 0x9f899091
	 .word 0x7baf5e28
	 .word 0x98545d4c
	 .word 0x17cc2afa
	 .word 0x6ada1bfe
	 .word 0xf1c44a0f
	 .word 0xb12952e3
	 .word 0x5340402d
	 .word 0x67b0db7
	 .word 0x381a2535
	 .word 0xf4df9d1c
	 .word 0xd279fd12
	 .word 0x96df3e6e
	 .word 0xac4b8e45
	 .word 0x1618b39f
	 .word 0x7eb0b62d
	 .word 0xcb48cc5b
	 .word 0x674cdb76
	 .word 0xc0a89c95
	 .word 0x3a2b5964
	 .word 0x3c7f6a0c
	 .word 0xdf4e22c8
	 .word 0x30f089a1
	 .word 0x3c879e5
	 .word 0x769c4673
	 .word 0x907f028e
	 .word 0x4711d010
	 .word 0xd6a0b645
	 .word 0x7a23e244
	 .word 0xac27ee2b
	 .word 0x8c5bb04e
	 .word 0x11e6dced
	 .word 0x9b576681
	 .word 0x6a850320
	 .word 0x8089a09b
	 .word 0x497b72b1
	 .word 0x332c5056
	 .word 0x280aaa46
	 .word 0x5b8f0eff
	 .word 0x3edf7fc1
	 .word 0x5cf28622
	 .word 0x227c8956
	 .word 0x4b08ce7b
	 .word 0xb68cc6c4
	 .word 0x1b9e29d5
	 .word 0x69c388b1
	 .word 0x8f3ba380
	 .word 0x9577ca41
	 .word 0x6b2bbc80
	 .word 0x63f7f15d
	 .word 0xee0aa3a4
	 .word 0x7fe24441
	 .word 0x7aea6729
	 .word 0x57e0e74e
	 .word 0xe1c75c93
	 .word 0x4beaf433
	 .word 0x2de17cdf
	 .word 0x8d7ac3e6
	 .word 0x1168f643
	 .word 0x59b1e70f
	 .word 0xf4438a0d
	 .word 0x3d2a14bf
	 .word 0xced6c46b
	 .word 0x6b69dbd
	 .word 0x9d328514
	 .word 0x445942a7
	 .word 0x11c5fb35
	 .word 0x5c87b5b6
	 .word 0x383df413
	 .word 0x359b24ec
	 .word 0x21717b32
	 .word 0x1231f7eb
	 .word 0xeb3d1c08
	 .word 0x2b4d04d9
	 .word 0x886de88d
	 .word 0x6656f1e6
	 .word 0x80b48d1c
	 .word 0xda56d57e
	 .word 0x234b8183
	 .word 0xbb17d2f
	 .word 0xb617a039
	 .word 0xd750a3b7
	 .word 0xefda6811
	 .word 0xcd50d8f0
	 .word 0x1d2bb9e1
	 .word 0x2f408267
	 .word 0x7efd52f0
	 .word 0x93939dc
	 .word 0xf1dc663a
	 .word 0x3e947705
	 .word 0x8941d9be
	 .word 0x21a2f44b
	 .word 0x232ca26d
	 .word 0xb9302a58
	 .word 0x9634d07d
	 .word 0x6cffa4a9
	 .word 0x1be2e72f
	 .word 0xc59e6185
	 .word 0xadc6641
	 .word 0x7d7efa10
	 .word 0x8b52c89f
	 .word 0xcff28349
	 .word 0x6428fb23
	 .word 0x38430734
	 .word 0x91803f52
	 .word 0xbee6ad83
	 .word 0x29c8e17b
	 .word 0xad0e3d7f
	 .word 0xa105eeac
	 .word 0xb3871ef6
	 .word 0x3da7e4f
	 .word 0xdf33767c
	 .word 0x15e8fc71
	 .word 0xa983f94c
	 .word 0xc5bb7d05
	 .word 0x4a32af79
	 .word 0xb01a4d9b
	 .word 0xa84e9f5c
	 .word 0x98eb0a5f
	 .word 0x55f35b66
	 .word 0xac0e3c6d
	 .word 0xbbb833af
	 .word 0x57e04aa9
	 .word 0xc2376f03
	 .word 0x48d11bc7
	 .word 0x621afb40
	 .word 0xa9157f2b
	 .word 0x4cf08b3a
	 .word 0xea901bbb
	 .word 0x4e70a883
	 .word 0x499b8ee6
	 .word 0x1dd2e9c9
	 .word 0x47f36361
	 .word 0x5253d2a8
	 .word 0xeb90e67b
	 .word 0x5917f023
	 .word 0xd91f73e7
	 .word 0x8f0b1d20
	 .word 0x311e36d
	 .word 0x4e1c8c98
	 .word 0xe0128ec
	 .word 0x1a0d360
	 .word 0x32e83e8b
	 .word 0x12a5c1b3
	 .word 0x37e8ea0d
	 .word 0x74f1fce4
	 .word 0xd4a229a6
	 .word 0xb35803e2
	 .word 0xf5aee1bf
	 .word 0x79cc2d76
	 .word 0x5d11148a
	 .word 0xb944d5c
	 .word 0xcae34d5e
	 .word 0x58e195af
	 .word 0x59bb4d2c
	 .word 0x8cb80c3e
	 .word 0x272b3a87
	 .word 0xe8cf17bd
	 .word 0x24caef1f
	 .word 0xdceb4ef7
	 .word 0xe41b45a1
	 .word 0xb3e86467
	 .word 0x96b7d64c
	 .word 0x27ad2e7
	 .word 0x5ae72dc2
	 .word 0x123a644f
	 .word 0x469188e2
	 .word 0x7071d941
	 .word 0xf15651af
	 .word 0x7c747175
	 .word 0xdea94c8a
	 .word 0x8601e638
	 .word 0xfbda6a44
	 .word 0xd86d2503
	 .word 0xaaabdadf
	 .word 0x1a84ce5a
	 .word 0x42a715f7
	 .word 0x4fffbd47
	 .word 0x813d691d
	 .word 0x55c7b636
	 .word 0x5e7e09b6
	 .word 0x234b5ffb
	 .word 0x2d21f718
	 .word 0xe13e844
	 .word 0x98ccfaf8
	 .word 0x182dbccc
	 .word 0x5c27196e
	 .word 0xd54a506
	 .word 0x6ef79712
	 .word 0xae66d419
	 .word 0x2ba3b300
	 .word 0x3307516a
	 .word 0x4b791bc9
	 .word 0x226be5fb
	 .word 0xaeb5519d
	 .word 0x4b95a772
	 .word 0x4e2e6529
	 .word 0xd4cbcd84
	 .word 0x38aa2200
	 .word 0x6d8fcd16
	 .word 0xd28494
	 .word 0xb1674c4c
	 .word 0xf981aefb
	 .word 0xa4367568
	 .word 0xd2c5351c
	 .word 0x44e40a29
	 .word 0x325ddff5
	 .word 0xf3236ff8
	 .word 0xd3c116
	 .word 0xe7e94d3c
	 .word 0x4760ea92
	 .word 0x42e14a7b
	 .word 0xc8322ce6
	 .word 0xa321ae34
	 .word 0x830c2bb0
	 .word 0x6028e8a7
	 .word 0x285bbb21
	 .word 0x8ced4cce
	 .word 0xf7ff1b98
	 .word 0xe1863660
	 .word 0x136f1dd2
	 .word 0x8664489b
	 .word 0x8034d175
	 .word 0xdf935818
	 .word 0x610be91a
	 .word 0x91018205
	 .word 0x7d1ca00
	 .word 0xf50bfd72
	 .word 0x99fc1afd
	 .word 0xe549e793
	 .word 0xb47ae57c
	 .word 0xdbf0ba28
	 .word 0x4c4dcc7b
	 .word 0x6d44d36c
	 .word 0xdc49d0e9
	 .word 0x3e0c892f
	 .word 0xe52e5fdd
	 .word 0xffde3d18
	 .word 0x60024e74
	 .word 0x5facde19
	 .word 0x8119c052
	 .word 0x6c93c38e
	 .word 0xce6f112c
	 .word 0x3d7ee8b9
	 .word 0x10586ba
	 .word 0xd59d36b
	 .word 0xa2041ffa
	 .word 0x808aef0c
	 .word 0x555917c1
	 .word 0xafb66d7d
	 .word 0x94ff3d3
	 .word 0x6770e156
	 .word 0x3010f2e
	 .word 0x79e3518b
	 .word 0x8da3c526
	 .word 0xf0978c8b
	 .word 0xacfd8c7b
	 .word 0x45a1914f
	 .word 0xd4eebc9c
	 .word 0x50320ef1
	 .word 0xfab034a8
	 .word 0x4c84cfc2
	 .word 0xe34efaff
	 .word 0x15157303
	 .word 0xb227fd4d
	 .word 0x11cb09d
	 .word 0x1196ac7b
	 .word 0x7a929496
	 .word 0xcaf614ef
	 .word 0x61c73c1b
	 .word 0x47329b03
	 .word 0xd226b441
	 .word 0xaaf87c93
	 .word 0xcd5f3b02
	 .word 0x7ac2f414
	 .word 0xe0175cf9
	 .word 0x903c2697
	 .word 0x83a5cee4
	 .word 0x948e35a0
	 .word 0x90347ffc
	 .word 0x5ae1aec0
	 .word 0x2376caa2
	 .word 0x44017645
	 .word 0xc645eaf0
	 .word 0xc50cff8e
	 .word 0xbcb8f31
	 .word 0x5cf07cbd
	 .word 0xde577c4b
	 .word 0x7e9978d7
	 .word 0xea88709f
	 .word 0xc57b5a9a
	 .word 0xf669b9f4
	 .word 0x4bd16b93
	 .word 0xa94ce758
	 .word 0xb9a67e32
	 .word 0x7b42ae2a
	 .word 0xfb00fef3
	 .word 0x7d3f11a6
	 .word 0x390d6fd7
	 .word 0xf7752ea4
	 .word 0xe1a9d2b8
	 .word 0x174f4977
	 .word 0x54e7ae4b
	 .word 0x7c72f1fa
	 .word 0x489df2c3
	 .word 0xc6f8d261
	 .word 0xfc1a5e72
	 .word 0x7be01743
	 .word 0x439defe8
	 .word 0xe50e3ea
	 .word 0xf788c249
	 .word 0xc1a503fe
	 .word 0x7e7f3206
	 .word 0x6b859403
	 .word 0x6580ab16
	 .word 0xcfa5bc35
	 .word 0x7c9cd75b
	 .word 0x7e0265d5
	 .word 0xf73f5ae0
	 .word 0xe0d418df
	 .word 0x20a6b514
	 .word 0xb48880bf
	 .word 0x25e8922
	 .word 0xb4c48086
	 .word 0x68074d23
	 .word 0x29e4d3a0
	 .word 0x98c07ebb
	 .word 0x3d430629
	 .word 0x7f52cd55
	 .word 0x8fcea851
	 .word 0xf78d7d27
	 .word 0xc6e11263
	 .word 0x71be6ba2
	 .word 0x171d6b75
	 .word 0xd843e4f4
	 .word 0xa51facc
	 .word 0x5c0b3c7
	 .word 0x422cac74
	 .word 0x58ffcf6e
	 .word 0x30ef2b9f
	 .word 0x1f09a12
	 .word 0xd63199c3
	 .word 0x12360f9d
	 .word 0x9122c79b
	 .word 0x5042677c
	 .word 0x92b57d69
	 .word 0x8369ce70
	 .word 0x3a01e22e
	 .word 0xd01ed2fc
	 .word 0x979cfdbf
	 .word 0xb5233639
	 .word 0x2e4db7d0
	 .word 0x42c1dc1a
	 .word 0x1a5c2677
	 .word 0xe7e0e15b
	 .word 0xf0a588ac
	 .word 0x8e143ac1
	 .word 0x26737dde
	 .word 0x7d250043
	 .word 0x2328f987
	 .word 0xa20b7859
	 .word 0x1452aa65
	 .word 0x445a6a94
	 .word 0x6651ed9
	 .word 0xf8ca0614
	 .word 0x58816c5d
	 .word 0xb85d0fa5
	 .word 0x8464963e
	 .word 0xe379e488
	 .word 0x83b7f001
	 .word 0xf7347a2f
	 .word 0xbf5d5213
	 .word 0x6271b07e
	 .word 0x3f9bbbb9
	 .word 0xbb465b42
	 .word 0x45fcfb5b
	 .word 0xffdd2908
	 .word 0xc366be9c
	 .word 0xf7325079
	 .word 0xb3ff0de2
	 .word 0x361f82da
	 .word 0x6c124337
	 .word 0xfae7596e
	 .word 0xa2c612a5
	 .word 0x17b71cd1
	 .word 0x9cf7ca8c
	 .word 0xfc96b06f
	 .word 0x5639c72
	 .word 0xcacf69d5
	 .word 0xdc76135c
	 .word 0x3a2efa72
	 .word 0xe410eaca
	 .word 0xa02723e9
	 .word 0xd448d1a9
	 .word 0x93460244
	 .word 0x8ed4570e
	 .word 0x18be1c77
	 .word 0xcb25da76
	 .word 0xd7067308
	 .word 0xdc2defd8
	 .word 0xa11f3def
	 .word 0xad1ac7d1
	 .word 0x211a45e0
	 .word 0x9167e6a9
	 .word 0x89509295
	 .word 0x66525913
	 .word 0x8ae1d6e4
	 .word 0x3ccdb3c5
	 .word 0x46bc6496
	 .word 0x50991365
	 .word 0x66d2d55b
	 .word 0x50d7145b
	 .word 0x2703cb5b
	 .word 0xa36ce685
	 .word 0xe1d98328
	 .word 0x508246e8
	 .word 0xa8dc3a21
	 .word 0x20dbd9c9
	 .word 0xa549f785
	 .word 0x1aeb29dc
	 .word 0xe81ee3c8
	 .word 0xcb320563
	 .word 0x429658ef
	 .word 0x84e3207d
	 .word 0x354a07ec
	 .word 0xf8b75be7
	 .word 0x5bda4261
	 .word 0x3d27e20b
	 .word 0xac217d32
	 .word 0xfc2080b
	 .word 0xa09ac7c4
	 .word 0xa1159724
	 .word 0x9a1d0ce3
	 .word 0xe6a62ad
	 .word 0x881dcda5
	 .word 0x7e92e969
	 .word 0xc92873be
	 .word 0x7a79c519
	 .word 0xd9b2a827
	 .word 0x7abbe962
	 .word 0x67221c09
	 .word 0xaffdbb8a
	 .word 0x6a71353c
	 .word 0xcdbaee9e
	 .word 0xb3c2e4e9
	 .word 0xc37d5bf1
	 .word 0x4e93e60f
	 .word 0x798cd61e
	 .word 0xde6a8af3
	 .word 0x5866c4f5
	 .word 0x15e46bc4
	 .word 0xf56042f3
	 .word 0x60f18602
	 .word 0x3127093b
	 .word 0x7df9fb63
	 .word 0x4015c526
	 .word 0x955a704a
	 .word 0xacbf0ae6
	 .word 0x7d835d11
	 .word 0x54610ad7
	 .word 0x7f4a4aad
	 .word 0x71cc0b61
	 .word 0x48c63a80
	 .word 0x5e697fa8
	 .word 0x98d0324d
	 .word 0xc922f35b
	 .word 0x442060a8
	 .word 0xc7cafe5b
	 .word 0x897a5b61
	 .word 0x7e899713
	 .word 0xceee8b7
	 .word 0x9bd78b9
	 .word 0xc03f654c
	 .word 0xe5097ad4
	 .word 0x4f0a7c45
	 .word 0x3034b9b6
	 .word 0x1a05bec
	 .word 0xfa0bdbc3
	 .word 0xf44728ca
	 .word 0x7237a5d1
	 .word 0xbcd8fa2e
	 .word 0xbf2700d8
	 .word 0xff597655
	 .word 0x3dc09dc1
	 .word 0xda3901e9
	 .word 0x2a81182a
	 .word 0xab69b576
	 .word 0x766ee74d
	 .word 0x3b1abcec
	 .word 0x712d246e
	 .word 0xb9b87d
	 .word 0x786b407b
	 .word 0x2e97fb51
	 .word 0xa22abec1
	 .word 0x34506be5
	 .word 0x226000ed
	 .word 0x1e602314
	 .word 0x43f9b0a5
	 .word 0xcfe20210
	 .word 0xcc876d86
	 .word 0xf22724e7
	 .word 0xe63eaa48
	 .word 0xaf62a638
	 .word 0x9dd92253
	 .word 0x774e6a47
	 .word 0xdd06990c
	 .word 0x761cea9d
	 .word 0x3d89b6a8
	 .word 0x2ae610ca
	 .word 0xe80a6243
	 .word 0xc5046603
	 .word 0xec9dff89
	 .word 0x573606bb
	 .word 0xa62d063a
	 .word 0x7a903460
	 .word 0xc385944b
	 .word 0xa0e3dce7
	 .word 0xf08a6f78
	 .word 0xd0f04ed0
	 .word 0x28c6797b
	 .word 0xbc361b9
	 .word 0xa10d7247
	 .word 0xb52beecc
	 .word 0xc1fe15fe
	 .word 0xa9ad5984
	 .word 0xb2e7c073
	 .word 0xfe6709b
	 .word 0xae19d679
	 .word 0x9f98e820
	 .word 0xefaed551
	 .word 0x826b6908
	 .word 0xf8ec22f2
	 .word 0xdbe97fb7
	 .word 0x968d1e03
	 .word 0xd779e254
	 .word 0x3688ab8
	 .word 0xb5ac68e0
	 .word 0x3c26e1f9
	 .word 0xd251f46d
	 .word 0x4b1c4a7f
	 .word 0x49e37ed
	 .word 0xedc6afb9
	 .word 0x4f072c61
	 .word 0x2d2690ce
	 .word 0xf681c380
	 .word 0xd15d51e3
	 .word 0xb04d770c
	 .word 0x3746249c
	 .word 0xacd77064
	 .word 0xba1d9070
	 .word 0x381d8319
	 .word 0x7ac85238
	 .word 0x4f9ce699
	 .word 0xa73c423a
	 .word 0x2ce8ce28
	 .word 0x6b7f4269
	 .word 0xdbaa83b0
	 .word 0xd3e172c0
	 .word 0x13e4d14a
	 .word 0xcea41fd6
	 .word 0x36c51e59
	 .word 0xdcdfa029
	 .word 0x57800b5
	 .word 0x6cebaea9
	 .word 0x85cfef3a
	 .word 0xc6925589
	 .word 0x5a4a92b3
	 .word 0xd65a3a6e
	 .word 0xfbf3b301
	 .word 0x1b95a563
	 .word 0x12841de
	 .word 0xe7cdfe40
	 .word 0x494d59bc
	 .word 0x781c486e
	 .word 0x86ff7e8b
	 .word 0xa8056b26
	 .word 0xf607d767
	 .word 0x25c2649c
	 .word 0xbe1dc383
	 .word 0xde58f0b9
	 .word 0xa8e9e9c6
	 .word 0xbd174057
	 .word 0x779001f8
	 .word 0xbeb62c0b
	 .word 0xff99e774
	 .word 0x64f8660d
	 .word 0x948958b6
	 .word 0x96e4a0c4
	 .word 0xf866ec3c
	 .word 0x507cfbef
	 .word 0xf5218a98
	 .word 0x5efa608d
	 .word 0x4a87f6a8
	 .word 0xa2d853f4
	 .word 0x48dfe83f
	 .word 0xdc6944b0
	 .word 0x8fb6cad6
	 .word 0x4186f823
	 .word 0x4b9ea0fd
	 .word 0x2739e00
	 .word 0xa15ae92
	 .word 0x3889b712
	 .word 0x819daf16
	 .word 0xde617ef5
	 .word 0xa8ac529f
	 .word 0xcea674a9
	 .word 0x7f5bd329
	 .word 0x87be041c
	 .word 0xd4b97d57
	 .word 0xe8dec32b
	 .word 0x583f52ec
	 .word 0xbf763ead
	 .word 0x7fdc4a77
	 .word 0xd0c88876
	 .word 0x97f6f17
	 .word 0x8a29a57d
	 .word 0xe7f11433
	 .word 0x4975338a
	 .word 0xe85ac4a1
	 .word 0xac963016
	 .word 0xeeab5991
	 .word 0x4e584647
	 .word 0x2b60d32
	 .word 0x73088024
	 .word 0xa9b735f4
	 .word 0x1766377a
	 .word 0x7301f2cf
	 .word 0x285abd12
	 .word 0xb9c23df5
	 .word 0x89b0f119
	 .word 0x4afdeada
	 .word 0x8c9305f4
	 .word 0xdc74d579
	 .word 0x14576ece
	 .word 0x87d94c3e
	 .word 0x10dc9da7
	 .word 0x3c6252ff
	 .word 0xe2f240b1
	 .word 0x8c9314e5
	 .word 0x9ca53535
	 .word 0xfb878439
	 .word 0x10fef65a
	 .word 0xa88c126d
	 .word 0xc859f87e
	 .word 0xee5467de
	 .word 0x3168b616
	 .word 0xef46621b
	 .word 0x53d64115
	 .word 0x1fb730bf
	 .word 0x9a6c8477
	 .word 0x6887c11
	 .word 0xd3501367
	 .word 0x7f6be616
	 .word 0xccfc0011
	 .word 0xf0c93dba
	 .word 0x2bacca23
	 .word 0x9c353525
	 .word 0x57a99583
	 .word 0x4e2da78d
	 .word 0x30ea93d5
	 .word 0xe8d847fe
	 .word 0x5c556fb4
	 .word 0x1db841f2
	 .word 0x24f1a6d3
	 .word 0x3dfeb5a0
	 .word 0x8582a85e
	 .word 0xedd55d7d
	 .word 0xacea4f5b
	 .word 0xe1bedf43
	 .word 0xa0b07cd0
	 .word 0x566ea266
	 .word 0x35633bfc
	 .word 0xb8bc4ef4
	 .word 0x268b8aef
	 .word 0xea63a331
	 .word 0x6c65ac35
	 .word 0x99d6eb64
	 .word 0xe4875a7d
	 .word 0xe1ec66af
	 .word 0x1a4b655c
	 .word 0x557914fc
	 .word 0x6db0b69d
	 .word 0x1e461d2b
	 .word 0x10491c2
	 .word 0x7a020034
	 .word 0x668d9b96
	 .word 0xd05974dc
	 .word 0xb3b9ee12
	 .word 0x68cae124
	 .word 0xa1e7bcd7
	 .word 0xb30d41a0
	 .word 0x6099e901
	 .word 0xf01abc5a
	 .word 0x16aae73b
	 .word 0x15ef6bec
	 .word 0x2659924
	 .word 0x6f45f0ee
	 .word 0x39d0c38d
	 .word 0xc1095afd
	 .word 0x393cad1b
	 .word 0xf873cfd3
	 .word 0x3ee7bd4d
	 .word 0x56544e53
	 .word 0x6075b9f7
	 .word 0xf055d470
	 .word 0x365b11b4
	 .word 0x43955a5f
	 .word 0x3c428bda
	 .word 0x2cc15270
	 .word 0x3e7e4af5
	 .word 0x8faffc7a
	 .word 0x93b65cd9
	 .word 0x70d5acd5
	 .word 0xd3beabc4
	 .word 0xfbf97a19
	 .word 0x24be162a
	 .word 0x9d666a51
	 .word 0x51814f1d
	 .word 0xb4067f3f
	 .word 0xe5f8ff7a
	 .word 0xd001bad8
	 .word 0x805d003e
	 .word 0x700fb032
	 .word 0x7062809f
	 .word 0x9f614270
	 .word 0x7bcb0ef5
	 .word 0xc6a12271
	 .word 0x86a3d96f
	 .word 0x629c3d4c
	 .word 0xa95aa41f
	 .word 0xed13f0e4
	 .word 0xfbeef3ee
	 .word 0x64f5119
	 .word 0x12265a70
	 .word 0x42905f55
	 .word 0x16b1b4af
	 .word 0x15f9f97
	 .word 0x55041f6f
	 .word 0x5a4a411f
	 .word 0xf6836d73
	 .word 0xf743ee69
	 .word 0x8e3a0c4
	 .word 0x66909724
	 .word 0x66a45616
	 .word 0x917f831
	 .word 0xb34fc9b5
	 .word 0xb2649903
	 .word 0xe9812faa
	 .word 0x9e6b3ad7
	 .word 0x234c14ee
	 .word 0x81db9d8a
	 .word 0x1c2b75e4
	 .word 0xfbfdd729
	 .word 0xc50eb680
	 .word 0x2dd2966a
	 .word 0xe4d8c2b6
	 .word 0x96b355a9
	 .word 0x5ba4e22b
	 .word 0x84b11329
	 .word 0x2b82483e
	 .word 0xd2c64a1
	 .word 0xfa9eb1df
	 .word 0x8364ff5c
	 .word 0x39e784de
	 .word 0xbff5e379
	 .word 0x5fb47080
	 .word 0xe69f9014
	 .word 0xcec595ab
	 .word 0x604ccf4d
	 .word 0x332f4cea
	 .word 0x27ef1498
	 .word 0x9146cb0a
	 .word 0x955be4ba
	 .word 0xc9fbb933
	 .word 0x6bd89e55
	 .word 0xebc46398
	 .word 0x30d10af9
	 .word 0xd5ebfa37
	 .word 0x20cfb412
	 .word 0x922e914a
	 .word 0xd2f5dc2d
	 .word 0xd415ab50
	 .word 0x72198467
	 .word 0xa70d2cd5
	 .word 0x6557df00
	 .word 0xd69d3a65
	 .word 0xd08c4b6f
	 .word 0xc44dbb4f
	 .word 0x5ec2456b
	 .word 0x9aeea026
	 .word 0x34f2dfbc
	 .word 0x3939aa17
	 .word 0x4d1444d5
	 .word 0x5792d895
	 .word 0x1fe79a8b
	 .word 0xcf39e4f0
	 .word 0xf69c5b5f
	 .word 0xb1c5dfc7
	 .word 0xe8790f37
	 .word 0xf9bb2a73
	 .word 0x6652167e
	 .word 0x42e936eb
	 .word 0x891e45f3
	 .word 0xbcd8c2a7
	 .word 0x19cd2ec9
	 .word 0xad2b358b
	 .word 0xa0a76db4
	 .word 0xf8a97be9
	 .word 0x16720d14
	 .word 0xa57bab12
	 .word 0xd633396b
	 .word 0x6e651212
	 .word 0x2390cbc
	 .word 0x836a948d
	 .word 0xbb005c7c
	 .word 0x6f5663d7
	 .word 0x2cf70f44
	 .word 0xce15eab5
	 .word 0xd675da6a
	 .word 0x5f11a73
	 .word 0x46633520
	 .word 0x1c17cc2d
	 .word 0xe7341dd1
	 .word 0xc5a7a782
	 .word 0xe47ecfd0
	 .word 0x33b68807
	 .word 0xeaac0a99
	 .word 0xa088bd2f
	 .word 0xeac1e130
	 .word 0x2cac4c8c
	 .word 0xfad87f68
	 .word 0xe879a491
	 .word 0xd5bfbc0f
	 .word 0xedf47e3c
	 .word 0xa89fa59
	 .word 0x5f551652
	 .word 0x3e1c99fe
	 .word 0x8c68fb13
	 .word 0x737b54ea
	 .word 0x338c7991
	 .word 0xf9e63a69
	 .word 0x1ad9ce0e
	 .word 0xd161cb39
	 .word 0x6863ad09
	 .word 0xd9eedeea
	 .word 0x7dee16ec
	 .word 0xe999c272
	 .word 0x3fbdbe72
	 .word 0x6aeb38dd
	 .word 0xe5c52a38
	 .word 0x33350283
	 .word 0x39f33427
	 .word 0x85091c2f
	 .word 0x93b2d88
	 .word 0xbe465712
	 .word 0x7c90cd08
	 .word 0x9be0b7c
	 .word 0x324b3ff
	 .word 0xb691cbb0
	 .word 0x6567daa1
	 .word 0x83e9f157
	 .word 0x65091f17
	 .word 0xfc87f74d
	 .word 0x9a47998b
	 .word 0x935b9aea
	 .word 0x5d1bc7a4
	 .word 0x72e60aef
	 .word 0x89492c12
	 .word 0x1789c7c2
	 .word 0x9ab03313
	 .word 0xbebb979e
	 .word 0x700e1b17
	 .word 0xf72ce2e2
	 .word 0x5d65d8f2
	 .word 0x9e323fa3
	 .word 0x2beb8138
	 .word 0x8892b922
	 .word 0x40c3cb6
	 .word 0x6782c6f1
	 .word 0x37fa442d
	 .word 0xf246c0b3
	 .word 0xb9085fb7
	 .word 0x284636e2
	 .word 0xeaa70074
	 .word 0x223ec601
	 .word 0xff10cf7e
	 .word 0xa5090925
	 .word 0xb0e28b30
	 .word 0xc6511be
	 .word 0xe2a5d442
	 .word 0xbcf18df6
	 .word 0x4bbe2e4e
	 .word 0xed565c39
	 .word 0x36ff83b0
	 .word 0x84aa0190
	 .word 0xf44d02e9
	 .word 0x14bb21f7
	 .word 0x5083bbeb
	 .word 0x89d204e0
	 .word 0x63560def
	 .word 0xd1092d7b
	 .word 0x2f724ad3
	 .word 0xd4426d7a
	 .word 0x94f90304
	 .word 0x25f36a68
	 .word 0x9395c588
	 .word 0x4fa9a0d0
	 .word 0x6621d1a6
	 .word 0xfc9b55c9
	 .word 0x51abd431
	 .word 0xadb5eea0
	 .word 0xe8c56090
	 .word 0x9f89fb0
	 .word 0xd51ff5f8
	 .word 0x9a669eae
	 .word 0x36a41b64
	 .word 0x2220d1fd
	 .word 0x98e00159
	 .word 0x5073a5b3
	 .word 0x36f53684
	 .word 0x8f62107f
	 .word 0xb0c1e49c
	 .word 0x76473595
	 .word 0xf427cd3f
	 .word 0x17c14640
	 .word 0x1e666aa0
	 .word 0x5c039cd7
	 .word 0xe2153e34
	 .word 0x39d541c
	 .word 0x88fd07d9
	 .word 0x9bc32952
	 .word 0x94d269f2
	 .word 0xea3e1492
	 .word 0x3308f39b
	 .word 0x15e70225
	 .word 0x8b03b7e0
	 .word 0x8e2f48e0
	 .word 0x64881197
	 .word 0xd7252ce9
	 .word 0x9e72055c
	 .word 0x48b4c34a
	 .word 0x66e06fa6
	 .word 0xa4553229
	 .word 0x98dce325
	 .word 0x9aa662b8
	 .word 0x1b015bc5
	 .word 0x63fe1510
	 .word 0x23e8c4fd
	 .word 0x76d7b38b
	 .word 0xdd71565f
	 .word 0xe9f9264
	 .word 0x87ce0789
	 .word 0xd81849a7
	 .word 0x17d264d3
	 .word 0xfdbdab3
	 .word 0x4757f07c
	 .word 0xa01727d3
	 .word 0x8ffa882c
	 .word 0x63463bcb
	 .word 0xdf110cf4
	 .word 0x9644c842
	 .word 0x42565c36
	 .word 0x3aee6d6e
	 .word 0xa36c9223
	 .word 0x7b749a71
	 .word 0xac2822b2
	 .word 0x9b077546
	 .word 0xb492a431
	 .word 0x71b80a33
	 .word 0xaa95bee7
	 .word 0x38845616
	 .word 0x286fa761
	 .word 0xacfa6409
	 .word 0x119c655d
	 .word 0xaf73fe32
	 .word 0x3304ff72
	 .word 0x51862ab7
	 .word 0x722903e4
	 .word 0x24892931
	 .word 0x2bfbe148
	 .word 0x3711b213
	 .word 0xd00a5db
	 .word 0xe2d228df
	 .word 0xad611ac9
	 .word 0xb27a131f
	 .word 0x91458af
	 .word 0xfe6fc978
	 .word 0xa47af50c
	 .word 0x9b30cd5a
	 .word 0xd390549f
	 .word 0x6659c513
	 .word 0x691894b0
	 .word 0x1cd1a953
	 .word 0x3eae6dca
	 .word 0xbd327a5c
	 .word 0xcbcc7c89
	 .word 0xfe9bb07d
	 .word 0xee501162
	 .word 0x6312da86
	 .word 0x6e7a1682
	 .word 0x6ae14e4a
	 .word 0xd6e45340
	 .word 0x1b52c27f
	 .word 0xaeb866be

.align 0x1000
.global spu_data_dest 
spu_data_dest:
	 .word 0xc530ee72
	 .word 0xb862cf9e
	 .word 0xe8e13364
	 .word 0x5d0a4d00
	 .word 0x3838ac93
	 .word 0x4c6c651f
	 .word 0xd031e37
	 .word 0x810ef84b
	 .word 0x997ce8fe
	 .word 0x502f0b12
	 .word 0x6e86b6ce
	 .word 0x77d370cc
	 .word 0x6a22d6cf
	 .word 0x28ba47f7
	 .word 0x2de4820e
	 .word 0xe8985bf7
	 .word 0xc68d573d
	 .word 0xdf460c41
	 .word 0x5ca69359
	 .word 0xdbed5ef0
	 .word 0x439bb634
	 .word 0xe2c5f55c
	 .word 0xf701ad44
	 .word 0xd335c32d
	 .word 0x1d3f1c21
	 .word 0xe93f3cf2
	 .word 0x9513398d
	 .word 0x19c0415a
	 .word 0xe014c90b
	 .word 0x85f7d86a
	 .word 0x38f24c4c
	 .word 0xd6d6167a
	 .word 0x5c006ceb
	 .word 0x65f98cb2
	 .word 0x6f12667
	 .word 0x37c3c756
	 .word 0x41a33134
	 .word 0x7acbfa3d
	 .word 0x294feb4b
	 .word 0x8c203611
	 .word 0x354147b3
	 .word 0xc7f4e54d
	 .word 0x27787dd8
	 .word 0x7bbcee1a
	 .word 0x5871129e
	 .word 0xaafe3e74
	 .word 0x4de6b89c
	 .word 0xcef4ca47
	 .word 0x9e0c39e5
	 .word 0xb3b5af58
	 .word 0x965f7543
	 .word 0x35bc593e
	 .word 0x8a8c41cf
	 .word 0xe351afb7
	 .word 0xb34c174e
	 .word 0x5229a417
	 .word 0x38176c2
	 .word 0x196466ab
	 .word 0x4c378e03
	 .word 0x2e5f3b3f
	 .word 0x4c6c4261
	 .word 0xc544dc2d
	 .word 0x27c501a4
	 .word 0x7e20ad9e
	 .word 0x632e3ddc
	 .word 0x961b3edf
	 .word 0x70479fe3
	 .word 0x4814cdfc
	 .word 0x4bc99582
	 .word 0xd3454205
	 .word 0xa6a63b94
	 .word 0x241c6aa0
	 .word 0x77a919b
	 .word 0x7e93d7d4
	 .word 0x5aacb3a4
	 .word 0x596a5b3a
	 .word 0x87a05874
	 .word 0x2233cbef
	 .word 0xbb985549
	 .word 0x2a740902
	 .word 0xd6a73db9
	 .word 0xb927022e
	 .word 0x56cbad7a
	 .word 0x449fd520
	 .word 0x7178330b
	 .word 0x34c5da1
	 .word 0x68697da1
	 .word 0xf809014d
	 .word 0xb8162dc9
	 .word 0x995093d3
	 .word 0x715dc78f
	 .word 0xd706febb
	 .word 0xdd4b9631
	 .word 0x89c27052
	 .word 0x35724b0
	 .word 0xfa04732
	 .word 0x90d713ad
	 .word 0x43294c6f
	 .word 0xfca1dc7e
	 .word 0x8ef247c
	 .word 0x16a84a66
	 .word 0x27a4bf41
	 .word 0x96f96e3b
	 .word 0xfe010a00
	 .word 0xbdb25e1c
	 .word 0xb988c9ef
	 .word 0x7c7c81da
	 .word 0xcd1f64b4
	 .word 0xeae34e38
	 .word 0xbdda042f
	 .word 0x883a743e
	 .word 0x77fb0530
	 .word 0xbe2c7f22
	 .word 0x9dc18d09
	 .word 0x5b90f2a6
	 .word 0xbd21881e
	 .word 0xd97a04d0
	 .word 0x6348c3e1
	 .word 0xaa035966
	 .word 0x47b660da
	 .word 0xf93b829f
	 .word 0xd4290db3
	 .word 0x219cc9db
	 .word 0x95df6a56
	 .word 0xe4fab465
	 .word 0xd77c2a9f
	 .word 0x71892b98
	 .word 0x72ef223d
	 .word 0x21a8f4c7
	 .word 0xb4dddfa8
	 .word 0xe2a08ce4
	 .word 0xa654f25b
	 .word 0xb00e54c7
	 .word 0xd57f8b8
	 .word 0xb1639668
	 .word 0xd5fe2c3b
	 .word 0xc55a18a0
	 .word 0x2c7de6e7
	 .word 0x459f0624
	 .word 0x8589b12
	 .word 0xab7dadd5
	 .word 0x7aad7efc
	 .word 0x1cd765a3
	 .word 0x49d1cfda
	 .word 0xfff86e87
	 .word 0x34be9c33
	 .word 0xd0fd6f6e
	 .word 0xb9bc8bc1
	 .word 0x1b4bc607
	 .word 0xe1c3ab40
	 .word 0xd7fed7c5
	 .word 0x4d37ecc5
	 .word 0x1eb48aac
	 .word 0x59196194
	 .word 0x21ce6c8d
	 .word 0x724a4097
	 .word 0xa23fa0e5
	 .word 0x1a2424de
	 .word 0x84b9c084
	 .word 0x141ba1c8
	 .word 0x401d3b91
	 .word 0x8ffde6d3
	 .word 0x5291d5bb
	 .word 0x615ac323
	 .word 0xd4774d8d
	 .word 0xf63f7931
	 .word 0x8f8f7b43
	 .word 0xd1988d57
	 .word 0xa045008e
	 .word 0x8d3c9e02
	 .word 0x1d335229
	 .word 0xd40d72d8
	 .word 0xade4532
	 .word 0xc3ba581d
	 .word 0xfaecad9f
	 .word 0xc059e08
	 .word 0x4eafd051
	 .word 0xd69b3ff2
	 .word 0x3351c27c
	 .word 0x235f5d91
	 .word 0x52a11997
	 .word 0xc75e087
	 .word 0x8a66d9e7
	 .word 0xcc597314
	 .word 0x80c32f56
	 .word 0x4fc560bc
	 .word 0xdf197b4d
	 .word 0x2fa52807
	 .word 0xdcf87397
	 .word 0x2ea4fcd5
	 .word 0xfaefc19b
	 .word 0x848a4cda
	 .word 0x90b29673
	 .word 0xa70b1439
	 .word 0x3e3b4faa
	 .word 0x1d29865c
	 .word 0xc4e561a1
	 .word 0x1a80cf77
	 .word 0xe82297f4
	 .word 0x9acb8d5c
	 .word 0xfe22294f
	 .word 0x89fa28a
	 .word 0x4fca6b90
	 .word 0xfbf24492
	 .word 0x59b8f635
	 .word 0x46e2f5d
	 .word 0x1a15045c
	 .word 0xa1cac8c1
	 .word 0x72f9bce6
	 .word 0xc24a4c90
	 .word 0x9d0afe76
	 .word 0x82eddf15
	 .word 0x5e813668
	 .word 0x22a6347c
	 .word 0x3a55f4f2
	 .word 0x684e65d1
	 .word 0xe4222e06
	 .word 0xdbb2075
	 .word 0x7c7bb5c5
	 .word 0xd0bab2e
	 .word 0xd7b55865
	 .word 0x9db3d44d
	 .word 0x5a044107
	 .word 0x34d7ce7c
	 .word 0x632707d6
	 .word 0xbf5de21
	 .word 0xcda40759
	 .word 0x95008f8d
	 .word 0x11bb51ea
	 .word 0xb3588e4f
	 .word 0x46271ba3
	 .word 0xb42b3053
	 .word 0x1af67a4a
	 .word 0x1884ebc5
	 .word 0x93714c02
	 .word 0x82ba4cc8
	 .word 0x8420b6c7
	 .word 0xabaa2881
	 .word 0x62b25600
	 .word 0x5bdecd0d
	 .word 0x3f39a0b0
	 .word 0xff665a53
	 .word 0x22caa06
	 .word 0xbbc355d5
	 .word 0x16a0e763
	 .word 0xa87b7be8
	 .word 0xa7e0720e
	 .word 0x4453db04
	 .word 0x6aff1826
	 .word 0x4ce4fa05
	 .word 0x6d53cf9c
	 .word 0x8e193893
	 .word 0x16528f37
	 .word 0x8762510f
	 .word 0x68cc84ee
	 .word 0xc7baf5b5
	 .word 0x8b1e621
	 .word 0xe2cf7ed2
	 .word 0xde7d72
	 .word 0xbb37963f
	 .word 0xda967350
	 .word 0x6ec4c82
	 .word 0xbd75e977
	 .word 0x86061e44
	 .word 0xe296aee7
	 .word 0x3abfb4fd
	 .word 0x58bae127
	 .word 0x1f59abff
	 .word 0xb2a190d1
	 .word 0x1fd4eb52
	 .word 0xc597c2b4
	 .word 0xc7ea4bf5
	 .word 0xe8493c15
	 .word 0x4163c586
	 .word 0xd88abfd1
	 .word 0x2f346b5b
	 .word 0x35bc8b6f
	 .word 0xb4e8f95
	 .word 0x7cfe4e64
	 .word 0x9d528cb4
	 .word 0x8af4531b
	 .word 0x82fb8ab5
	 .word 0x1ceb707a
	 .word 0xccab22be
	 .word 0x79926bf3
	 .word 0xbfb09ce2
	 .word 0x85440779
	 .word 0x7de6b58e
	 .word 0xcf3ddbbc
	 .word 0x757bf496
	 .word 0xfed2a69a
	 .word 0xc140b5f9
	 .word 0x328aebc
	 .word 0xc51ca4d8
	 .word 0x1c20989a
	 .word 0xa487a336
	 .word 0x5921568f
	 .word 0x90a7d79
	 .word 0x68ca0ca7
	 .word 0x834766c1
	 .word 0x805aa23a
	 .word 0x23eca398
	 .word 0x70b39ea1
	 .word 0xd8e30a81
	 .word 0x4332a380
	 .word 0x4bc2ae6e
	 .word 0xad13ae82
	 .word 0xc9112d2c
	 .word 0x78f21574
	 .word 0xd6fc4c46
	 .word 0xad753b1c
	 .word 0xdc80d8ea
	 .word 0x8803184f
	 .word 0xd9f7b3ce
	 .word 0x23013406
	 .word 0xd3a2a038
	 .word 0x2fb75683
	 .word 0x9c1f658d
	 .word 0x57b676d0
	 .word 0x3aec250f
	 .word 0x21a2e710
	 .word 0x86401b5
	 .word 0x9107eb7d
	 .word 0x48aa6e45
	 .word 0xdd128114
	 .word 0x3557361a
	 .word 0x18db7432
	 .word 0xced9af31
	 .word 0xc878d4a9
	 .word 0x31f90880
	 .word 0x505ba42a
	 .word 0xe9bf6595
	 .word 0x46181ceb
	 .word 0x2d99011c
	 .word 0xa0b971ec
	 .word 0xe86df1b8
	 .word 0x67ea3f57
	 .word 0x5740f954
	 .word 0x261a58c0
	 .word 0x75270cd3
	 .word 0x741b0c5b
	 .word 0xfc3792c8
	 .word 0x13c29d5f
	 .word 0xa304c1ae
	 .word 0xf48d7529
	 .word 0x49849a97
	 .word 0x8552a9e8
	 .word 0x82a6cb89
	 .word 0xfa1dcace
	 .word 0xf241dcda
	 .word 0x62e9b51b
	 .word 0xa31c7f3f
	 .word 0x4ce05a83
	 .word 0xf0272c74
	 .word 0x4c6f28c0
	 .word 0x3d21a2a8
	 .word 0xc6bcfb43
	 .word 0xb568a30d
	 .word 0xfe677b67
	 .word 0x2746d63f
	 .word 0x32bd609d
	 .word 0xd2ea5d5b
	 .word 0x17d07157
	 .word 0x70047504
	 .word 0xfa6d46ca
	 .word 0x2c3d37a4
	 .word 0x8fcbf8c0
	 .word 0x11410ea4
	 .word 0x3908cc02
	 .word 0xf80c4e7f
	 .word 0xf2a01532
	 .word 0x7dc2dfd6
	 .word 0x9b268b0a
	 .word 0xa7db47e1
	 .word 0xcb058e52
	 .word 0x4e95ed07
	 .word 0xb6504b11
	 .word 0x5171a858
	 .word 0x862655ca
	 .word 0x7ae6a338
	 .word 0x47d658bd
	 .word 0xc74fb890
	 .word 0xf147d881
	 .word 0xd26b2326
	 .word 0x6a56dc80
	 .word 0x684dbf1e
	 .word 0xe72caf0b
	 .word 0xd7739aac
	 .word 0x3f33c22f
	 .word 0x94e927d
	 .word 0x53fc6163
	 .word 0x245c5066
	 .word 0x89c705d3
	 .word 0xb2fac753
	 .word 0xc83731d7
	 .word 0xb6a24596
	 .word 0x26ce79c2
	 .word 0x4109fef9
	 .word 0x1272344
	 .word 0x6285924a
	 .word 0x508559e9
	 .word 0x4f41a3a
	 .word 0x269eae82
	 .word 0x5332dfbd
	 .word 0x73406c
	 .word 0x2b3c545a
	 .word 0xc5e8db1f
	 .word 0x771fa4fd
	 .word 0x105d4f71
	 .word 0xd5248a58
	 .word 0x7fd5af53
	 .word 0x94db09ce
	 .word 0xa53fa436
	 .word 0x30b73277
	 .word 0xdf092b2b
	 .word 0x2c4f93ce
	 .word 0xef02676c
	 .word 0xaafac7fa
	 .word 0x3b624309
	 .word 0x499001d9
	 .word 0xeeff0ebf
	 .word 0xfc09af2f
	 .word 0x2b28d4d
	 .word 0xbb0bf9ae
	 .word 0x2b9fa3b5
	 .word 0xdef5d5af
	 .word 0x3d569753
	 .word 0x4baf6bd2
	 .word 0x71ab23b8
	 .word 0xe80f92e3
	 .word 0xe9ca159e
	 .word 0x6c39d1b4
	 .word 0xd16f4d75
	 .word 0xff9b8cc9
	 .word 0x84526355
	 .word 0x3c48aa11
	 .word 0x48296f66
	 .word 0x757ba4f8
	 .word 0x228d04f0
	 .word 0xe562d799
	 .word 0x32150bad
	 .word 0x980b31e1
	 .word 0x4d57222b
	 .word 0x5f08c5d3
	 .word 0xa06524
	 .word 0xe5af0857
	 .word 0xc15e2b41
	 .word 0xc4a7783c
	 .word 0x5fb449b1
	 .word 0xc99e1950
	 .word 0x76f91d5e
	 .word 0x938ae7b6
	 .word 0x25fdadde
	 .word 0xd16fa7ec
	 .word 0x77ed1a4c
	 .word 0x41ce5220
	 .word 0x23fceda8
	 .word 0x26485bb7
	 .word 0xc4b74770
	 .word 0x5e0f6041
	 .word 0x3d87c696
	 .word 0x124fb32b
	 .word 0xb62127f9
	 .word 0xa49345e9
	 .word 0x9ea85f0d
	 .word 0x7dab9a78
	 .word 0x3283e657
	 .word 0x6fdb405a
	 .word 0x5094eee2
	 .word 0x9dd82a86
	 .word 0xbb7240e8
	 .word 0x829816e3
	 .word 0xcb20dd30
	 .word 0xdb0dd43a
	 .word 0xbfc80df8
	 .word 0x25c281ce
	 .word 0x43c1676c
	 .word 0x1c87bf8
	 .word 0xea998aeb
	 .word 0xe1989b7b
	 .word 0xaa4d25b6
	 .word 0xc6a64968
	 .word 0xf86beab4
	 .word 0x19ebfcd
	 .word 0x4e3f0071
	 .word 0x8fd2f7e
	 .word 0x44c3d789
	 .word 0x8cc47dc4
	 .word 0xb2ba6b15
	 .word 0xf8f270b3
	 .word 0x9addbd9
	 .word 0x39b47f6a
	 .word 0xdd17f842
	 .word 0xb0cfa397
	 .word 0xacafe67c
	 .word 0x26608bf3
	 .word 0x769e9b19
	 .word 0x1304fb8d
	 .word 0x5fd25e2c
	 .word 0x1749081f
	 .word 0xf7f29c8
	 .word 0xff00d9cb
	 .word 0x75627833
	 .word 0xc11198e2
	 .word 0x246cf562
	 .word 0x9b00eaab
	 .word 0xa0f6c666
	 .word 0x3eacc48
	 .word 0xc2878af7
	 .word 0x78815322
	 .word 0xcb5a3051
	 .word 0x1672ec91
	 .word 0xa3f6f1e3
	 .word 0x7032b28b
	 .word 0x5890cbb3
	 .word 0xd32e61a2
	 .word 0xd3dcfb61
	 .word 0xf1a7fca8
	 .word 0xba6d482c
	 .word 0xc2da44a0
	 .word 0x97537765
	 .word 0x26796feb
	 .word 0xce64e234
	 .word 0xce209d6
	 .word 0xdc5862a7
	 .word 0x30aa2bf1
	 .word 0xedbb114f
	 .word 0x486b64d8
	 .word 0x74066202
	 .word 0x3cf22c4f
	 .word 0x52fd657f
	 .word 0xb9f9cae8
	 .word 0x24891efe
	 .word 0x6366ab8f
	 .word 0xca5b47f8
	 .word 0xfddd379f
	 .word 0x3e2259aa
	 .word 0xf017327c
	 .word 0xc2ec9319
	 .word 0x7cb617c7
	 .word 0xfe8dc3ae
	 .word 0xb9d5d79d
	 .word 0x30b5359b
	 .word 0x77927e87
	 .word 0x2c5ef8a1
	 .word 0x7bc572ff
	 .word 0x21635503
	 .word 0x8ac708c2
	 .word 0x1d62798
	 .word 0x8eb0ca38
	 .word 0x3a8a35d
	 .word 0x6be812bf
	 .word 0xa15d41ff
	 .word 0xfdd9f8a7
	 .word 0xf1e6dc2a
	 .word 0x766e240c
	 .word 0xdea8c3ab
	 .word 0x68219800
	 .word 0x8ff29c99
	 .word 0x8ddab5a0
	 .word 0x7394682f
	 .word 0xce596d06
	 .word 0x682f0af6
	 .word 0x91e0b63f
	 .word 0xa085616d
	 .word 0xc28e9c9a
	 .word 0x1178015f
	 .word 0x5b667122
	 .word 0x72a0e370
	 .word 0xe53acf6
	 .word 0x9c77afbc
	 .word 0x1e6cbad6
	 .word 0x3fbf1979
	 .word 0x7d2d732
	 .word 0xdf5fe8f0
	 .word 0x67418864
	 .word 0x75efd857
	 .word 0x62f56d0e
	 .word 0xb1ce8f4b
	 .word 0x672254b1
	 .word 0x53e7a1fb
	 .word 0x4d7556f2
	 .word 0x3b27d444
	 .word 0x37d4f828
	 .word 0x600ce4c
	 .word 0x4e79ee30
	 .word 0x43283f64
	 .word 0x5d03d695
	 .word 0x91e5ed36
	 .word 0x74b1b78b
	 .word 0x5a1bb084
	 .word 0x6f948753
	 .word 0xdeb7b607
	 .word 0x5ceec1fd
	 .word 0x7b45d13a
	 .word 0x48fe5baa
	 .word 0x81d217fe
	 .word 0xf63adb5
	 .word 0x3dba990
	 .word 0x95186772
	 .word 0x1e79401d
	 .word 0x66fb9f5f
	 .word 0xf2b54bf5
	 .word 0xae2ceffb
	 .word 0x81f0a83f
	 .word 0xfd27a3a6
	 .word 0xbd9cc7a
	 .word 0x7b9a6530
	 .word 0xf30b836d
	 .word 0x812046fe
	 .word 0xce76f735
	 .word 0x852848f9
	 .word 0xbd671b74
	 .word 0xc42659f
	 .word 0xfef97a07
	 .word 0xfeb8a8e1
	 .word 0xfa74f3b1
	 .word 0xca1a77cb
	 .word 0xa1117588
	 .word 0x8f650df9
	 .word 0x3683c530
	 .word 0xa21de5d
	 .word 0x99baa936
	 .word 0x7ea006fb
	 .word 0x5b53a7f5
	 .word 0x2f65f37a
	 .word 0x3f1eaef3
	 .word 0x9fe2b0b1
	 .word 0x65b2fd99
	 .word 0x9788e3a6
	 .word 0xfe9af9b1
	 .word 0x4bffe097
	 .word 0xcd66f117
	 .word 0x6b089300
	 .word 0xf9b8b6f
	 .word 0x5cacd5bf
	 .word 0x377b9fe8
	 .word 0xc4b812c5
	 .word 0x2f96965f
	 .word 0xfd6993f4
	 .word 0x6845404c
	 .word 0xf21c6b18
	 .word 0x5f847d67
	 .word 0x2af14d22
	 .word 0x651cd8ea
	 .word 0xf225bd05
	 .word 0xf2e7d3
	 .word 0x79fd7cf4
	 .word 0x13785d9b
	 .word 0x47ca00c4
	 .word 0xe788dc3e
	 .word 0xadac9abe
	 .word 0x3ca74582
	 .word 0xb296e43a
	 .word 0x96bd16d8
	 .word 0x5f87859e
	 .word 0xe079ee5f
	 .word 0x2ca48dc5
	 .word 0x1df0ec9
	 .word 0x7d2f0edd
	 .word 0xeeab6124
	 .word 0x73ab4737
	 .word 0x81a65eee
	 .word 0x4c6d469a
	 .word 0x6c4a4bc9
	 .word 0x6e9a5521
	 .word 0x58385ce
	 .word 0x83fc6ea9
	 .word 0x60d7445c
	 .word 0x822e7e54
	 .word 0xbb2830c7
	 .word 0x800fb7b8
	 .word 0xa39ba95b
	 .word 0xb1eb07a5
	 .word 0xdb6c868a
	 .word 0xbbc82cb3
	 .word 0x561db346
	 .word 0x97c027f1
	 .word 0x141a24ca
	 .word 0x3682706a
	 .word 0xe9cb8b6e
	 .word 0x67d63860
	 .word 0x297cc530
	 .word 0xdb90316f
	 .word 0x76407c13
	 .word 0x7fa524ed
	 .word 0x2423bd92
	 .word 0x1eba7845
	 .word 0xb0248dad
	 .word 0x4bf3e125
	 .word 0x5e3ecf63
	 .word 0xe61833b5
	 .word 0x5fd8258a
	 .word 0x88d3e52e
	 .word 0x6bb3fa6c
	 .word 0x4c96a783
	 .word 0x227999
	 .word 0x2d68f70b
	 .word 0x7fb346bb
	 .word 0x6e47a142
	 .word 0x7932ed83
	 .word 0x6b8dc41d
	 .word 0x2568b9dc
	 .word 0x12639784
	 .word 0x58b2ad03
	 .word 0x7d6a0eec
	 .word 0xdebbeb46
	 .word 0xd52c1735
	 .word 0xa5a5176e
	 .word 0x1177527
	 .word 0x370fec18
	 .word 0x3fbd2348
	 .word 0x83aad094
	 .word 0x18be11e9
	 .word 0xb7ed7604
	 .word 0xbba26a92
	 .word 0x5e248acb
	 .word 0xac62803d
	 .word 0xcdac958b
	 .word 0x5def77f6
	 .word 0xb5efde48
	 .word 0x63301e4
	 .word 0x59d2436a
	 .word 0x5fe840c3
	 .word 0xed49c1af
	 .word 0x9ab9ce54
	 .word 0x7329a153
	 .word 0xa439b559
	 .word 0x620777ee
	 .word 0x7036ce04
	 .word 0x9fe7cde0
	 .word 0xa5983811
	 .word 0xb8100746
	 .word 0x13c345e7
	 .word 0xd7a483c4
	 .word 0x88941e5e
	 .word 0xa20d8daa
	 .word 0xf4063734
	 .word 0x70e0f843
	 .word 0x14d2a030
	 .word 0x8def064c
	 .word 0xe868776f
	 .word 0x1b79ace4
	 .word 0x3dbd998
	 .word 0x3485474
	 .word 0x7d23c4a5
	 .word 0x75f72864
	 .word 0x3394c2b1
	 .word 0xf427a792
	 .word 0xb07859f2
	 .word 0x227ccaed
	 .word 0xda8641bc
	 .word 0xcad48c96
	 .word 0x4808c849
	 .word 0x70543186
	 .word 0x3a80bb8d
	 .word 0x415e4080
	 .word 0xef141772
	 .word 0x5c06dccd
	 .word 0x7d3dc625
	 .word 0x80241832
	 .word 0x53427356
	 .word 0x68df0ee4
	 .word 0x4c97e1a0
	 .word 0x27dc118d
	 .word 0x6638e979
	 .word 0x76c414a8
	 .word 0x5f0a5b51
	 .word 0xa748e1ba
	 .word 0x7a6cfac7
	 .word 0x75f56e29
	 .word 0x7a9bf2b
	 .word 0xfe1214c7
	 .word 0xd9f90594
	 .word 0xaa6b8a55
	 .word 0xf0e77b61
	 .word 0x1a461276
	 .word 0xb2becbdd
	 .word 0xf9dc09f5
	 .word 0x79799a51
	 .word 0xae371c51
	 .word 0x443599d4
	 .word 0x9ccabddd
	 .word 0xcce9b69d
	 .word 0x5de19902
	 .word 0x6515d09b
	 .word 0xbefd460
	 .word 0x43dc8d9b
	 .word 0xb71b40e0
	 .word 0x1ebd94f
	 .word 0x6aceea00
	 .word 0xfd55d3ee
	 .word 0xa3afffcc
	 .word 0xadb8c447
	 .word 0x35e1f16e
	 .word 0x523075
	 .word 0x118aa03f
	 .word 0xd367189c
	 .word 0x97626b1
	 .word 0xb64b8162
	 .word 0xe854939a
	 .word 0x5e3e97ec
	 .word 0xcd88819f
	 .word 0xc1d9cfae
	 .word 0x1ed96bc8
	 .word 0xa0e9fa5b
	 .word 0x5d25b95
	 .word 0x4ae594ad
	 .word 0xc22fda02
	 .word 0xfa4de6da
	 .word 0xfb0e3c62
	 .word 0xea0635fb
	 .word 0xfe7346ef
	 .word 0xd5a0abab
	 .word 0xa6880286
	 .word 0xa0f1dba2
	 .word 0x1f657f2
	 .word 0x8c267b24
	 .word 0xea8ada9c
	 .word 0x64920475
	 .word 0xc987f5ba
	 .word 0xcaee30b2
	 .word 0x9472ba15
	 .word 0xe8a27cbd
	 .word 0x3be9a826
	 .word 0x1a26e221
	 .word 0xbf4e5127
	 .word 0xc2f69b17
	 .word 0x3d2f5b43
	 .word 0x2e66c11a
	 .word 0x7b59a804
	 .word 0xe7dae79c
	 .word 0xadade1b3
	 .word 0xbac010eb
	 .word 0x9e68db4e
	 .word 0x9fc79142
	 .word 0x4c9ec836
	 .word 0x8509348d
	 .word 0x86ddabc9
	 .word 0xbafa5581
	 .word 0xb9f54e81
	 .word 0xc08918e3
	 .word 0x8d39d552
	 .word 0x27d4be39
	 .word 0xee499955
	 .word 0xee897f3f
	 .word 0x3b0b610f
	 .word 0x8745d9d2
	 .word 0x607c71cd
	 .word 0x3c64ec2b
	 .word 0xf00f66e7
	 .word 0xa554d1a4
	 .word 0x380725f7
	 .word 0x13be3e66
	 .word 0xeb3af234
	 .word 0x3d54029a
	 .word 0xae105ea4
	 .word 0x1fec322b
	 .word 0x2c20fdb8
	 .word 0x6f9a7c11
	 .word 0x8797fe83
	 .word 0xbb8354b7
	 .word 0xfd27bacb
	 .word 0x341c0906
	 .word 0x1d995e6c
	 .word 0x9e8d2c0c
	 .word 0x4f6e97de
	 .word 0xb016276e
	 .word 0x6247afa
	 .word 0xd9a396f2
	 .word 0x3969ba1c
	 .word 0x178a91e8
	 .word 0x4863e75b
	 .word 0x813a940
	 .word 0xa84ede6c
	 .word 0x3a63f91
	 .word 0x4e8e996a
	 .word 0xb9b8859
	 .word 0xa5bad5a0
	 .word 0x5fbdfe36
	 .word 0x1121e2fd
	 .word 0x3b8b0bf8
	 .word 0xe5b60fe6
	 .word 0x1d780ab1
	 .word 0x5fb12c7b
	 .word 0x5f47272f
	 .word 0xc8b1eb85
	 .word 0x484c4b8c
	 .word 0xaa5e44b2
	 .word 0xfdac5dac
	 .word 0xb07fbac6
	 .word 0x36fb11ea
	 .word 0x4ce659e7
	 .word 0xefccc93d
	 .word 0xc1ddb52f
	 .word 0x93484a6
	 .word 0x765cf02d
	 .word 0xf24a7397
	 .word 0xad4547f7
	 .word 0x46a919bc
	 .word 0x506f68fa
	 .word 0x5d570853
	 .word 0x546979b5
	 .word 0xe55dc1e7
	 .word 0xc3a0eff6
	 .word 0xb46e2338
	 .word 0x7d8b555a
	 .word 0xada4aa8b
	 .word 0xfc97e116
	 .word 0x646fbebf
	 .word 0xddb59060
	 .word 0x7cc5b9d6
	 .word 0xd692fbe9
	 .word 0x8d1486d3
	 .word 0xa64fe043
	 .word 0x4a702921
	 .word 0x49adf832
	 .word 0xe20e13d7
	 .word 0x348db330
	 .word 0xb2c0e19b
	 .word 0x86024fb5
	 .word 0x94c151ee
	 .word 0x39433ffc
	 .word 0xa53f7f28
	 .word 0x282a5156
	 .word 0x61a99876
	 .word 0x98e72157
	 .word 0x62ee1d86
	 .word 0xed79d15e
	 .word 0xa05735d4
	 .word 0xbd35f040
	 .word 0x38a653b2
	 .word 0xfa10b20
	 .word 0xeae47376
	 .word 0x2f5091bc
	 .word 0x11c00189
	 .word 0x5da387bc
	 .word 0x35e85616
	 .word 0x19852bc2
	 .word 0xafa4d3b0
	 .word 0xbc561e41
	 .word 0x249e9e3b
	 .word 0xfe7df578
	 .word 0xbfbda1b8
	 .word 0xc03460fa
	 .word 0xea70cd04
	 .word 0x379056a4
	 .word 0x50550a7e
	 .word 0xee8f0c00
	 .word 0xb843128
	 .word 0x89a0a5d
	 .word 0x8dcf2d1
	 .word 0x1a1a4918
	 .word 0xf5ad4037
	 .word 0xa4813900
	 .word 0xb0baca55
	 .word 0x87fbdcb7
	 .word 0x6a68c027
	 .word 0xe547bd69
	 .word 0xc398baae
	 .word 0xb3e69068
	 .word 0x7d7f850b
	 .word 0xbcf10963
	 .word 0x417824d8
	 .word 0xd4d16e52
	 .word 0xfb01c724
	 .word 0x347d5d58
	 .word 0x65a410d4
	 .word 0xb5aea214
	 .word 0x1693551f
	 .word 0xd334474c
	 .word 0x30687389
	 .word 0x276f12d5
	 .word 0x95d22693
	 .word 0x5da39d11
	 .word 0x8e5d6ee7
	 .word 0xb0dd0a97
	 .word 0x3c3512d4
	 .word 0x505765b2
	 .word 0xa363f04f
	 .word 0x2ea97ed2
	 .word 0x2058afe7
	 .word 0x51a26633
	 .word 0x39635133
	 .word 0xa7acce3f
	 .word 0xd8c9dd2
	 .word 0x716457c
	 .word 0x51adddfa
	 .word 0x981507f5
	 .word 0xf8d3c218
	 .word 0x71c57b91
	 .word 0x45ec6725
	 .word 0x9f490fb2
	 .word 0x72ae3785
	 .word 0xcf588006
	 .word 0x10cf40b7
	 .word 0xa0e9337b
	 .word 0x772bf626
	 .word 0x50a2ebb2
	 .word 0x31c553d0
	 .word 0xaecb0666
	 .word 0xe833779b
	 .word 0x7fc81a3
	 .word 0xffe0269a
	 .word 0x315794b7
	 .word 0xbad7db90
	 .word 0xbd6d5350
	 .word 0x2115fe6a
	 .word 0xca904528
	 .word 0x944e5088
	 .word 0xcbfb7414
	 .word 0x9a81801e
	 .word 0xff6ffb8b
	 .word 0x65cac4dd
	 .word 0x6d5befdb
	 .word 0x8e5072cb
	 .word 0x40a35096
	 .word 0xf4882403
	 .word 0x7f2ff916
	 .word 0x2309889c
	 .word 0xffebf2f5
	 .word 0x14c0a414
	 .word 0xa21281f3
	 .word 0x47eb51f4

attr_data {
        Name = .MAIN,
        VA= 0x60000000,
        RA= 0x170000000,
        PA= ra2pa(0x170000000,0),
        part_0_d_ctx_nonzero_ps0_tsb,
        TTE_G=1, TTE_Context=0x55, TTE_V=1, TTE_Size=0, TTE_NFO=0,
        TTE_IE=0, TTE_Soft2=0, TTE_Diag=0, TTE_Soft=0,
        TTE_L=0, TTE_CP=1, TTE_CV=0, TTE_E=0, TTE_P=0, TTE_W=1, tsbonly
        }

attr_data {
        Name = .MAIN,
        VA= 0x60000000,
        RA= 0x60000000,
        PA= ra2pa(0x60000000,0),
        part_0_d_ctx_nonzero_ps0_tsb,
        part_0_d_ctx_zero_ps0_tsb,
        TTE_G=1, TTE_Context=0, TTE_V=1, TTE_Size=0, TTE_NFO=0,
        TTE_IE=0, TTE_Soft2=0, TTE_Diag=0, TTE_Soft=0,
        TTE_L=0, TTE_CP=0, TTE_CV=0, TTE_E=0, TTE_P=0, TTE_W=1
        }
