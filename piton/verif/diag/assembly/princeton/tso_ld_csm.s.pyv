// Modified by Princeton University on June 9th, 2015
/*
* ========== Copyright Header Begin ==========================================
* 
* OpenSPARC T1 Processor File: tso_ld_starve1.s
* Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
* DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
* 
* The above named program is free software; you can redistribute it and/or
* modify it under the terms of the GNU General Public
* License version 2 as published by the Free Software Foundation.
* 
* The above named program is distributed in the hope that it will be 
* useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
* General Public License for more details.
* 
* You should have received a copy of the GNU General Public
* License along with this work; if not, write to the Free Software
* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
* 
* ========== Copyright Header End ============================================
*/
/***************************************************************************
***
***  Test Description : interrupts
***
**********************************************************************/

#include "boot.s"

.text
.global main

main:

setx	0x80, %l1, %l7
th_fork(th_main, %l0)

!----------------------
th_main_0:
<%
for i in range(0,4):
    for j in range(0, 64):
        print '''
	setx	my_data%d, %%l0, %%o0
    st	%%l0, [%%o0]''' % (j)

%>

	ba 	normal_end
	nop


th_main_1:
th_main_2:
th_main_3:
th_main_4:
th_main_5:
th_main_6:
th_main_7:
th_main_8:
th_main_9:
th_main_10:
th_main_11:
th_main_12:
th_main_13:
th_main_14:
th_main_15:
th_main_16:
th_main_17:
th_main_18:
th_main_19:
th_main_20:
th_main_21:
th_main_22:
th_main_23:
th_main_24:
th_main_25:
th_main_26:
th_main_27:
th_main_28:
th_main_29:
th_main_30:
th_main_31:

<%
for i in range(0,4):
    for j in range(0, 64):
        print '''
	setx	my_data%d, %%l0, %%o0
	ld	[%%o0], %%l0''' % (j)

%>



normal_end:
        ta      T_GOOD_TRAP
bad_end:
        ta      T_BAD_TRAP


user_text_end:

/***********************************************************************
   Test case data start
 ***********************************************************************/
.data
user_data_start:
	.skip 1000
user_data_end:

SECTION .MY_DATA0  DATA_VA=0xd0100000
attr_data {
        Name = .MY_DATA0,
        VA= 0x0d0100000
        RA= 0x1d0100000
        PA= ra2pa(0x1d0100000,0),
        part_0_d_ctx_nonzero_ps0_tsb,
        TTE_G=1, TTE_Context=0x44, TTE_V=1, TTE_Size=0, TTE_NFO=0,
        TTE_IE=0, TTE_Soft2=0, TTE_Diag=0, TTE_Soft=0,
        TTE_L=0, TTE_CP=1, TTE_CV=0, TTE_E=0, TTE_P=0, TTE_W=1
        }

        .data

.global my_data0
my_data0:
        .xword 0x0


<%
for i in range(1, 64):
    print '''
SECTION .MY_DATA%d  DATA_VA=0xd%2x%1x%1x000
attr_data {
        Name = .MY_DATA%d,
        VA= 0x0d%2x%1x%1x000
        RA= 0x1d%2x%1x%1x000
        PA= ra2pa(0x1d%2x%1x%1x000,0),
        part_0_d_ctx_nonzero_ps0_tsb,
        TTE_G=1, TTE_Context=0x44, TTE_V=1, TTE_Size=0, TTE_NFO=0,
        TTE_IE=0, TTE_Soft2=0, TTE_Diag=0, TTE_Soft=0,
        TTE_L=0, TTE_CP=1, TTE_CV=0, TTE_E=0, TTE_P=0, TTE_W=1
        }

        .data

.global my_data%d
my_data%d:
        .xword 0x0''' % (i,(16+i),(16+i)%16,(16+i)%8*2,i,(16+i),(16+i)%16,(16+i)%8*2,(16+i),(16+i)%16,(16+i)%8*2,(16+i),(16+i)%16,(16+i)%8*2,i,i)


%>


.end
