
:#define CIOP
:#define MAIN_PAGE_HV_ALSO	
:#define THREAD_MASK 0x00000003	
:#include "hboot.s"
:.global main
:main:

:th_sync(0, 0, 4000)
:th_fork(th_main)

:th_main_0:

:!Run some long latency div ops while thread 1 sends nuke/resum inetrrupts
:!Nuke when thread is in wait state

print "	setx 0x265433458, %r3, %r1\n";
print "	setx 0x846794867, %r3, %r2\n";

for ($i = 0;  $i < 50; $i++) {
  print "	udiv %r1, %r2, %r3\n";
}

:!Thread is in the halt state after hitting good trap
:   ta T_GOOD_TRAP

:th_main_1:

:! Several nuke/resum ints to thr0 while it is expected to be in wait state at sometime

:   ta T_CHANGE_HPRIV
for ($i = 0;  $i < 10; $i++) {
    $type = "2";
    $type = $type << 16;
    $thrid = 0;
    $ttype = "1";
    $data = $type | $thrid | $ttype;
    printf "\tsetx 0x%016x, %r3, %r2\n", $data;
    print "\tsetx 0x9800000800, %r3, %r1\n";
    print "\tstx %r2, [%r1]\n";	
    for ($j = 0;  $j < 20; $j++) {
      print "	nop\n";
    }
    $type = "3";
    $type = $type << 16;
    $thrid = 0;
    $ttype = "1";
    $data = $type | $thrid | $ttype;
    printf "\tsetx 0x%016x, %r3, %r2\n", $data;
    print "\tsetx 0x9800000800, %r3, %r1\n";
    print "\tstx %r2, [%r1]\n";	
    for ($j = 0;  $j < 10; $j++) {
      print "	nop\n";
    }
}
	
for ($i = 0;  $i < 300; $i++) {
  print "	nop\n"		; 
}

:!Nuke int when thr0 is in halt state
	
    $type = "2";
    $type = $type << 16;
    $thrid = 0			; 
    $ttype = "1";
    $data = $type | $thrid | $ttype;
    printf "\tsetx 0x%016x, %r3, %r2\n", $data;
    print "\tsetx 0x9800000800, %r3, %r1\n";
    print "\tstx %r2, [%r1]\n";	

for ($i = 0;  $i < 100; $i++) {
  print "	nop\n"		; 
}

:!Resume int when thr0 is in dead state
	
    $type = "3";
    $type = $type << 16;
    $thrid = 0			; 
    $ttype = "1";
    $data = $type | $thrid | $ttype;
    printf "\tsetx 0x%016x, %r3, %r2\n", $data;
    print "\tsetx 0x9800000800, %r3, %r1\n";
    print "\tstx %r2, [%r1]\n";	

for ($i = 0;  $i < 100; $i++) {
  print "	nop\n"		; 
}

:!Resume int when thr0 is in Halt state
	
    $type = "3";
    $type = $type << 16;
    $thrid = 0			; 
    $ttype = "1";
    $data = $type | $thrid | $ttype;
    printf "\tsetx 0x%016x, %r3, %r2\n", $data;
    print "\tsetx 0x9800000800, %r3, %r1\n";
    print "\tstx %r2, [%r1]\n";


:	ta T_GOOD_TRAP		
