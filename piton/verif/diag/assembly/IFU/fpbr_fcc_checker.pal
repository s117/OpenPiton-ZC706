
print "#define CIOP\n";
print "#define THREAD_MASK 0x0000000f\n";
print "#include \"boot.s\"\n";
print ".global main\n";
print "main:\n";
:        ta      0x2e
:        cmp      %o1, 0
:        be      thr0_set_fsr_addr
:        nop
:        cmp      %o1, 1
:        be      thr1_set_fsr_addr
:        nop
:        cmp      %o1, 2
:        be      thr2_set_fsr_addr
:        nop
:        cmp      %o1, 3
:        be      thr3_set_fsr_addr
:        nop
:        ta 0x01

:thr0_set_fsr_addr:
print "\tsetx thr0_fsr_addr, %r1, %r16\n";
print "\tsetx start, %r1, %r2\n";
print "\tjmp %r2\n";
print "\tnop\n";
:thr1_set_fsr_addr:
print "\tsetx thr1_fsr_addr, %r1, %r16\n";
print "\tsetx start, %r1, %r2\n";
print "\tjmp %r2\n";
print "\tnop\n";
:thr2_set_fsr_addr:
print "\tsetx thr2_fsr_addr, %r1, %r16\n";
print "\tsetx start, %r1, %r2\n";
print "\tjmp %r2\n";
print "\tnop\n";
:thr3_set_fsr_addr:
print "\tsetx thr3_fsr_addr, %r1, %r16\n";
print "\tsetx start, %r1, %r2\n";
print "\tjmp %r2\n";
print "\tnop\n";
:start:
print "\twr %g0, 0x4, %fprs\n";
print "\tsetx 0xffffffc0fffff3ff, %r1, %r17\n";

@br_inst = ("fba",
           "fbn",
           "fbu",
           "fbg",
           "fbug",
	   "fbl",
	   "fbul",
	   "fblg",
	   "fbne",
	   "fbe",
	   "fbue",
	   "fbge",
	   "fbuge",
	   "fble",
	   "fbule",
	   "fbo",
	   "fba,a",
           "fbn,a",
           "fbu,a",
           "fbg,a",
           "fbug,a",
	   "fbl,a",
	   "fbul,a",
	   "fblg,a",
	   "fbne,a",
	   "fbe,a",
	   "fbue,a",
	   "fbge,a",
	   "fbuge,a",
	   "fble,a",
	   "fbule,a",
	   "fbo,a");

$cnt = 0;
for $inst (@br_inst) {
  for ($fcc0 = 0; $fcc0 < 4; $fcc0++) {
    $sh_fcc0 = $fcc0 << 10;
    $fcc = (rand () * 100) % 64;
    printf "\tsetx 0x%08x%08x, \%r1, \%r2\n", $fcc, $sh_fcc0;
    print "\tstx %fsr, [%r16]\n";
    print "\tldx [%r16], %r3\n";
    print "\tand %r3, %r17, %r3\n";
    print "\tor %r3, %r2, %r3\n";
    print "\tstx %r3, [%r16]\n";
    print "\tldx [%r16], %fsr\n";
    $cnt++;
    print "\t$inst br_label\_$cnt\n";
    print "\tnop\n";
    print "\tnop\n";
    print "br_label\_$cnt:\n";
  }
}

@br_inst = ("fba \%fcc0,",
           "fbn \%fcc0,",
           "fbu \%fcc0,",
           "fbg \%fcc0,",
           "fbug \%fcc0,",
	   "fbl \%fcc0,",
	   "fbul \%fcc0,",
	   "fblg \%fcc0,",
	   "fbne \%fcc0,",
	   "fbe \%fcc0,",
	   "fbue \%fcc0,",
	   "fbge \%fcc0,",
	   "fbuge \%fcc0,",
	   "fble \%fcc0,",
	   "fbule \%fcc0,",
	   "fbo \%fcc0,",
	   "fba,a \%fcc0,",
           "fbn,a \%fcc0,",
           "fbu,a \%fcc0,",
           "fbg,a \%fcc0,",
           "fbug,a \%fcc0,",
	   "fbl,a \%fcc0,",
	   "fbul,a \%fcc0,",
	   "fblg,a \%fcc0,",
	   "fbne,a \%fcc0,",
	   "fbe,a \%fcc0,",
	   "fbue,a \%fcc0,",
	   "fbge,a \%fcc0,",
	   "fbuge,a \%fcc0,",
	   "fble,a \%fcc0,",
	   "fbule,a \%fcc0,",
	   "fbo,a \%fcc0,");

for $inst (@br_inst) {
  for ($fcc0 = 0; $fcc0 < 4; $fcc0++) {
    $sh_fcc0 = $fcc0 << 10;
    $fcc = (rand () * 100) % 64;
    printf "\tsetx 0x%08x%08x, \%r1, \%r2\n", $fcc, $sh_fcc0;
    print "\tstx %fsr, [%r16]\n";
    print "\tldx [%r16], %r3\n";
    print "\tand %r3, %r17, %r3\n";
    print "\tor %r3, %r2, %r3\n";
    print "\tstx %r3, [%r16]\n";
    print "\tldx [%r16], %fsr\n";
    $cnt++;
    print "\t$inst br_label\_$cnt\n";
    print "\tnop\n";
    print "\tnop\n";
    print "br_label\_$cnt:\n";
  }
}

@br_inst = ("fba \%fcc1,",
           "fbn \%fcc1,",
           "fbu \%fcc1,",
           "fbg \%fcc1,",
           "fbug \%fcc1,",
	   "fbl \%fcc1,",
	   "fbul \%fcc1,",
	   "fblg \%fcc1,",
	   "fbne \%fcc1,",
	   "fbe \%fcc1,",
	   "fbue \%fcc1,",
	   "fbge \%fcc1,",
	   "fbuge \%fcc1,",
	   "fble \%fcc1,",
	   "fbule \%fcc1,",
	   "fbo \%fcc1,",
	   "fba,a \%fcc1,",
           "fbn,a \%fcc1,",
           "fbu,a \%fcc1,",
           "fbg,a \%fcc1,",
           "fbug,a \%fcc1,",
	   "fbl,a \%fcc1,",
	   "fbul,a \%fcc1,",
	   "fblg,a \%fcc1,",
	   "fbne,a \%fcc1,",
	   "fbe,a \%fcc1,",
	   "fbue,a \%fcc1,",
	   "fbge,a \%fcc1,",
	   "fbuge,a \%fcc1,",
	   "fble,a \%fcc1,",
	   "fbule,a \%fcc1,",
	   "fbo,a \%fcc1,");

for $inst (@br_inst) {
  for ($fcc1 = 0; $fcc1 < 4; $fcc1++) {
    $fcc0 = (rand () * 10) % 4;
    $sh_fcc0 = $fcc0 << 10;
    $fcc2 = (rand () * 10) % 4;
    $fcc3 = (rand () * 10) % 4;
    $sh_fcc1 = ($fcc2 << 2) | $fcc1;
    printf "\tsetx 0x%07x%1x%08x, \%r1, \%r2\n", $fcc3, $sh_fcc1, $sh_fcc0;
    print "\tstx %fsr, [%r16]\n";
    print "\tldx [%r16], %r3\n";
    print "\tand %r3, %r17, %r3\n";
    print "\tor %r3, %r2, %r3\n";
    print "\tstx %r3, [%r16]\n";
    print "\tldx [%r16], %fsr\n";
    $cnt++;
    print "\t$inst br_label\_$cnt\n";
    print "\tnop\n";
    print "\tnop\n";
    print "br_label\_$cnt:\n";
  }
}

@br_inst = ("fba \%fcc2,",
           "fbn \%fcc2,",
           "fbu \%fcc2,",
           "fbg \%fcc2,",
           "fbug \%fcc2,",
	   "fbl \%fcc2,",
	   "fbul \%fcc2,",
	   "fblg \%fcc2,",
	   "fbne \%fcc2,",
	   "fbe \%fcc2,",
	   "fbue \%fcc2,",
	   "fbge \%fcc2,",
	   "fbuge \%fcc2,",
	   "fble \%fcc2,",
	   "fbule \%fcc2,",
	   "fbo \%fcc2,",
	   "fba,a \%fcc2,",
           "fbn,a \%fcc2,",
           "fbu,a \%fcc2,",
           "fbg,a \%fcc2,",
           "fbug,a \%fcc2,",
	   "fbl,a \%fcc2,",
	   "fbul,a \%fcc2,",
	   "fblg,a \%fcc2,",
	   "fbne,a \%fcc2,",
	   "fbe,a \%fcc2,",
	   "fbue,a \%fcc2,",
	   "fbge,a \%fcc2,",
	   "fbuge,a \%fcc2,",
	   "fble,a \%fcc2,",
	   "fbule,a \%fcc2,",
	   "fbo,a \%fcc2,");

for $inst (@br_inst) {
  for ($fcc2 = 0; $fcc2 < 4; $fcc2++) {
    $fcc0 = (rand () * 10) % 4;
    $sh_fcc0 = $fcc0 << 10;
    $fcc1 = (rand () * 10) % 4;
    $fcc3 = (rand () * 10) % 4;
    $sh_fcc2 = ($fcc2 << 2) | $fcc1;
    printf "\tsetx 0x%07x%1x%08x, \%r1, \%r2\n", $fcc3, $sh_fcc2, $sh_fcc0;
    print "\tstx %fsr, [%r16]\n";
    print "\tldx [%r16], %r3\n";
    print "\tand %r3, %r17, %r3\n";
    print "\tor %r3, %r2, %r3\n";
    print "\tstx %r3, [%r16]\n";
    print "\tldx [%r16], %fsr\n";
    $cnt++;
    print "\t$inst br_label\_$cnt\n";
    print "\tnop\n";
    print "\tnop\n";
    print "br_label\_$cnt:\n";
  }
}

@br_inst = ("fba \%fcc3,",
           "fbn \%fcc3,",
           "fbu \%fcc3,",
           "fbg \%fcc3,",
           "fbug \%fcc3,",
	   "fbl \%fcc3,",
	   "fbul \%fcc3,",
	   "fblg \%fcc3,",
	   "fbne \%fcc3,",
	   "fbe \%fcc3,",
	   "fbue \%fcc3,",
	   "fbge \%fcc3,",
	   "fbuge \%fcc3,",
	   "fble \%fcc3,",
	   "fbule \%fcc3,",
	   "fbo \%fcc3,",
	   "fba,a \%fcc3,",
           "fbn,a \%fcc3,",
           "fbu,a \%fcc3,",
           "fbg,a \%fcc3,",
           "fbug,a \%fcc3,",
	   "fbl,a \%fcc3,",
	   "fbul,a \%fcc3,",
	   "fblg,a \%fcc3,",
	   "fbne,a \%fcc3,",
	   "fbe,a \%fcc3,",
	   "fbue,a \%fcc3,",
	   "fbge,a \%fcc3,",
	   "fbuge,a \%fcc3,",
	   "fble,a \%fcc3,",
	   "fbule,a \%fcc3,",
	   "fbo,a \%fcc3,");

for $inst (@br_inst) {
  for ($fcc3 = 0; $fcc3 < 4; $fcc3++) {
    $fcc0 = (rand () * 10) % 4;
    $sh_fcc0 = $fcc0 << 10;
    $fcc1 = (rand () * 10) % 4;
    $fcc2 = (rand () * 10) % 4;
    $sh_fcc1_2 = ($fcc2 << 2) | $fcc1;
    printf "\tsetx 0x%07x%1x%08x, \%r1, \%r2\n", $fcc3, $sh_fcc1_2, $sh_fcc0;
    print "\tstx %fsr, [%r16]\n";
    print "\tldx [%r16], %r3\n";
    print "\tand %r3, %r17, %r3\n";
    print "\tor %r3, %r2, %r3\n";
    print "\tstx %r3, [%r16]\n";
    print "\tldx [%r16], %fsr\n";
    $cnt++;
    print "\t$inst br_label\_$cnt\n";
    print "\tnop\n";
    print "\tnop\n";
    print "br_label\_$cnt:\n";
  }
}

print "\tta T_GOOD_TRAP\n";

print ".data\n";
print ".align 0x20\n";
print "thr0_fsr_addr:\n";
print ".xword 0x0\n";
print ".align 0x20\n";
print "thr1_fsr_addr:\n";
print ".xword 0x0\n";
print ".align 0x20\n";
print "thr2_fsr_addr:\n";
print ".xword 0x0\n";
print ".align 0x20\n";
print "thr3_fsr_addr:\n";
print ".xword 0x0\n";
